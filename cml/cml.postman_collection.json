{
	"info": {
		"_postman_id": "9a404fa6-4659-4098-8079-29f70eb2c791",
		"name": "Cisco Modeling Labs (CML)",
		"description": "On-box documentation: https://10.10.20.161/api/v0/ui/#/",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication and General",
			"item": [
				{
					"name": "Request auth token (login)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
						},
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/authenticate",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"authenticate"
							]
						}
					},
					"response": [
						{
							"name": "Failure: bad creds",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}1\"\r\n}"
								},
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/authenticate",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"authenticate"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:20:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "\"Authentication failed!\""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"{{username}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
								},
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/authenticate",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"authenticate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:17:18 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb20uY2lzY28udmlybCIsImlhdCI6MTYwOTMzMDYzOCwiZXhwIjoxNjA5NDE3MDM4LCJzdWIiOiIxMDIifQ.MYNMThiIhPX81MlAE0DalylSk2usZwCe7I34oeX7mqc\""
						},
						{
							"name": "Failure: missing body",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/authenticate",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"authenticate"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:21:09 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "173"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "{\n    \"description\": \"The API at /api/v0/authenticate encountered a JSON parsing error while processing your request.  Please report this problem to support.\",\n    \"code\": 400\n}"
						}
					]
				},
				{
					"name": "Test auth token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/authok",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"authok"
							]
						}
					},
					"response": [
						{
							"name": "Failure: bad auth token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/authok",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"authok"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:57:58 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "67"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "{\n    \"description\": \"Signature verification failed\",\n    \"code\": 401\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/authok",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"authok"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:57:51 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "4"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "\"OK\""
						}
					]
				},
				{
					"name": "Get system health",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/system_health",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"system_health"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/system_health",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"system_health"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:52:25 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"valid\": true,\n    \"details\": {\n        \"cluster_1\": {\n            \"compute_1\": {\n                \"has_hw_acceleration\": true,\n                \"enough_cpus\": true,\n                \"has_refplat_images\": true,\n                \"lld_connected\": true,\n                \"valid\": true\n            },\n            \"valid\": true\n        }\n    },\n    \"is_licensed\": true\n}"
						}
					]
				},
				{
					"name": "Get system statistics",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/system_stats",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"system_stats"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/system_stats",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"system_stats"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:54:39 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"clusters\": {\n        \"cluster_1\": {\n            \"high_level_drivers\": {\n                \"compute_1\": {\n                    \"cpu\": {\n                        \"load\": [\n                            1.51,\n                            1.81,\n                            1.98\n                        ],\n                        \"count\": 12,\n                        \"percent\": 15.6,\n                        \"model\": \"Intel(R) Xeon(R) CPU E5-4669 v4 @ 2.20GHz\"\n                    },\n                    \"memory\": {\n                        \"total\": 67280789504,\n                        \"free\": 50574946304,\n                        \"used\": 16050384896\n                    },\n                    \"disk\": {\n                        \"total\": 62799216640,\n                        \"free\": 48580702208,\n                        \"used\": 14218514432\n                    },\n                    \"dominfo\": {\n                        \"allocated_cpus\": 12,\n                        \"allocated_memory\": 25690112,\n                        \"total_vms\": 6,\n                        \"running_vms\": 6\n                    }\n                }\n            }\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get system information",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/system_information",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"system_information"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/system_information",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"system_information"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:58:31 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"version\": \"2.0.1-b2\",\n    \"ready\": true\n}"
						}
					]
				},
				{
					"name": "Get node definitions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/node_definitions",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"node_definitions"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/node_definitions",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"node_definitions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:53:19 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"external_connector\",\n        \"data\": {\n            \"id\": \"external_connector\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": null\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": false,\n                    \"default_count\": 1,\n                    \"physical\": [\n                        \"port\"\n                    ],\n                    \"serial_ports\": 0\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": false,\n                    \"cpus\": false,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                },\n                \"node\": {\n                    \"ram\": false,\n                    \"cpus\": false,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                }\n            },\n            \"general\": {\n                \"description\": \"Connect to devices outside of the simulation\",\n                \"nature\": \"external_connector\",\n                \"read_only\": true\n            },\n            \"schema_version\": \"0.0.1\",\n            \"sim\": {\n                \"linux_native\": {\n                    \"driver\": \"external_connector\",\n                    \"libvirt_domain_driver\": \"none\"\n                }\n            },\n            \"boot\": {\n                \"timeout\": 5\n            },\n            \"ui\": {\n                \"description\": \"The external connector can be configured either in\\n\\n- **NAT** mode -or-\\n- **Bridge** mode.\\n\\nWhen configured in bridge mode then the node connected to the\\nexternal connector will be placed in the same network as the\\nCML^2 appliance and thus can be reached from the outside given\\nit can acquire an IP via DHCP or IPv6 RAs, if available on the\\nsegment. Or the node has a properly configured static address.\",\n                \"group\": \"Others\",\n                \"icon\": \"cloud\",\n                \"label\": \"External Connector\",\n                \"label_prefix\": \"ext-conn-\",\n                \"visible\": true\n            }\n        }\n    },\n    {\n        \"id\": \"server\",\n        \"data\": {\n            \"id\": \"server\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": \"server\"\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"cfg\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"iosxe_config.txt\",\n                            \"content\": \"# this is a shell script which will be sourced at boot\\nhostname inserthostname_here\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": false,\n                    \"default_count\": 1,\n                    \"physical\": [\n                        \"eth0\",\n                        \"eth1\",\n                        \"eth2\",\n                        \"eth3\",\n                        \"eth4\",\n                        \"eth5\",\n                        \"eth6\",\n                        \"eth7\",\n                        \"eth8\",\n                        \"eth9\"\n                    ],\n                    \"serial_ports\": 1\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": true,\n                    \"boot_disk_size\": true\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": true,\n                    \"boot_disk_size\": true\n                }\n            },\n            \"general\": {\n                \"description\": \"Tiny Core Linux\",\n                \"nature\": \"server\",\n                \"read_only\": true\n            },\n            \"schema_version\": \"0.0.1\",\n            \"sim\": {\n                \"linux_native\": {\n                    \"cpus\": 1,\n                    \"disk_driver\": \"virtio\",\n                    \"driver\": \"server\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"virtio\",\n                    \"ram\": 96,\n                    \"boot_disk_size\": 16,\n                    \"video\": {\n                        \"memory\": 16\n                    }\n                }\n            },\n            \"boot\": {\n                \"completed\": [\n                    \"###### BOOT CONFIG DONE ######\"\n                ],\n                \"timeout\": 20\n            },\n            \"pyats\": {\n                \"os\": \"linux\"\n            },\n            \"ui\": {\n                \"description\": \"Tiny Core Linux\\n\\n96 MB DRAM, 1 vCPU\\n\\n##### Configuration\\nShell commands in the configuration field of the\\nnode are just sourced as user `root` when the node\\nstarts up. Tiny Core Linux is pretty much a RAM disk\\nbased distribution; unless a backup is initiated using\\nthe `backup` command, there's nothing saved when\\nrestarting / reloading a node. The default username\\nis `tc` without a password. There is also a user\\n`cisco` with password `cisco`. Additional packages\\ncan be installed using the interactive `tce` command.\\nThis, of course, requires external connectivity to\\nreach the repo servers. For further information click\\n[here](http://www.tinycorelinux.net/concepts.html).\\n\\n##### Example\\n```shell\\nhostname server-0\\nifconfig eth1 10.0.0.1 netmask 255.255.255.0 up\\nroute add -net 10.0.0.0/8 dev eth1\\n```\",\n                \"group\": \"Others\",\n                \"icon\": \"server\",\n                \"label\": \"Server\",\n                \"label_prefix\": \"server-\",\n                \"visible\": true\n            }\n        }\n    },\n    {\n        \"id\": \"unmanaged_switch\",\n        \"data\": {\n            \"id\": \"unmanaged_switch\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": null\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": false,\n                    \"default_count\": 8,\n                    \"physical\": [\n                        \"port0\",\n                        \"port1\",\n                        \"port2\",\n                        \"port3\",\n                        \"port4\",\n                        \"port5\",\n                        \"port6\",\n                        \"port7\",\n                        \"port8\",\n                        \"port9\",\n                        \"port10\",\n                        \"port11\",\n                        \"port12\",\n                        \"port13\",\n                        \"port14\",\n                        \"port15\",\n                        \"port16\",\n                        \"port17\",\n                        \"port18\",\n                        \"port19\",\n                        \"port20\",\n                        \"port21\",\n                        \"port22\",\n                        \"port23\",\n                        \"port24\",\n                        \"port25\",\n                        \"port26\",\n                        \"port27\",\n                        \"port28\",\n                        \"port29\",\n                        \"port30\",\n                        \"port31\"\n                    ],\n                    \"serial_ports\": 0\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": false,\n                    \"cpus\": false,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                },\n                \"node\": {\n                    \"ram\": false,\n                    \"cpus\": false,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                }\n            },\n            \"general\": {\n                \"description\": \"Unmanaged Switch\",\n                \"nature\": \"switch\",\n                \"read_only\": true\n            },\n            \"schema_version\": \"0.0.1\",\n            \"sim\": {\n                \"linux_native\": {\n                    \"driver\": \"unmanaged_switch\",\n                    \"libvirt_domain_driver\": \"none\"\n                }\n            },\n            \"boot\": {\n                \"timeout\": 5\n            },\n            \"ui\": {\n                \"description\": \"This is a simple virtual switch, no memory/CPU settings,\\nno configuration.\\n\\nThis is basically a Linux bridge.\\n\",\n                \"group\": \"Others\",\n                \"icon\": \"switch\",\n                \"label\": \"Unmanaged Switch\",\n                \"label_prefix\": \"unmanaged-switch-\",\n                \"visible\": true\n            }\n        }\n    },\n    {\n        \"id\": \"alpine\",\n        \"data\": {\n            \"id\": \"alpine\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": \"server\"\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"cfg\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"node.cfg\",\n                            \"content\": \"# this is a shell script which will be sourced at boot\\n# if you change the hostname then you need to add a\\n# /etc/hosts entry as well\\n# hostname inserthostname_here\\n# like this:\\n# echo \\\"127.0.0.1   inserthostname_here\\\" >>/etc/hosts\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": false,\n                    \"default_count\": 1,\n                    \"physical\": [\n                        \"eth0\",\n                        \"eth1\",\n                        \"eth2\",\n                        \"eth3\"\n                    ],\n                    \"serial_ports\": 1\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": true,\n                    \"boot_disk_size\": true\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": true,\n                    \"boot_disk_size\": true\n                }\n            },\n            \"general\": {\n                \"description\": \"Alpine Linux\",\n                \"nature\": \"server\",\n                \"read_only\": true\n            },\n            \"schema_version\": \"0.0.1\",\n            \"sim\": {\n                \"linux_native\": {\n                    \"cpus\": 1,\n                    \"disk_driver\": \"virtio\",\n                    \"driver\": \"server\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"virtio\",\n                    \"ram\": 512,\n                    \"boot_disk_size\": 16,\n                    \"video\": {\n                        \"memory\": 16\n                    }\n                }\n            },\n            \"boot\": {\n                \"completed\": [\n                    \"Welcome to Alpine Linux\"\n                ],\n                \"timeout\": 60\n            },\n            \"pyats\": {\n                \"os\": \"linux\"\n            },\n            \"ui\": {\n                \"description\": \"Alpine Linux\\n\\n512 MB DRAM, 1 vCPU, 16GB base disk\\n\\n##### Configuration\\nShell commands in the configuration field of the node are just sourced as user `root`\\nwhen the node starts up. This is based on Alpine Linux. More info [here](https://wiki.alpinelinux.org/wiki/Main_Page)\\n\\n##### Users\\nThe 'root' user has the password 'cisco' and there's a 'cisco/cisco' user, too. This image has a couple of tools:\\n\\n- iperf -- basic traffic generation\\n- routem -- OSPF/BGP control plane traffic generation\\n- tcpdump, traceroute, ping, telnet, ssh\\n- runs a SSH daemon\\n\\n##### Example\\n```shell\\nhostname desktop-0\\nip address add 10.0.0.10/24 dev eth1\\nip link set dev eth1 up\\nip route add 10.0.0.0/8 dev eth1\\nip route add default via 10.0.0.1\\n```\\n\\n[Link](https://www.alpinelinux.org/)\\n\",\n                \"group\": \"Others\",\n                \"icon\": \"server\",\n                \"label\": \"Alpine\",\n                \"label_prefix\": \"alpine-\",\n                \"visible\": true\n            }\n        }\n    },\n    {\n        \"id\": \"trex\",\n        \"data\": {\n            \"id\": \"trex\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": null\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"cfg\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"node.cfg\",\n                            \"content\": \"# this is a shell script which will be sourced at boot\\n# if you change the hostname then you need to add a\\n# /etc/hosts entry as well\\n# hostname inserthostname_here\\n# like this:\\n# echo \\\"127.0.0.1   inserthostname_here\\\" >>/etc/hosts\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": false,\n                    \"default_count\": 2,\n                    \"management\": [\n                        \"eth0\"\n                    ],\n                    \"physical\": [\n                        \"eth0\",\n                        \"eth1\",\n                        \"eth2\"\n                    ],\n                    \"serial_ports\": 1\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": true,\n                    \"boot_disk_size\": true\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": true,\n                    \"boot_disk_size\": true\n                }\n            },\n            \"general\": {\n                \"description\": \"Alpine Linux\",\n                \"nature\": \"server\",\n                \"read_only\": true\n            },\n            \"schema_version\": \"0.0.1\",\n            \"sim\": {\n                \"linux_native\": {\n                    \"cpus\": 1,\n                    \"disk_driver\": \"virtio\",\n                    \"driver\": \"server\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"virtio\",\n                    \"ram\": 512\n                }\n            },\n            \"boot\": {\n                \"completed\": [\n                    \"VIRL^2 TRex Node\"\n                ],\n                \"timeout\": 60\n            },\n            \"pyats\": {\n                \"os\": \"linux\"\n            },\n            \"ui\": {\n                \"description\": \"Cisco TRex Traffic Generator Container\\n\\n(runs in *stateless* mode)\\n\\n512 MB DRAM\\n\\n##### Important\\nTRex **MUST** have at least 2 interfaces. The first interface is used for\\nmanagement (consider to connect it using a bridged external connector and\\ngiving it a static IP so that a GUI can be connected to it), the 2nd and\\n3rd interface is for data. The 3rd interface is optional.\\n\\nThe GUI can be downloaded from\\n[here](https://github.com/cisco-system-traffic-generator/trex-stateless-gui),\\nsearch for \\\"Builds\\\". Ensure the version matches the image.\\n\",\n                \"group\": \"Others\",\n                \"icon\": \"access_point\",\n                \"label\": \"TRex\",\n                \"label_prefix\": \"trex-\",\n                \"visible\": true\n            }\n        }\n    },\n    {\n        \"id\": \"wan_emulator\",\n        \"data\": {\n            \"id\": \"wan_emulator\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": \"wan_emulator\"\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"cfg\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"node.cfg\",\n                            \"content\": \"LATENCY=\\\"100\\\"\\nJITTER=\\\"0\\\"\\nLOSS=\\\"0.0\\\"\\nBANDWIDTH=\\\"512\\\"\\n\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": false,\n                    \"default_count\": 2,\n                    \"physical\": [\n                        \"eth0\",\n                        \"eth1\"\n                    ],\n                    \"serial_ports\": 1\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": false,\n                    \"cpus\": false,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                },\n                \"node\": {\n                    \"ram\": false,\n                    \"cpus\": false,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                }\n            },\n            \"general\": {\n                \"description\": \"WAN Emulator\",\n                \"nature\": \"server\",\n                \"read_only\": true\n            },\n            \"schema_version\": \"0.0.1\",\n            \"sim\": {\n                \"linux_native\": {\n                    \"cpus\": 1,\n                    \"disk_driver\": \"virtio\",\n                    \"driver\": \"server\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"virtio\",\n                    \"ram\": 512\n                }\n            },\n            \"boot\": {\n                \"completed\": [\n                    \"VIRL^2 WAN Emulator\"\n                ],\n                \"timeout\": 60\n            },\n            \"ui\": {\n                \"description\": \"WAN Emulator Node\\n\\n512 MB DRAM\\n\\nEmulate WAN characteristics such as delay and packet loss.\\n\\n##### Configuration\\nCan be static using variables put into the\\nconfiguration field of the node as shown here\\n\\n```plain\\nLATENCY=\\\"100\\\"\\nJITTER=\\\"0\\\"\\nLOSS=\\\"0.0\\\"\\nBANDWIDTH=\\\"512\\\"\\n```\\n\\nThere's also a text based UI available on the console\\nof the node that allows to configure and monitor the\\nWAN emulator.\\n\",\n                \"group\": \"Others\",\n                \"icon\": \"access_point\",\n                \"label\": \"WAN Emulator\",\n                \"label_prefix\": \"wan-em-\",\n                \"visible\": true\n            }\n        }\n    },\n    {\n        \"id\": \"asav\",\n        \"data\": {\n            \"id\": \"asav\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": \"asav\"\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"disk\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"day0-config\",\n                            \"content\": \"\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": false,\n                    \"default_count\": 2,\n                    \"management\": [\n                        \"Management0/0\"\n                    ],\n                    \"physical\": [\n                        \"Management0/0\",\n                        \"GigabitEthernet0/0\",\n                        \"GigabitEthernet0/1\",\n                        \"GigabitEthernet0/2\",\n                        \"GigabitEthernet0/3\",\n                        \"GigabitEthernet0/4\",\n                        \"GigabitEthernet0/5\",\n                        \"GigabitEthernet0/6\"\n                    ],\n                    \"serial_ports\": 1\n                }\n            },\n            \"general\": {\n                \"description\": \"Cisco Adaptive Security Virtual Appliance\",\n                \"nature\": \"firewall\",\n                \"read_only\": true\n            },\n            \"schema_version\": \"0.0.1\",\n            \"sim\": {\n                \"linux_native\": {\n                    \"cpus\": 1,\n                    \"disk_driver\": \"virtio\",\n                    \"driver\": \"asav\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"virtio\",\n                    \"ram\": 2048\n                }\n            },\n            \"boot\": {\n                \"timeout\": 120,\n                \"completed\": [\n                    \"INFO: Power-On Self-Test complete.\"\n                ]\n            },\n            \"pyats\": {\n                \"os\": \"asa\",\n                \"config_extract_command\": \"show run\"\n            },\n            \"ui\": {\n                \"description\": \"Cisco Adaptive Security Virtual Appliance (ASAv)\\n\\n2 GB DRAM, 1 vCPU\\n\\nMaximum 8 interfaces, including Management0/0.\\n\\n[CCO Link](https://www.cisco.com/c/en/us/support/security/virtual-adaptive-security-appliance-firewall/tsd-products-support-series-home.html)\",\n                \"group\": \"Cisco\",\n                \"icon\": \"firewall\",\n                \"label\": \"ASAv\",\n                \"label_prefix\": \"asav-\",\n                \"visible\": true\n            }\n        }\n    },\n    {\n        \"id\": \"coreos\",\n        \"data\": {\n            \"id\": \"coreos\",\n            \"sim\": {\n                \"linux_native\": {\n                    \"driver\": \"server\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"disk_driver\": \"virtio\",\n                    \"nic_driver\": \"virtio\",\n                    \"ram\": 2048,\n                    \"cpus\": 2,\n                    \"data_volume\": 0,\n                    \"boot_disk_size\": 64\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": true,\n                    \"boot_disk_size\": true\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": true,\n                    \"boot_disk_size\": true\n                }\n            },\n            \"general\": {\n                \"nature\": \"server\",\n                \"description\": \"CoreOS Container Linux\",\n                \"read_only\": true\n            },\n            \"schema_version\": \"0.0.1\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": \"server\"\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"config-2\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"/openstack/latest/meta_data.json\",\n                            \"content\": \"{\\\"hostname\\\": \\\"coreos.virl.lab\\\"}\",\n                            \"editable\": false\n                        },\n                        {\n                            \"name\": \"/openstack/latest/user_data\",\n                            \"content\": \"#cloud-config\\nusers:\\n- gecos: \\\"user configured for console login via cisco/cisco\\\"\\n  groups:\\n  - sudo\\n  - docker\\n  - wheel\\n  name: cisco\\n  # password hash is \\\"cisco\\\"\\n  # see https://coreos.com/os/docs/latest/clc-examples.html#generating-a-password-hash\\n  # for methods to create your own password hash\\n  passwd: \\\"$1$ZmGq.4za$8JZnpj4SkcF9v3AJQaOX//\\\"\\n  # this key will be added to the user \\\"cisco\\\"\\n  ssh_authorized_keys:\\n  - your-ssh-pubkey-line-for-user-cisco-goes-here\\n# this key will be added to the user \\\"core\\\"\\nssh_authorized_keys:\\n- your-ssh-pubkey-line-for-user-core-goes-here\\n\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"physical\": [\n                        \"eth0\",\n                        \"eth1\",\n                        \"eth2\",\n                        \"eth3\",\n                        \"eth4\",\n                        \"eth5\",\n                        \"eth6\",\n                        \"eth7\"\n                    ],\n                    \"has_loopback_zero\": false,\n                    \"default_count\": 1,\n                    \"serial_ports\": 1\n                }\n            },\n            \"boot\": {\n                \"timeout\": 60,\n                \"completed\": [\n                    \"SSH host key: SHA256\"\n                ]\n            },\n            \"pyats\": {\n                \"os\": \"linux\"\n            },\n            \"ui\": {\n                \"group\": \"Others\",\n                \"icon\": \"server\",\n                \"label\": \"CoreOS\",\n                \"label_prefix\": \"coreos-\",\n                \"visible\": true,\n                \"description\": \"CoreOS Container Linux\\n\\n1 GB DRAM, 1 vCPU\\n\\n##### Configuration\\n\\nThis CoreOS image uses cloud-init YAML for configuration. See\\ndocumentation pages. The default config simply adds an SSH key,\\nAccessing the host via SSH obviously requires connectivity from\\nthe outside world.\\n\\n- [Cloud-Init](https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html#version-2)\\n- [Migrating from Cloud-Init to Ignition](https://coreos.com/os/docs/latest/migrating-to-clcs.html)\\n- [Ignition examples](https://coreos.com/os/docs/latest/clc-examples.html)\\n\\nNote that the current template only supports Cloud-Init. We\\nneed to have a different template with different config disk\\nlayout to support Ignition!\\n\\n[Link](http://coreos.com/os/docs/latest/)\\n\"\n            }\n        }\n    },\n    {\n        \"id\": \"csr1000v\",\n        \"data\": {\n            \"id\": \"csr1000v\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": \"csr1000v\"\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"disk\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"iosxe_config.txt\",\n                            \"content\": \"hostname inserthostname_here\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": true,\n                    \"default_count\": 4,\n                    \"loopback\": [\n                        \"Loopback0\"\n                    ],\n                    \"physical\": [\n                        \"GigabitEthernet1\",\n                        \"GigabitEthernet2\",\n                        \"GigabitEthernet3\",\n                        \"GigabitEthernet4\",\n                        \"GigabitEthernet5\",\n                        \"GigabitEthernet6\",\n                        \"GigabitEthernet7\",\n                        \"GigabitEthernet8\",\n                        \"GigabitEthernet9\",\n                        \"GigabitEthernet10\",\n                        \"GigabitEthernet11\",\n                        \"GigabitEthernet12\",\n                        \"GigabitEthernet13\",\n                        \"GigabitEthernet14\",\n                        \"GigabitEthernet15\",\n                        \"GigabitEthernet16\",\n                        \"GigabitEthernet17\",\n                        \"GigabitEthernet18\",\n                        \"GigabitEthernet19\",\n                        \"GigabitEthernet20\",\n                        \"GigabitEthernet21\",\n                        \"GigabitEthernet22\",\n                        \"GigabitEthernet23\",\n                        \"GigabitEthernet24\",\n                        \"GigabitEthernet25\",\n                        \"GigabitEthernet26\",\n                        \"GigabitEthernet27\",\n                        \"GigabitEthernet28\",\n                        \"GigabitEthernet29\",\n                        \"GigabitEthernet30\",\n                        \"GigabitEthernet31\",\n                        \"GigabitEthernet32\"\n                    ],\n                    \"serial_ports\": 2\n                }\n            },\n            \"general\": {\n                \"description\": \"Cloud Services Router 1000V\",\n                \"nature\": \"router\",\n                \"read_only\": true\n            },\n            \"schema_version\": \"0.0.1\",\n            \"sim\": {\n                \"linux_native\": {\n                    \"cpus\": 1,\n                    \"disk_driver\": \"virtio\",\n                    \"driver\": \"csr1000v\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"virtio\",\n                    \"ram\": 3072\n                }\n            },\n            \"boot\": {\n                \"timeout\": 250,\n                \"completed\": [\n                    \"Would you like to enter the initial configuration dialog?\",\n                    \"Press RETURN to get started!\",\n                    \"%CVAC-4-CONFIG_DONE:\"\n                ]\n            },\n            \"pyats\": {\n                \"os\": \"iosxe\",\n                \"series\": \"csr1000v\",\n                \"config_extract_command\": \"show run\"\n            },\n            \"ui\": {\n                \"description\": \"Cloud Services Router 1000V\\n\\n3 GB DRAM, 1 vCPU\\n\\n[CCO Link](https://www.cisco.com/c/en/us/support/routers/cloud-services-router-1000v-series/tsd-products-support-series-home.html)\\n[Release Notes](https://www.cisco.com/c/en/us/td/docs/routers/csr1000/release/notes/xe-16/csr1000v-rn-16-6-book.html)\",\n                \"group\": \"Cisco\",\n                \"icon\": \"router\",\n                \"label\": \"CSR1000v\",\n                \"label_prefix\": \"csr1000v-\",\n                \"visible\": true\n            }\n        }\n    },\n    {\n        \"id\": \"desktop\",\n        \"data\": {\n            \"id\": \"desktop\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": \"desktop\"\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"cfg\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"node.cfg\",\n                            \"content\": \"# this is a shell script which will be sourced at boot\\n# if you change the hostname then you need to add a\\n# /etc/hosts entry as well to make X11 happy\\n# hostname inserthostname_here\\n# like this:\\n# echo \\\"127.0.0.1   inserthostname_here\\\" >>/etc/hosts\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": false,\n                    \"default_count\": 1,\n                    \"physical\": [\n                        \"eth0\",\n                        \"eth1\",\n                        \"eth2\",\n                        \"eth3\"\n                    ],\n                    \"serial_ports\": 1\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": true,\n                    \"boot_disk_size\": true\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": true,\n                    \"boot_disk_size\": true\n                }\n            },\n            \"general\": {\n                \"description\": \"Alpine Linux with X11 Desktop\",\n                \"nature\": \"server\",\n                \"read_only\": true\n            },\n            \"schema_version\": \"0.0.1\",\n            \"sim\": {\n                \"linux_native\": {\n                    \"cpus\": 1,\n                    \"disk_driver\": \"virtio\",\n                    \"driver\": \"server\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"virtio\",\n                    \"ram\": 512,\n                    \"boot_disk_size\": 16,\n                    \"video\": {\n                        \"memory\": 16\n                    }\n                }\n            },\n            \"boot\": {\n                \"completed\": [\n                    \"Welcome to Alpine Linux\"\n                ],\n                \"timeout\": 60\n            },\n            \"pyats\": {\n                \"os\": \"linux\"\n            },\n            \"ui\": {\n                \"description\": \"Alpine Linux\\n\\n512 MB DRAM, 1 vCPU, 16GB root disk size\\n\\n##### Configuration\\nShell commands in the configuration field of the node are just sourced as user `root`\\nwhen the node starts up. This is based on Alpine Linux. More info [here](https://wiki.alpinelinux.org/wiki/Main_Page)\\n\\n##### Users\\nThe 'root' user has the password 'alpine' and there's a 'cisco/cisco' user, too.\\n\\n##### Example\\n```shell\\nhostname desktop-0\\nifconfig eth1 10.0.0.1 netmask 255.255.255.0 up\\nroute add -net 10.0.0.0/8 dev eth1\\n```\\n\\n[Link](https://www.alpinelinux.org/)\\n\",\n                \"group\": \"Others\",\n                \"icon\": \"host\",\n                \"label\": \"Desktop\",\n                \"label_prefix\": \"desktop-\",\n                \"visible\": true\n            }\n        }\n    },\n    {\n        \"id\": \"iosv\",\n        \"data\": {\n            \"id\": \"iosv\",\n            \"sim\": {\n                \"linux_native\": {\n                    \"driver\": \"iosv\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"e1000\",\n                    \"disk_driver\": \"virtio\",\n                    \"ram\": 512,\n                    \"cpus\": 1\n                }\n            },\n            \"general\": {\n                \"nature\": \"router\",\n                \"description\": \"Cisco IOSv Virtual Router Platform\",\n                \"read_only\": true\n            },\n            \"schema_version\": \"0.0.1\",\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": false,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": false,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                }\n            },\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": \"iosv\"\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"disk\",\n                    \"media_type\": \"fat\",\n                    \"files\": [\n                        {\n                            \"name\": \"ios_config.txt\",\n                            \"content\": \"\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"physical\": [\n                        \"GigabitEthernet0/0\",\n                        \"GigabitEthernet0/1\",\n                        \"GigabitEthernet0/2\",\n                        \"GigabitEthernet0/3\",\n                        \"GigabitEthernet0/4\",\n                        \"GigabitEthernet0/5\",\n                        \"GigabitEthernet0/6\",\n                        \"GigabitEthernet0/7\",\n                        \"GigabitEthernet0/8\",\n                        \"GigabitEthernet0/9\",\n                        \"GigabitEthernet0/10\",\n                        \"GigabitEthernet0/11\",\n                        \"GigabitEthernet0/12\",\n                        \"GigabitEthernet0/13\",\n                        \"GigabitEthernet0/14\",\n                        \"GigabitEthernet0/15\"\n                    ],\n                    \"loopback\": [\n                        \"Loopback0\"\n                    ],\n                    \"has_loopback_zero\": true,\n                    \"default_count\": 4,\n                    \"serial_ports\": 2\n                }\n            },\n            \"boot\": {\n                \"timeout\": 180,\n                \"completed\": [\n                    \"%PLATFORM-5-SIGNATURE_VERIFIED:\",\n                    \"Would you like to enter the initial configuration dialog?\"\n                ]\n            },\n            \"pyats\": {\n                \"os\": \"ios\",\n                \"series\": \"iosv\",\n                \"config_extract_command\": \"show run\"\n            },\n            \"ui\": {\n                \"group\": \"Cisco\",\n                \"icon\": \"router\",\n                \"label_prefix\": \"iosv-\",\n                \"label\": \"IOSv\",\n                \"visible\": true,\n                \"description\": \"Cisco IOSv Virtual Router Platform\\n\\n512 MB DRAM, 1 vCPU\\n\"\n            }\n        }\n    },\n    {\n        \"id\": \"iosvl2\",\n        \"data\": {\n            \"id\": \"iosvl2\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": \"iosvl2\"\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"disk\",\n                    \"media_type\": \"fat\",\n                    \"files\": [\n                        {\n                            \"name\": \"ios_config.txt\",\n                            \"content\": \"hostname inserthostname_here\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": true,\n                    \"default_count\": 4,\n                    \"loopback\": [\n                        \"Loopback0\"\n                    ],\n                    \"physical\": [\n                        \"GigabitEthernet0/0\",\n                        \"GigabitEthernet0/1\",\n                        \"GigabitEthernet0/2\",\n                        \"GigabitEthernet0/3\",\n                        \"GigabitEthernet1/0\",\n                        \"GigabitEthernet1/1\",\n                        \"GigabitEthernet1/2\",\n                        \"GigabitEthernet1/3\",\n                        \"GigabitEthernet2/0\",\n                        \"GigabitEthernet2/1\",\n                        \"GigabitEthernet2/2\",\n                        \"GigabitEthernet2/3\",\n                        \"GigabitEthernet3/0\",\n                        \"GigabitEthernet3/1\",\n                        \"GigabitEthernet3/2\",\n                        \"GigabitEthernet3/3\"\n                    ],\n                    \"serial_ports\": 2\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": false,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": false,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                }\n            },\n            \"general\": {\n                \"description\": \"Cisco IOSv-L2 Virtual Switch Platform\",\n                \"nature\": \"switch\",\n                \"read_only\": true\n            },\n            \"schema_version\": \"0.0.1\",\n            \"sim\": {\n                \"linux_native\": {\n                    \"cpus\": 1,\n                    \"disk_driver\": \"virtio\",\n                    \"driver\": \"iosvl2\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"e1000\",\n                    \"ram\": 768\n                }\n            },\n            \"boot\": {\n                \"timeout\": 300,\n                \"completed\": [\n                    \"%PLATFORM-5-SIGNATURE_VERIFIED:\",\n                    \"Would you like to enter the initial configuration dialog?\"\n                ]\n            },\n            \"pyats\": {\n                \"os\": \"ios\",\n                \"series\": \"iosv\",\n                \"config_extract_command\": \"show run\"\n            },\n            \"ui\": {\n                \"description\": \"Cisco IOSv-L2 Virtual Switch Platform\\n\\n768 MB DRAM, 1 vCPU\\n\",\n                \"group\": \"Cisco\",\n                \"icon\": \"switch\",\n                \"label\": \"IOSvL2\",\n                \"label_prefix\": \"iosvl2-\",\n                \"visible\": true\n            }\n        }\n    },\n    {\n        \"id\": \"iosxrv\",\n        \"data\": {\n            \"id\": \"iosxrv\",\n            \"sim\": {\n                \"linux_native\": {\n                    \"driver\": \"iosxrv\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"e1000\",\n                    \"disk_driver\": \"ide\",\n                    \"ram\": 3072,\n                    \"cpus\": 1\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                }\n            },\n            \"general\": {\n                \"description\": \"Cisco IOS XRv Router platform\",\n                \"nature\": \"router\",\n                \"read_only\": true\n            },\n            \"schema_version\": \"0.0.1\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": \"iosxrv\"\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"cidata\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"iosxr_config.txt\",\n                            \"content\": \"\",\n                            \"editable\": true\n                        },\n                        {\n                            \"name\": \"iosxr_config_admin.txt\",\n                            \"content\": \"!! IOS XR Admin Configuration\\nusername cisco\\n  group root-system\\n  secret 0 cisco\\n!\\nend\\n\",\n                            \"editable\": false\n                        }\n                    ]\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"management\": [\n                        \"MgmtEth0/0/CPU0/0\"\n                    ],\n                    \"physical\": [\n                        \"MgmtEth0/0/CPU0/0\",\n                        \"GigabitEthernet0/0/0/0\",\n                        \"GigabitEthernet0/0/0/1\",\n                        \"GigabitEthernet0/0/0/2\",\n                        \"GigabitEthernet0/0/0/3\",\n                        \"GigabitEthernet0/0/0/4\",\n                        \"GigabitEthernet0/0/0/5\",\n                        \"GigabitEthernet0/0/0/6\",\n                        \"GigabitEthernet0/0/0/7\",\n                        \"GigabitEthernet0/0/0/8\",\n                        \"GigabitEthernet0/0/0/9\",\n                        \"GigabitEthernet0/0/0/10\",\n                        \"GigabitEthernet0/0/0/11\",\n                        \"GigabitEthernet0/0/0/12\",\n                        \"GigabitEthernet0/0/0/13\",\n                        \"GigabitEthernet0/0/0/14\",\n                        \"GigabitEthernet0/0/0/15\",\n                        \"GigabitEthernet0/0/0/16\",\n                        \"GigabitEthernet0/0/0/17\",\n                        \"GigabitEthernet0/0/0/18\",\n                        \"GigabitEthernet0/0/0/19\",\n                        \"GigabitEthernet0/0/0/20\",\n                        \"GigabitEthernet0/0/0/21\",\n                        \"GigabitEthernet0/0/0/22\",\n                        \"GigabitEthernet0/0/0/23\",\n                        \"GigabitEthernet0/0/0/24\",\n                        \"GigabitEthernet0/0/0/25\",\n                        \"GigabitEthernet0/0/0/26\",\n                        \"GigabitEthernet0/0/0/27\",\n                        \"GigabitEthernet0/0/0/28\",\n                        \"GigabitEthernet0/0/0/29\",\n                        \"GigabitEthernet0/0/0/30\"\n                    ],\n                    \"loopback\": [\n                        \"Loopback0\"\n                    ],\n                    \"has_loopback_zero\": true,\n                    \"default_count\": 4,\n                    \"serial_ports\": 3\n                }\n            },\n            \"boot\": {\n                \"timeout\": 400,\n                \"completed\": [\n                    \"Press RETURN to get started.\"\n                ]\n            },\n            \"pyats\": {\n                \"os\": \"iosxr\",\n                \"series\": \"iosxrv\",\n                \"config_extract_command\": \"show running-config\"\n            },\n            \"ui\": {\n                \"group\": \"Cisco\",\n                \"icon\": \"router\",\n                \"label\": \"IOS XRv\",\n                \"label_prefix\": \"xrv-\",\n                \"visible\": true,\n                \"description\": \"Cisco IOS XRv Router platform\\n\\n3 GB DRAM, 1 vCPU\\n\"\n            }\n        }\n    },\n    {\n        \"id\": \"iosxrv9000\",\n        \"data\": {\n            \"id\": \"iosxrv9000\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": \"iosxrv9000\"\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"config\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"iosxr_config.txt\",\n                            \"content\": \"hostname changeme\\nusername cisco\\ngroup root-lr\\ngroup cisco-support\\npassword cisco\\n!\\nusername admin\\ngroup root-lr\\ngroup cisco-support\\npassword admin\\n!\\nusername lab\\ngroup root-lr\\ngroup cisco-support\\npassword lab\\n!\\nend\\n\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": true,\n                    \"default_count\": 4,\n                    \"loopback\": [\n                        \"Loopback0\"\n                    ],\n                    \"management\": [\n                        \"MgmtEth0/RP0/CPU0/0\"\n                    ],\n                    \"physical\": [\n                        \"MgmtEth0/RP0/CPU0/0\",\n                        \"donotuse1\",\n                        \"donotuse2\",\n                        \"GigabitEthernet0/0/0/0\",\n                        \"GigabitEthernet0/0/0/1\",\n                        \"GigabitEthernet0/0/0/2\",\n                        \"GigabitEthernet0/0/0/3\",\n                        \"GigabitEthernet0/0/0/4\",\n                        \"GigabitEthernet0/0/0/5\",\n                        \"GigabitEthernet0/0/0/6\",\n                        \"GigabitEthernet0/0/0/7\",\n                        \"GigabitEthernet0/0/0/8\",\n                        \"GigabitEthernet0/0/0/9\",\n                        \"GigabitEthernet0/0/0/10\",\n                        \"GigabitEthernet0/0/0/11\",\n                        \"GigabitEthernet0/0/0/12\",\n                        \"GigabitEthernet0/0/0/13\",\n                        \"GigabitEthernet0/0/0/14\",\n                        \"GigabitEthernet0/0/0/15\",\n                        \"GigabitEthernet0/0/0/16\",\n                        \"GigabitEthernet0/0/0/17\",\n                        \"GigabitEthernet0/0/0/18\",\n                        \"GigabitEthernet0/0/0/19\",\n                        \"GigabitEthernet0/0/0/20\",\n                        \"GigabitEthernet0/0/0/21\",\n                        \"GigabitEthernet0/0/0/22\",\n                        \"GigabitEthernet0/0/0/23\",\n                        \"GigabitEthernet0/0/0/24\",\n                        \"GigabitEthernet0/0/0/25\",\n                        \"GigabitEthernet0/0/0/26\",\n                        \"GigabitEthernet0/0/0/27\",\n                        \"GigabitEthernet0/0/0/28\",\n                        \"GigabitEthernet0/0/0/29\",\n                        \"GigabitEthernet0/0/0/30\"\n                    ],\n                    \"serial_ports\": 4\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                }\n            },\n            \"general\": {\n                \"description\": \"Cisco IOS XRv 9000 Router platform\",\n                \"nature\": \"router\",\n                \"read_only\": true\n            },\n            \"schema_version\": \"0.0.1\",\n            \"sim\": {\n                \"linux_native\": {\n                    \"cpus\": 2,\n                    \"disk_driver\": \"virtio\",\n                    \"driver\": \"iosxrv9000\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"virtio\",\n                    \"ram\": 10240\n                }\n            },\n            \"boot\": {\n                \"timeout\": 1000,\n                \"completed\": [\n                    \"INFO: --- Administrative User Dialog --\",\n                    \"%MGBL-CVAC-4-CONFIG_DONE\",\n                    \"ios con0/RP0/CPU0 is now available\"\n                ]\n            },\n            \"pyats\": {\n                \"os\": \"iosxr\",\n                \"series\": \"iosxrv9k\",\n                \"config_extract_command\": \"show running-config\"\n            },\n            \"ui\": {\n                \"description\": \"Cisco IOS XRv 9000 Router platform\\n\\nAt a very minimum, 10 GB of DRAM and 2 vCPUs are required.\\nIt is recommended to use 16 GB and 4 vCPUs.\\n\\n##### Note\\nThe first data interface is the **4th interface**:\\n- The first interface is management,\\n- second and third are marked as 'do not use' and should not be connected to anything\\n- The next interfaces are actual data interfaces.\\n\\n[CCO Link](https://www.cisco.com/c/en/us/support/routers/ios-xrv-9000-router/tsd-products-support-series-home.html)\",\n                \"group\": \"Cisco\",\n                \"icon\": \"router\",\n                \"label\": \"IOS XRv 9000\",\n                \"label_prefix\": \"xr9kv-\",\n                \"visible\": true\n            }\n        }\n    },\n    {\n        \"id\": \"nxosv\",\n        \"data\": {\n            \"id\": \"nxosv\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": \"nxosv\"\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"disk\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"nxos_config.txt\",\n                            \"content\": \"hostname inserthostname_here\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": true,\n                    \"default_count\": 4,\n                    \"loopback\": [\n                        \"Loopback0\"\n                    ],\n                    \"management\": [\n                        \"mgmt0\"\n                    ],\n                    \"physical\": [\n                        \"mgmt0\",\n                        \"Ethernet2/1\",\n                        \"Ethernet2/2\",\n                        \"Ethernet2/3\",\n                        \"Ethernet2/4\",\n                        \"Ethernet2/5\",\n                        \"Ethernet2/6\",\n                        \"Ethernet2/7\",\n                        \"Ethernet2/8\",\n                        \"Ethernet2/9\",\n                        \"Ethernet2/10\",\n                        \"Ethernet2/11\",\n                        \"Ethernet2/12\",\n                        \"Ethernet2/13\",\n                        \"Ethernet2/14\",\n                        \"Ethernet2/15\",\n                        \"Ethernet2/16\",\n                        \"Ethernet2/17\",\n                        \"Ethernet2/18\",\n                        \"Ethernet2/19\",\n                        \"Ethernet2/20\",\n                        \"Ethernet2/21\",\n                        \"Ethernet2/22\",\n                        \"Ethernet2/23\",\n                        \"Ethernet2/24\",\n                        \"Ethernet2/25\",\n                        \"Ethernet2/26\",\n                        \"Ethernet2/27\",\n                        \"Ethernet2/28\",\n                        \"Ethernet2/29\",\n                        \"Ethernet2/30\",\n                        \"Ethernet2/31\"\n                    ],\n                    \"serial_ports\": 2\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                }\n            },\n            \"general\": {\n                \"description\": \"Cisco NX-OSv \\\"Titanium\\\" Switch\",\n                \"nature\": \"switch\",\n                \"read_only\": true\n            },\n            \"schema_version\": \"0.0.1\",\n            \"sim\": {\n                \"linux_native\": {\n                    \"cpus\": 1,\n                    \"disk_driver\": \"ide\",\n                    \"driver\": \"nxosv\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"e1000\",\n                    \"ram\": 3072\n                }\n            },\n            \"boot\": {\n                \"timeout\": 400,\n                \"completed\": [\n                    \"---- System Admin Account Setup ----\",\n                    \"User Access Verification\"\n                ]\n            },\n            \"pyats\": {\n                \"os\": \"nxos\",\n                \"series\": \"nxosv\",\n                \"config_extract_command\": \"show run\"\n            },\n            \"ui\": {\n                \"description\": \"Cisco NX-OSv \\\"Titanium\\\" Switch\\n\\n3 GB DRAM, 1 vCPU\\n\",\n                \"group\": \"Cisco\",\n                \"icon\": \"switch\",\n                \"label\": \"NX-OS\",\n                \"label_prefix\": \"nxos-\",\n                \"visible\": true\n            }\n        }\n    },\n    {\n        \"id\": \"nxosv9000\",\n        \"data\": {\n            \"id\": \"nxosv9000\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": \"nxosv9000\"\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"disk\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"nxos_config.txt\",\n                            \"content\": \"# minimum needed config to login\\nno password strength-check\\nusername admin role network-admin\\nusername admin password cisco role network-admin\\nusername cisco role network-admin\\nusername cisco password cisco role network-admin\\n\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": true,\n                    \"default_count\": 4,\n                    \"loopback\": [\n                        \"Loopback0\"\n                    ],\n                    \"management\": [\n                        \"mgmt0\"\n                    ],\n                    \"physical\": [\n                        \"mgmt0\",\n                        \"Ethernet1/1\",\n                        \"Ethernet1/2\",\n                        \"Ethernet1/3\",\n                        \"Ethernet1/4\",\n                        \"Ethernet1/5\",\n                        \"Ethernet1/6\",\n                        \"Ethernet1/7\",\n                        \"Ethernet1/8\",\n                        \"Ethernet1/9\",\n                        \"Ethernet1/10\",\n                        \"Ethernet1/11\",\n                        \"Ethernet1/12\",\n                        \"Ethernet1/13\",\n                        \"Ethernet1/14\",\n                        \"Ethernet1/15\",\n                        \"Ethernet1/16\",\n                        \"Ethernet1/17\",\n                        \"Ethernet1/18\",\n                        \"Ethernet1/19\",\n                        \"Ethernet1/20\"\n                    ],\n                    \"serial_ports\": 2\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                }\n            },\n            \"general\": {\n                \"description\": \"Cisco Nexus 9000v Switch\",\n                \"nature\": \"switch\",\n                \"read_only\": true\n            },\n            \"schema_version\": \"0.0.1\",\n            \"sim\": {\n                \"linux_native\": {\n                    \"base_image\": null,\n                    \"cpus\": 2,\n                    \"disk_driver\": \"sata\",\n                    \"driver\": \"nxosv9000\",\n                    \"efi_boot\": true,\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"e1000\",\n                    \"ram\": 8192\n                }\n            },\n            \"boot\": {\n                \"timeout\": 480,\n                \"completed\": [\n                    \"There is no admin password in the bootstrap file\",\n                    \"User Access Verification\"\n                ]\n            },\n            \"pyats\": {\n                \"os\": \"nxos\",\n                \"series\": \"n9k\",\n                \"config_extract_command\": \"show run\"\n            },\n            \"ui\": {\n                \"description\": \"Cisco Nexus 9000v Switch\\n\\nRequires 6 GB DRAM, 2 vCPUs\\n\\n[CCO Link](https://www.cisco.com/c/en/us/support/switches/nexus-9000v-switch/model.html)\\n\",\n                \"group\": \"Cisco\",\n                \"icon\": \"switch\",\n                \"label\": \"NX-OS 9000\",\n                \"label_prefix\": \"nxos9000-\",\n                \"visible\": true\n            }\n        }\n    },\n    {\n        \"id\": \"ubuntu\",\n        \"data\": {\n            \"id\": \"ubuntu\",\n            \"sim\": {\n                \"linux_native\": {\n                    \"driver\": \"server\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"disk_driver\": \"virtio\",\n                    \"nic_driver\": \"virtio\",\n                    \"ram\": 2048,\n                    \"cpus\": 1,\n                    \"data_volume\": 0,\n                    \"boot_disk_size\": 64\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": true,\n                    \"boot_disk_size\": true\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": true,\n                    \"boot_disk_size\": true\n                }\n            },\n            \"general\": {\n                \"nature\": \"server\",\n                \"description\": \"Ubuntu 18.04 Cloud Init Platform\",\n                \"read_only\": true\n            },\n            \"schema_version\": \"0.0.1\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": \"server\"\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"cidata\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"meta-data\",\n                            \"content\": \"instance-id: ubuntu\\nlocal-hostname: ubuntu\\n\",\n                            \"editable\": false\n                        },\n                        {\n                            \"name\": \"user-data\",\n                            \"content\": \"#cloud-config\\npassword: cisco\\nchpasswd: { expire: False }\\nhostname: your_hostname\\nssh_pwauth: True\\nssh_authorized_keys:\\n   - your-ssh-pubkey-line-goes-here\\n\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"physical\": [\n                        \"enp0s2\",\n                        \"enp0s3\",\n                        \"enp0s4\",\n                        \"enp0s5\",\n                        \"enp0s6\",\n                        \"enp0s7\",\n                        \"enp0s8\",\n                        \"enp0s9\"\n                    ],\n                    \"has_loopback_zero\": false,\n                    \"default_count\": 1,\n                    \"serial_ports\": 1\n                }\n            },\n            \"boot\": {\n                \"timeout\": 180,\n                \"completed\": [\n                    \"Reached target Cloud-init target\",\n                    \"Ubuntu 18.04.\",\n                    \"running 'modules:final' at\"\n                ]\n            },\n            \"pyats\": {\n                \"os\": \"linux\"\n            },\n            \"ui\": {\n                \"group\": \"Others\",\n                \"icon\": \"server\",\n                \"label\": \"Ubuntu\",\n                \"label_prefix\": \"ubuntu-\",\n                \"visible\": true,\n                \"description\": \"Ubuntu 18.04 Cloud Init Platform\\n\\n2 GB DRAM, 1 vCPU (can be adjusted)\\n\\n##### Configuration\\n\\nThis Ubuntu image uses cloud-init YAML for configuration. Please\\nensure to have a valid cloud-init. The pre-configured username\\nis 'ubuntu'. Use either the provided password or provide an\\nSSH key. The node comes with a very brief (but complete)\\ncloud-init example when you drop one onto the canvas.\\n\\nThe node has also a 32GB data disk which can be used e.g. to\\nextend the root VG for additional space. It's not initialized at\\nboot (has to be managed by user).\\n\\nSee [here](https://cloudinit.readthedocs.io/en/latest/topics/examples.html)\\nfor additional cloud-init examples.\\n\"\n            }\n        }\n    },\n    {\n        \"id\": \"iosxe-sdwan\",\n        \"data\": {\n            \"id\": \"iosxe-sdwan\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": \"csr1000v\"\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"disk\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"ciscosdwan_cloud_init.cfg\",\n                            \"content\": \"hostname inserthostname_here\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": true,\n                    \"loopback\": [\n                        \"Loopback0\"\n                    ],\n                    \"physical\": [\n                        \"GigabitEthernet1\",\n                        \"GigabitEthernet2\",\n                        \"GigabitEthernet3\",\n                        \"GigabitEthernet4\",\n                        \"GigabitEthernet5\",\n                        \"GigabitEthernet6\",\n                        \"GigabitEthernet7\",\n                        \"GigabitEthernet8\",\n                        \"GigabitEthernet9\",\n                        \"GigabitEthernet10\",\n                        \"GigabitEthernet11\",\n                        \"GigabitEthernet12\",\n                        \"GigabitEthernet13\",\n                        \"GigabitEthernet14\",\n                        \"GigabitEthernet15\",\n                        \"GigabitEthernet16\"\n                    ],\n                    \"serial_ports\": 2\n                }\n            },\n            \"general\": {\n                \"description\": \"Cisco IOS XE SD-WAN\",\n                \"nature\": \"router\",\n                \"read_only\": false\n            },\n            \"sim\": {\n                \"linux_native\": {\n                    \"cpus\": 1,\n                    \"disk_driver\": \"virtio\",\n                    \"driver\": \"csr1000v\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"virtio\",\n                    \"ram\": 3072\n                }\n            },\n            \"boot\": {\n                \"timeout\": 250,\n                \"completed\": [\n                    \"Would you like to enter the initial configuration dialog?\",\n                    \"INFO: Press RETURN to get started!\",\n                    \"%CVAC-4-CONFIG_DONE:\"\n                ]\n            },\n            \"pyats\": {\n                \"os\": \"iosxe\",\n                \"config_extract_command\": \"show run\"\n            },\n            \"ui\": {\n                \"description\": \"Cisco IOS XE SD-WAN\\n\\n3 GB DRAM, 1 vCPU\\n\\n[CCO Link](https://www.cisco.com/c/en/us/support/routers/csr-1000v-series-ios-xe-sd-wan/model.html)\\n[Release Notes](https://www.cisco.com/c/en/us/td/docs/routers/sdwan/release/notes/xe-16-11/sd-wan-rel-notes-19-1.html)\",\n                \"group\": \"Cisco\",\n                \"icon\": \"router\",\n                \"label\": \"XE-SDWAN\",\n                \"label_prefix\": \"xe-sdwan-\",\n                \"visible\": true\n            },\n            \"schema_version\": \"0.0.1\"\n        }\n    },\n    {\n        \"id\": \"viptela-manage\",\n        \"data\": {\n            \"id\": \"viptela-manage\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": null\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"cidata\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"meta-data\",\n                            \"content\": \"instance-id: vmanage\\nlocal-hostname: vmanage\",\n                            \"editable\": false\n                        },\n                        {\n                            \"name\": \"user-data\",\n                            \"content\": \"#cloud-config\\nssh_authorized_keys:\\n  - your-ssh-pub-key-line-goes-here\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": false,\n                    \"physical\": [\n                        \"eth0\",\n                        \"ge0/0\",\n                        \"ge0/1\",\n                        \"ge0/2\",\n                        \"ge0/3\",\n                        \"ge0/4\",\n                        \"ge0/5\",\n                        \"ge0/6\"\n                    ],\n                    \"serial_ports\": 1\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": true,\n                    \"boot_disk_size\": false\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": true,\n                    \"boot_disk_size\": false\n                }\n            },\n            \"general\": {\n                \"description\": \"Viptela vManage System\",\n                \"nature\": \"server\",\n                \"read_only\": true\n            },\n            \"boot\": {\n                \"timeout\": 300,\n                \"completed\": [\n                    \": System Ready\"\n                ]\n            },\n            \"sim\": {\n                \"linux_native\": {\n                    \"cpus\": 8,\n                    \"disk_driver\": \"ide\",\n                    \"driver\": \"server\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"virtio\",\n                    \"ram\": 32768,\n                    \"data_volume\": 512\n                }\n            },\n            \"pyats\": {\n                \"os\": \"sdwan\",\n                \"series\": \"viptela\",\n                \"config_extract_command\": \"show run\",\n                \"username\": \"admin\",\n                \"password\": \"admin\"\n            },\n            \"ui\": {\n                \"description\": \"Viptela vManage System\\n\\n32 GB DRAM, 8 vCPU, 512GB data disk\\n\\n[CCO Link](https://sdwan-docs.cisco.com/Product_Documentation)\",\n                \"group\": \"Others\",\n                \"icon\": \"server\",\n                \"label\": \"vManage\",\n                \"label_prefix\": \"vmanage-\",\n                \"visible\": true\n            },\n            \"schema_version\": \"0.0.1\"\n        }\n    },\n    {\n        \"id\": \"viptela-edge\",\n        \"data\": {\n            \"id\": \"viptela-edge\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": null\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"cidata\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"meta-data\",\n                            \"content\": \"instance-id: ubuntu\\nlocal-hostname: ubuntu\",\n                            \"editable\": false\n                        },\n                        {\n                            \"name\": \"user-data\",\n                            \"content\": \"#cloud-config\\nvinitparam:\\n- otp: 00000000000000000000000000000000\\n- vbond: 1.2.3.4\\n- uuid: 12345678-dead-beef-cafe-1234567890ab\\n- org: some-org-string\\nssh_authorized_keys:\\n  - your-ssh-pub-key-line-goes-here\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": false,\n                    \"physical\": [\n                        \"eth0\",\n                        \"ge0/0\",\n                        \"ge0/1\",\n                        \"ge0/2\",\n                        \"ge0/3\",\n                        \"ge0/4\",\n                        \"ge0/5\",\n                        \"ge0/6\"\n                    ],\n                    \"serial_ports\": 1\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                }\n            },\n            \"general\": {\n                \"description\": \"Viptela vEdge System\",\n                \"nature\": \"server\",\n                \"read_only\": false\n            },\n            \"boot\": {\n                \"timeout\": 120,\n                \"completed\": [\n                    \": System Ready\"\n                ]\n            },\n            \"sim\": {\n                \"linux_native\": {\n                    \"cpus\": 2,\n                    \"disk_driver\": \"ide\",\n                    \"driver\": \"server\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"virtio\",\n                    \"ram\": 2048\n                }\n            },\n            \"pyats\": {\n                \"os\": \"sdwan\",\n                \"series\": \"viptela\",\n                \"config_extract_command\": \"show run\",\n                \"username\": \"admin\",\n                \"password\": \"admin\"\n            },\n            \"ui\": {\n                \"description\": \"Viptela vEdge System\\n\\n2 GB DRAM, 2 vCPU\\n\\n[CCO Link](https://sdwan-docs.cisco.com/Product_Documentation)\",\n                \"group\": \"Others\",\n                \"icon\": \"server\",\n                \"label\": \"vEdge\",\n                \"label_prefix\": \"vedge-\",\n                \"visible\": true\n            },\n            \"schema_version\": \"0.0.1\"\n        }\n    },\n    {\n        \"id\": \"viptela-bond\",\n        \"data\": {\n            \"id\": \"viptela-bond\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": null\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"cidata\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"meta-data\",\n                            \"content\": \"instance-id: vbond\\nlocal-hostname: vbond\",\n                            \"editable\": false\n                        },\n                        {\n                            \"name\": \"user-data\",\n                            \"content\": \"#cloud-config\\nssh_authorized_keys:\\n  - your-ssh-pub-key-line-goes-here\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": false,\n                    \"physical\": [\n                        \"eth0\",\n                        \"ge0/0\",\n                        \"ge0/1\",\n                        \"ge0/2\",\n                        \"ge0/3\",\n                        \"ge0/4\",\n                        \"ge0/5\",\n                        \"ge0/6\"\n                    ],\n                    \"serial_ports\": 1\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                }\n            },\n            \"general\": {\n                \"description\": \"Viptela vBond System\",\n                \"nature\": \"server\",\n                \"read_only\": true\n            },\n            \"boot\": {\n                \"timeout\": 300,\n                \"completed\": [\n                    \": System Ready\"\n                ]\n            },\n            \"sim\": {\n                \"linux_native\": {\n                    \"cpus\": 2,\n                    \"disk_driver\": \"ide\",\n                    \"driver\": \"server\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"virtio\",\n                    \"ram\": 4096\n                }\n            },\n            \"pyats\": {\n                \"os\": \"sdwan\",\n                \"series\": \"viptela\",\n                \"config_extract_command\": \"show run\",\n                \"username\": \"admin\",\n                \"password\": \"admin\"\n            },\n            \"ui\": {\n                \"description\": \"Viptela vBond System\\n\\n4 GB DRAM, 2 vCPU\\n\\n[CCO Link](https://sdwan-docs.cisco.com/Product_Documentation)\",\n                \"group\": \"Others\",\n                \"icon\": \"server\",\n                \"label\": \"vBond\",\n                \"label_prefix\": \"vbond-\",\n                \"visible\": true\n            },\n            \"schema_version\": \"0.0.1\"\n        }\n    },\n    {\n        \"id\": \"viptela-smart\",\n        \"data\": {\n            \"id\": \"viptela-smart\",\n            \"configuration\": {\n                \"generator\": {\n                    \"driver\": null\n                },\n                \"provisioning\": {\n                    \"volume_name\": \"cidata\",\n                    \"media_type\": \"iso\",\n                    \"files\": [\n                        {\n                            \"name\": \"meta-data\",\n                            \"content\": \"instance-id: vsmart\\nlocal-hostname: vsmart\",\n                            \"editable\": false\n                        },\n                        {\n                            \"name\": \"user-data\",\n                            \"content\": \"#cloud-config\\nssh_authorized_keys:\\n  - your-ssh-pub-key-line-goes-here\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"device\": {\n                \"interfaces\": {\n                    \"has_loopback_zero\": false,\n                    \"physical\": [\n                        \"eth0\",\n                        \"ge0/0\",\n                        \"ge0/1\",\n                        \"ge0/2\",\n                        \"ge0/3\",\n                        \"ge0/4\",\n                        \"ge0/5\",\n                        \"ge0/6\"\n                    ],\n                    \"serial_ports\": 1\n                }\n            },\n            \"inherited\": {\n                \"image\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                },\n                \"node\": {\n                    \"ram\": true,\n                    \"cpus\": true,\n                    \"data_volume\": false,\n                    \"boot_disk_size\": false\n                }\n            },\n            \"general\": {\n                \"description\": \"Viptela vSmart System\",\n                \"nature\": \"server\",\n                \"read_only\": true\n            },\n            \"boot\": {\n                \"timeout\": 300,\n                \"completed\": [\n                    \": System Ready\"\n                ]\n            },\n            \"sim\": {\n                \"linux_native\": {\n                    \"cpus\": 2,\n                    \"disk_driver\": \"ide\",\n                    \"driver\": \"server\",\n                    \"libvirt_domain_driver\": \"kvm\",\n                    \"nic_driver\": \"virtio\",\n                    \"ram\": 4096\n                }\n            },\n            \"pyats\": {\n                \"os\": \"sdwan\",\n                \"series\": \"viptela\",\n                \"config_extract_command\": \"show run\",\n                \"username\": \"admin\",\n                \"password\": \"admin\"\n            },\n            \"ui\": {\n                \"description\": \"Viptela vSmart System\\n\\n4 GB DRAM, 2 vCPU\\n\\n[CCO Link](https://sdwan-docs.cisco.com/Product_Documentation)\",\n                \"group\": \"Others\",\n                \"icon\": \"server\",\n                \"label\": \"vSmart\",\n                \"label_prefix\": \"vsmart-\",\n                \"visible\": true\n            },\n            \"schema_version\": \"0.0.1\"\n        }\n    }\n]"
						}
					]
				},
				{
					"name": "Get lab schema",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/lab_schema",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"lab_schema"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/lab_schema",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"lab_schema"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:54:03 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"definitions\": {},\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"$id\": \"http://example.com/root.json\",\n    \"type\": \"object\",\n    \"required\": [\n        \"lab\",\n        \"nodes\",\n        \"links\"\n    ],\n    \"properties\": {\n        \"lab\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"description\",\n                \"notes\",\n                \"timestamp\",\n                \"title\",\n                \"version\"\n            ],\n            \"properties\": {\n                \"description\": {\n                    \"type\": \"string\",\n                    \"pattern\": \"\"\n                },\n                \"notes\": {\n                    \"type\": \"string\",\n                    \"pattern\": \"\"\n                },\n                \"timestamp\": {\n                    \"type\": \"number\"\n                },\n                \"title\": {\n                    \"type\": \"string\",\n                    \"pattern\": \"\"\n                },\n                \"version\": {\n                    \"type\": \"string\",\n                    \"pattern\": \"\"\n                }\n            }\n        },\n        \"nodes\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"label\",\n                    \"node_definition\",\n                    \"x\",\n                    \"y\",\n                    \"interfaces\"\n                ],\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"\"\n                    },\n                    \"label\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"\"\n                    },\n                    \"node_definition\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"\"\n                    },\n                    \"image_definition\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"\"\n                    },\n                    \"x\": {\n                        \"type\": \"integer\"\n                    },\n                    \"y\": {\n                        \"type\": \"integer\"\n                    },\n                    \"configuration\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"\"\n                    },\n                    \"tags\": {\n                        \"type\": \"array\"\n                    },\n                    \"interfaces\": {\n                        \"type\": \"array\",\n                        \"items\": {\n                            \"type\": \"object\",\n                            \"required\": [\n                                \"id\",\n                                \"label\",\n                                \"type\"\n                            ],\n                            \"properties\": {\n                                \"id\": {\n                                    \"type\": \"string\",\n                                    \"pattern\": \"\"\n                                },\n                                \"slot\": {\n                                    \"type\": \"integer\"\n                                },\n                                \"label\": {\n                                    \"type\": \"string\",\n                                    \"pattern\": \"\"\n                                },\n                                \"type\": {\n                                    \"type\": \"string\",\n                                    \"pattern\": \"\"\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        },\n        \"links\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"required\": [\n                    \"id\",\n                    \"i1\",\n                    \"n1\",\n                    \"i2\",\n                    \"n2\"\n                ],\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"\"\n                    },\n                    \"i1\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"\"\n                    },\n                    \"n1\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"\"\n                    },\n                    \"i2\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"\"\n                    },\n                    \"n2\": {\n                        \"type\": \"string\",\n                        \"pattern\": \"\"\n                    }\n                }\n            }\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get node definition schema",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/node_definition_schema",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"node_definition_schema"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/node_definition_schema",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"node_definition_schema"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:54:58 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"object\",\n    \"required\": [\n        \"id\",\n        \"boot\",\n        \"sim\",\n        \"general\",\n        \"configuration\",\n        \"device\",\n        \"ui\"\n    ],\n    \"properties\": {\n        \"inherited\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"image\",\n                \"node\"\n            ],\n            \"properties\": {\n                \"image\": {\n                    \"required\": [\n                        \"ram\",\n                        \"cpus\",\n                        \"data_volume\",\n                        \"boot_disk_size\"\n                    ],\n                    \"ram\": {\n                        \"title\": \"RAM\",\n                        \"type\": \"boolean\",\n                        \"default\": true\n                    },\n                    \"cpus\": {\n                        \"title\": \"CPU Count\",\n                        \"type\": \"boolean\",\n                        \"default\": true\n                    },\n                    \"data_volume\": {\n                        \"title\": \"Data Disk Size\",\n                        \"type\": \"boolean\",\n                        \"default\": true\n                    },\n                    \"boot_disk_size\": {\n                        \"title\": \"Boot Disk Size\",\n                        \"type\": \"boolean\",\n                        \"default\": true\n                    }\n                },\n                \"node\": {\n                    \"required\": [\n                        \"ram\",\n                        \"cpus\",\n                        \"data_volume\",\n                        \"boot_disk_size\"\n                    ],\n                    \"ram\": {\n                        \"title\": \"RAM\",\n                        \"type\": \"boolean\",\n                        \"default\": true\n                    },\n                    \"cpus\": {\n                        \"title\": \"CPU Count\",\n                        \"type\": \"boolean\",\n                        \"default\": true\n                    },\n                    \"data_volume\": {\n                        \"title\": \"Data Disk Size\",\n                        \"type\": \"boolean\",\n                        \"default\": true\n                    },\n                    \"boot_disk_size\": {\n                        \"title\": \"Boot Disk Size\",\n                        \"type\": \"boolean\",\n                        \"default\": true\n                    }\n                }\n            }\n        },\n        \"boot\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"timeout\"\n            ],\n            \"properties\": {\n                \"timeout\": {\n                    \"title\": \"Timeout (seconds)\",\n                    \"type\": \"integer\"\n                },\n                \"completed\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        },\n        \"pyats\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"os\"\n            ],\n            \"properties\": {\n                \"os\": {\n                    \"title\": \"Operating System\",\n                    \"type\": \"string\"\n                },\n                \"series\": {\n                    \"title\": \"Series\",\n                    \"type\": \"string\"\n                },\n                \"model\": {\n                    \"title\": \"Model\",\n                    \"type\": \"string\"\n                },\n                \"use_in_testbed\": {\n                    \"title\": \"Use in testbed\",\n                    \"type\": \"boolean\",\n                    \"default\": true\n                },\n                \"username\": {\n                    \"title\": \"Username\",\n                    \"type\": \"string\",\n                    \"default\": null\n                },\n                \"password\": {\n                    \"title\": \"Password\",\n                    \"type\": \"string\",\n                    \"default\": null\n                },\n                \"config_extract_command\": {\n                    \"title\": \"Configuration Extract command\",\n                    \"type\": \"string\",\n                    \"default\": null\n                }\n            }\n        },\n        \"ui\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"icon\",\n                \"visible\",\n                \"label\",\n                \"label_prefix\"\n            ],\n            \"properties\": {\n                \"visible\": {\n                    \"title\": \"Visible\",\n                    \"type\": \"boolean\",\n                    \"default\": true\n                },\n                \"group\": {\n                    \"title\": \"Group\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"Cisco\",\n                        \"Others\"\n                    ]\n                },\n                \"description\": {\n                    \"title\": \"Description\",\n                    \"type\": \"string\",\n                    \"attrs\": {\n                        \"type\": \"textarea\"\n                    }\n                },\n                \"label_prefix\": {\n                    \"title\": \"Prefix\",\n                    \"type\": \"string\"\n                },\n                \"icon\": {\n                    \"title\": \"Icon\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"router\",\n                        \"switch\",\n                        \"server\",\n                        \"host\",\n                        \"cloud\",\n                        \"firewall\",\n                        \"access_point\",\n                        \"wlc\"\n                    ]\n                },\n                \"label\": {\n                    \"title\": \"Label\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"device\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"interfaces\"\n            ],\n            \"properties\": {\n                \"interfaces\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"serial_ports\",\n                        \"physical\",\n                        \"has_loopback_zero\"\n                    ],\n                    \"properties\": {\n                        \"has_loopback_zero\": {\n                            \"title\": \"Has Loopback0\",\n                            \"type\": \"boolean\",\n                            \"default\": true\n                        },\n                        \"serial_ports\": {\n                            \"title\": \"Number of serial Ports\",\n                            \"type\": \"integer\"\n                        },\n                        \"default_count\": {\n                            \"title\": \"Default number of physical interfaces\",\n                            \"type\": \"integer\"\n                        },\n                        \"physical\": {\n                            \"type\": \"array\",\n                            \"items\": {\n                                \"type\": \"string\"\n                            },\n                            \"minItems\": 1\n                        },\n                        \"loopback\": {\n                            \"type\": \"array\",\n                            \"minItems\": 1,\n                            \"items\": {\n                                \"type\": \"string\"\n                            }\n                        }\n                    },\n                    \"anyOf\": [\n                        {\n                            \"allOf\": [\n                                {\n                                    \"if\": null,\n                                    \"properties\": {\n                                        \"has_loopback_zero\": {\n                                            \"enum\": [\n                                                true\n                                            ]\n                                        }\n                                    }\n                                },\n                                {\n                                    \"then\": null,\n                                    \"required\": [\n                                        \"loopback\"\n                                    ]\n                                }\n                            ]\n                        },\n                        {\n                            \"allOf\": [\n                                {\n                                    \"if\": null,\n                                    \"properties\": {\n                                        \"has_loopback_zero\": {\n                                            \"enum\": [\n                                                false\n                                            ]\n                                        }\n                                    }\n                                },\n                                {\n                                    \"then\": \"none\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        },\n        \"configuration\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"generator\"\n            ],\n            \"properties\": {\n                \"generator\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"driver\"\n                    ],\n                    \"properties\": {\n                        \"driver\": {\n                            \"title\": \"Configuration Driver\",\n                            \"type\": [\n                                \"string\",\n                                \"null\"\n                            ],\n                            \"enum\": [\n                                \"iosv\",\n                                \"iosvl2\",\n                                \"iol\",\n                                \"iol-l2\",\n                                \"pagent\",\n                                \"csr1000v\",\n                                \"cat9k\",\n                                \"asav\",\n                                \"iosxrv\",\n                                \"iosxrv9000\",\n                                \"nxosv\",\n                                \"nxosv9000\",\n                                \"lxc\",\n                                \"wan_emulator\",\n                                \"server\",\n                                \"desktop\",\n                                null\n                            ]\n                        }\n                    }\n                },\n                \"provisioning\": {\n                    \"type\": \"object\",\n                    \"required\": [\n                        \"files\",\n                        \"media_type\",\n                        \"volume_name\"\n                    ],\n                    \"properties\": {\n                        \"files\": {\n                            \"type\": \"array\",\n                            \"minItems\": 1,\n                            \"items\": {\n                                \"type\": \"object\",\n                                \"required\": [\n                                    \"content\",\n                                    \"editable\",\n                                    \"name\"\n                                ],\n                                \"properties\": {\n                                    \"content\": {\n                                        \"title\": \"Configuration\",\n                                        \"type\": \"string\"\n                                    },\n                                    \"editable\": {\n                                        \"title\": \"Editable\",\n                                        \"type\": \"boolean\",\n                                        \"default\": true\n                                    },\n                                    \"name\": {\n                                        \"title\": \"Filename\",\n                                        \"type\": \"string\"\n                                    }\n                                }\n                            }\n                        },\n                        \"media_type\": {\n                            \"title\": \"Media Type\",\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"iso\",\n                                \"fat\"\n                            ]\n                        },\n                        \"volume_name\": {\n                            \"title\": \"Volume Name\",\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"id\": {\n            \"type\": \"string\"\n        },\n        \"schema_version\": {\n            \"type\": \"string\"\n        },\n        \"sim\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"linux_native\"\n            ],\n            \"properties\": {\n                \"linux_native\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"libvirt_domain_driver\": {\n                            \"title\": \"Domain Driver\",\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"kvm\",\n                                \"lxc\",\n                                \"none\"\n                            ]\n                        },\n                        \"driver\": {\n                            \"title\": \"Simulation Driver\",\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"iosv\",\n                                \"asav\",\n                                \"csr1000v\",\n                                \"server\",\n                                \"external_connector\",\n                                \"iol\",\n                                \"iol-l2\",\n                                \"iosvl2\",\n                                \"iosxrv\",\n                                \"iosxrv9000\",\n                                \"lxc\",\n                                \"nxosv\",\n                                \"nxosv9000\",\n                                \"pagent\",\n                                \"trex\",\n                                \"unmanaged_switch\",\n                                \"wan_emulator\"\n                            ]\n                        },\n                        \"disk_driver\": {\n                            \"title\": \"Disk Driver\",\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"ide\",\n                                \"sata\",\n                                \"virtio\"\n                            ]\n                        },\n                        \"ram\": {\n                            \"title\": \"Memory (MB)\",\n                            \"type\": \"integer\"\n                        },\n                        \"cpus\": {\n                            \"title\": \"CPUs\",\n                            \"type\": \"integer\"\n                        },\n                        \"nic_driver\": {\n                            \"title\": \"Network Driver\",\n                            \"type\": \"string\",\n                            \"enum\": [\n                                \"virtio\",\n                                \"e1000\"\n                            ]\n                        },\n                        \"data_volume\": {\n                            \"title\": \"Data Disk Size (GiB)\",\n                            \"type\": \"integer\"\n                        },\n                        \"boot_disk_size\": {\n                            \"title\": \"Boot Disk Size (GiB)\",\n                            \"type\": \"integer\"\n                        },\n                        \"video\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"model\": {\n                                    \"title\": \"Video Model\",\n                                    \"type\": \"string\"\n                                },\n                                \"memory\": {\n                                    \"title\": \"Video Memory\",\n                                    \"type\": \"integer\"\n                                }\n                            },\n                            \"required\": [\n                                \"memory\"\n                            ]\n                        }\n                    },\n                    \"required\": [\n                        \"libvirt_domain_driver\",\n                        \"driver\"\n                    ],\n                    \"anyOf\": [\n                        {\n                            \"allOf\": [\n                                {\n                                    \"if\": null,\n                                    \"properties\": {\n                                        \"libvirt_domain_driver\": {\n                                            \"enum\": [\n                                                \"kvm\"\n                                            ]\n                                        }\n                                    }\n                                },\n                                {\n                                    \"then\": null,\n                                    \"required\": [\n                                        \"cpus\",\n                                        \"ram\",\n                                        \"nic_driver\",\n                                        \"disk_driver\"\n                                    ]\n                                }\n                            ]\n                        },\n                        {\n                            \"allOf\": [\n                                {\n                                    \"if\": null,\n                                    \"properties\": {\n                                        \"libvirt_domain_driver\": {\n                                            \"enum\": [\n                                                \"lxc\"\n                                            ]\n                                        }\n                                    }\n                                },\n                                {\n                                    \"then\": null,\n                                    \"required\": [\n                                        \"ram\"\n                                    ]\n                                }\n                            ]\n                        },\n                        {\n                            \"allOf\": [\n                                {\n                                    \"if\": null,\n                                    \"properties\": {\n                                        \"libvirt_domain_driver\": {\n                                            \"enum\": [\n                                                \"none\"\n                                            ]\n                                        }\n                                    }\n                                },\n                                {\n                                    \"then\": true\n                                }\n                            ]\n                        }\n                    ]\n                }\n            }\n        },\n        \"general\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"nature\",\n                \"read_only\"\n            ],\n            \"properties\": {\n                \"description\": {\n                    \"title\": \"Description\",\n                    \"type\": \"string\",\n                    \"attrs\": {\n                        \"type\": \"textarea\"\n                    }\n                },\n                \"nature\": {\n                    \"title\": \"Nature\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"router\",\n                        \"switch\",\n                        \"server\",\n                        \"host\",\n                        \"cloud\",\n                        \"firewall\",\n                        \"external_connector\"\n                    ]\n                },\n                \"read_only\": {\n                    \"description\": \"whether the node definition can be deleted or not.\",\n                    \"type\": \"boolean\",\n                    \"default\": false\n                }\n            }\n        }\n    }\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Explore Existing Topology",
			"item": [
				{
					"name": "Get labs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:20:11 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "14"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "[\n    \"ec3f5f\"\n]"
						}
					]
				},
				{
					"name": "Get specific lab",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:33:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"state\": \"STARTED\",\n    \"created\": \"2020-10-21 18:05:17\",\n    \"lab_title\": \"Multi Platform Network\",\n    \"lab_description\": \"A sample network built with IOS XE, NX-OS, IOS XR, and ASA devices.  Includes Linux hosts.\",\n    \"node_count\": 8,\n    \"link_count\": 16,\n    \"id\": \"ec3f5f\"\n}"
						}
					]
				},
				{
					"name": "Get lab topology",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/topology",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"topology"
							]
						}
					},
					"response": [
						{
							"name": "Failure: invalid API key",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}1/topology",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}1",
										"topology"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:32:03 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "67"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "{\n    \"description\": \"Signature verification failed\",\n    \"code\": 401\n}"
						},
						{
							"name": "Failure: lab not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}1/topology",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}1",
										"topology"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:31:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"description\": \"Lab not found: ec3f5f1.\",\n    \"code\": 404\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/topology",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"topology"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:31:46 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"nodes\": [\n        {\n            \"id\": \"n5\",\n            \"data\": {\n                \"node_definition\": \"csr1000v\",\n                \"image_definition\": \"csr1000v-161101b\",\n                \"label\": \"dist-rtr01\",\n                \"x\": -700,\n                \"y\": 100,\n                \"state\": \"BOOTED\",\n                \"ram\": null,\n                \"cpus\": null,\n                \"data_volume\": null,\n                \"boot_disk_size\": null,\n                \"tags\": [],\n                \"configuration\": \"service timestamps debug datetime msec\\nservice timestamps log datetime msec\\n! Call-home is enabled by Smart-Licensing.\\nservice call-home\\nplatform qfp utilization monitor load 80\\nno platform punt-keepalive disable-kernel-core\\nplatform console serial\\n!\\nhostname dist-rtr01\\n!\\nboot-start-marker\\nboot-end-marker\\n!\\n!\\nvrf definition Mgmt-intf\\n!\\naddress-family ipv4\\nexit-address-family\\n!\\naddress-family ipv6\\nexit-address-family\\n!\\nno logging console\\nenable password cisco\\n!\\nno aaa new-model\\ncall-home\\n! If contact email address in call-home is configured as sch-smart-licensing@cisco.com\\n! the email address configured in Cisco Smart License Portal will be used as contact email address to send SCH notifications.\\ncontact-email-addr sch-smart-licensing@cisco.com\\nprofile \\\"CiscoTAC-1\\\"\\n  active\\n  destination transport-method http\\n  no destination transport-method email\\n!\\nno ip domain lookup\\nip domain name virl.info\\n!\\nlogin on-success log\\n!\\nsubscriber templating\\n!\\n!\\nmultilink bundle-name authenticated\\n!\\ncrypto pki trustpoint SLA-TrustPoint\\nenrollment pkcs12\\nrevocation-check crl\\n!\\n!\\ncrypto pki certificate chain SLA-TrustPoint\\ncertificate ca 01\\n  30820321 30820209 A0030201 02020101 300D0609 2A864886 F70D0101 0B050030\\n  32310E30 0C060355 040A1305 43697363 6F312030 1E060355 04031317 43697363\\n  6F204C69 63656E73 696E6720 526F6F74 20434130 1E170D31 33303533 30313934\\n  3834375A 170D3338 30353330 31393438 34375A30 32310E30 0C060355 040A1305\\n  43697363 6F312030 1E060355 04031317 43697363 6F204C69 63656E73 696E6720\\n  526F6F74 20434130 82012230 0D06092A 864886F7 0D010101 05000382 010F0030\\n  82010A02 82010100 A6BCBD96 131E05F7 145EA72C 2CD686E6 17222EA1 F1EFF64D\\n  CBB4C798 212AA147 C655D8D7 9471380D 8711441E 1AAF071A 9CAE6388 8A38E520\\n  1C394D78 462EF239 C659F715 B98C0A59 5BBB5CBD 0CFEBEA3 700A8BF7 D8F256EE\\n  4AA4E80D DB6FD1C9 60B1FD18 FFC69C96 6FA68957 A2617DE7 104FDC5F EA2956AC\\n  7390A3EB 2B5436AD C847A2C5 DAB553EB 69A9A535 58E9F3E3 C0BD23CF 58BD7188\\n  68E69491 20F320E7 948E71D7 AE3BCC84 F10684C7 4BC8E00F 539BA42B 42C68BB7\\n  C7479096 B4CB2D62 EA2F505D C7B062A4 6811D95B E8250FC4 5D5D5FB8 8F27D191\\n  C55F0D76 61F9A4CD 3D992327 A8BB03BD 4E6D7069 7CBADF8B DF5F4368 95135E44\\n  DFC7C6CF 04DD7FD1 02030100 01A34230 40300E06 03551D0F 0101FF04 04030201\\n  06300F06 03551D13 0101FF04 05300301 01FF301D 0603551D 0E041604 1449DC85\\n  4B3D31E5 1B3E6A17 606AF333 3D3B4C73 E8300D06 092A8648 86F70D01 010B0500\\n  03820101 00507F24 D3932A66 86025D9F E838AE5C 6D4DF6B0 49631C78 240DA905\\n  604EDCDE FF4FED2B 77FC460E CD636FDB DD44681E 3A5673AB 9093D3B1 6C9E3D8B\\n  D98987BF E40CBD9E 1AECA0C2 2189BB5C 8FA85686 CD98B646 5575B146 8DFC66A8\\n  467A3DF4 4D565700 6ADF0F0D CF835015 3C04FF7C 21E878AC 11BA9CD2 55A9232C\\n  7CA7B7E6 C1AF74F6 152E99B7 B1FCF9BB E973DE7F 5BDDEB86 C71E3B49 1765308B\\n  5FB0DA06 B92AFE7F 494E8A9E 07B85737 F3A58BE1 1A48A229 C37C1E69 39F08678\\n  80DDCD16 D6BACECA EEBC7CF9 8428787B 35202CDC 60E4616A B623CDBD 230E3AFB\\n  418616A9 4093E049 4D10AB75 27E86F73 932E35B5 8862FDAE 0275156F 719BB2F0\\n  D697DF7F 28\\n    quit\\n!\\nlicense udi pid CSR1000V sn 9QRVOWWZSOE\\ndiagnostic bootup level minimal\\n!\\nspanning-tree extend system-id\\nmemory free low-watermark processor 80526\\n!\\nrestconf\\n!\\nusername cisco privilege 15 secret 9 $9$iVecEqVTUJzHUk$EO2BfGoo4I8.wW.QanPw2rSxwy9NJt6kc3xFNEFLYSA\\n!\\nredundancy\\n!\\n!\\ninterface Loopback0\\ndescription to\\nno ip address\\nshutdown\\n!\\ninterface GigabitEthernet1\\ndescription to port6.sandbox-backend\\nvrf forwarding Mgmt-intf\\nip address 10.10.20.175 255.255.255.0\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\ninterface GigabitEthernet2\\ndescription L3 Link to core-rtr01\\nip address 172.16.252.21 255.255.255.252\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\ninterface GigabitEthernet3\\ndescription L3 Link to core-rtr02\\nip address 172.16.252.25 255.255.255.252\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\ninterface GigabitEthernet4\\ndescription L3 Link to dist-sw01\\nip address 172.16.252.2 255.255.255.252\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\ninterface GigabitEthernet5\\ndescription L3 Link to dist-sw02\\nip address 172.16.252.10 255.255.255.252\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\ninterface GigabitEthernet6\\ndescription L3 Link to dist-rtr02\\nip address 172.16.252.17 255.255.255.252\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\nrouter ospf 1\\nno log-adjacency-changes\\nnetwork 172.16.252.0 0.0.3.255 area 0\\n!\\nip forward-protocol nd\\nno ip http server\\nip http secure-server\\nip route vrf Mgmt-intf 0.0.0.0 0.0.0.0 10.10.20.254\\n!\\nip ssh server algorithm authentication password\\n!\\ncontrol-plane\\n!\\n!\\nline con 0\\nexec-timeout 0 0\\npassword cisco\\nstopbits 1\\nline vty 0 4\\nexec-timeout 720 0\\npassword cisco\\nlogin local\\ntransport input telnet ssh\\n!\\n!\\nend\"\n            }\n        },\n        {\n            \"id\": \"n6\",\n            \"data\": {\n                \"node_definition\": \"csr1000v\",\n                \"image_definition\": \"csr1000v-161101b\",\n                \"label\": \"dist-rtr02\",\n                \"x\": -600,\n                \"y\": 100,\n                \"state\": \"BOOTED\",\n                \"ram\": null,\n                \"cpus\": null,\n                \"data_volume\": null,\n                \"boot_disk_size\": null,\n                \"tags\": [],\n                \"configuration\": \"service timestamps debug datetime msec\\nservice timestamps log datetime msec\\n! Call-home is enabled by Smart-Licensing.\\nservice call-home\\nplatform qfp utilization monitor load 80\\nno platform punt-keepalive disable-kernel-core\\nplatform console serial\\n!\\nhostname dist-rtr02\\n!\\nboot-start-marker\\nboot-end-marker\\n!\\n!\\nvrf definition Mgmt-intf\\n!\\naddress-family ipv4\\nexit-address-family\\n!\\naddress-family ipv6\\nexit-address-family\\n!\\nno logging console\\nenable password cisco\\n!\\nno aaa new-model\\ncall-home\\n! If contact email address in call-home is configured as sch-smart-licensing@cisco.com\\n! the email address configured in Cisco Smart License Portal will be used as contact email address to send SCH notifications.\\ncontact-email-addr sch-smart-licensing@cisco.com\\nprofile \\\"CiscoTAC-1\\\"\\n  active\\n  destination transport-method http\\n  no destination transport-method email\\n!\\nno ip domain lookup\\nip domain name virl.info\\n!\\nlogin on-success log\\n!\\nsubscriber templating\\n!\\n!\\nmultilink bundle-name authenticated\\n!\\ncrypto pki trustpoint SLA-TrustPoint\\nenrollment pkcs12\\nrevocation-check crl\\n!\\n!\\ncrypto pki certificate chain SLA-TrustPoint\\ncertificate ca 01\\n  30820321 30820209 A0030201 02020101 300D0609 2A864886 F70D0101 0B050030\\n  32310E30 0C060355 040A1305 43697363 6F312030 1E060355 04031317 43697363\\n  6F204C69 63656E73 696E6720 526F6F74 20434130 1E170D31 33303533 30313934\\n  3834375A 170D3338 30353330 31393438 34375A30 32310E30 0C060355 040A1305\\n  43697363 6F312030 1E060355 04031317 43697363 6F204C69 63656E73 696E6720\\n  526F6F74 20434130 82012230 0D06092A 864886F7 0D010101 05000382 010F0030\\n  82010A02 82010100 A6BCBD96 131E05F7 145EA72C 2CD686E6 17222EA1 F1EFF64D\\n  CBB4C798 212AA147 C655D8D7 9471380D 8711441E 1AAF071A 9CAE6388 8A38E520\\n  1C394D78 462EF239 C659F715 B98C0A59 5BBB5CBD 0CFEBEA3 700A8BF7 D8F256EE\\n  4AA4E80D DB6FD1C9 60B1FD18 FFC69C96 6FA68957 A2617DE7 104FDC5F EA2956AC\\n  7390A3EB 2B5436AD C847A2C5 DAB553EB 69A9A535 58E9F3E3 C0BD23CF 58BD7188\\n  68E69491 20F320E7 948E71D7 AE3BCC84 F10684C7 4BC8E00F 539BA42B 42C68BB7\\n  C7479096 B4CB2D62 EA2F505D C7B062A4 6811D95B E8250FC4 5D5D5FB8 8F27D191\\n  C55F0D76 61F9A4CD 3D992327 A8BB03BD 4E6D7069 7CBADF8B DF5F4368 95135E44\\n  DFC7C6CF 04DD7FD1 02030100 01A34230 40300E06 03551D0F 0101FF04 04030201\\n  06300F06 03551D13 0101FF04 05300301 01FF301D 0603551D 0E041604 1449DC85\\n  4B3D31E5 1B3E6A17 606AF333 3D3B4C73 E8300D06 092A8648 86F70D01 010B0500\\n  03820101 00507F24 D3932A66 86025D9F E838AE5C 6D4DF6B0 49631C78 240DA905\\n  604EDCDE FF4FED2B 77FC460E CD636FDB DD44681E 3A5673AB 9093D3B1 6C9E3D8B\\n  D98987BF E40CBD9E 1AECA0C2 2189BB5C 8FA85686 CD98B646 5575B146 8DFC66A8\\n  467A3DF4 4D565700 6ADF0F0D CF835015 3C04FF7C 21E878AC 11BA9CD2 55A9232C\\n  7CA7B7E6 C1AF74F6 152E99B7 B1FCF9BB E973DE7F 5BDDEB86 C71E3B49 1765308B\\n  5FB0DA06 B92AFE7F 494E8A9E 07B85737 F3A58BE1 1A48A229 C37C1E69 39F08678\\n  80DDCD16 D6BACECA EEBC7CF9 8428787B 35202CDC 60E4616A B623CDBD 230E3AFB\\n  418616A9 4093E049 4D10AB75 27E86F73 932E35B5 8862FDAE 0275156F 719BB2F0\\n  D697DF7F 28\\n    quit\\n!\\nlicense udi pid CSR1000V sn 9BYY4VJUS2J\\ndiagnostic bootup level minimal\\n!\\nspanning-tree extend system-id\\nmemory free low-watermark processor 80526\\n!\\nusername cisco privilege 15 secret 9 $9$cONmK/B00qLzO.$iaGnQNzSbJ3ypgnmS02qYpg3FORertbgOgB2CyOHl9g\\n!\\nredundancy\\n!\\n!\\ninterface Loopback0\\ndescription to\\nno ip address\\nshutdown\\n!\\ninterface GigabitEthernet1\\ndescription to port7.sandbox-backend\\nvrf forwarding Mgmt-intf\\nip address 10.10.20.176 255.255.255.0\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\ninterface GigabitEthernet2\\ndescription L3 Link to core-rtr01\\nip address 172.16.252.29 255.255.255.252\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\ninterface GigabitEthernet3\\ndescription L3 Link to core-rtr02\\nip address 172.16.252.33 255.255.255.252\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\ninterface GigabitEthernet4\\ndescription L3 Link to dist-sw01\\nip address 172.16.252.6 255.255.255.252\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\ninterface GigabitEthernet5\\ndescription L3 Link to dist-sw02\\nip address 172.16.252.14 255.255.255.252\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\ninterface GigabitEthernet6\\ndescription L3 Link to dist-rtr01\\nip address 172.16.252.18 255.255.255.252\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\nrouter ospf 1\\nno log-adjacency-changes\\nnetwork 172.16.252.0 0.0.3.255 area 0\\n!\\nip forward-protocol nd\\nno ip http server\\nip http secure-server\\nip route vrf Mgmt-intf 0.0.0.0 0.0.0.0 10.10.20.254\\n!\\nip ssh server algorithm authentication password\\n!\\ncontrol-plane\\n!\\n!\\nline con 0\\nexec-timeout 0 0\\npassword cisco\\nstopbits 1\\nline vty 0 4\\nexec-timeout 720 0\\npassword cisco\\nlogin local\\ntransport input telnet ssh\\n!\\n!\\nend\"\n            }\n        },\n        {\n            \"id\": \"n7\",\n            \"data\": {\n                \"node_definition\": \"nxosv9000\",\n                \"image_definition\": \"nxosv9000-9-2-3\",\n                \"label\": \"dist-sw01\",\n                \"x\": -700,\n                \"y\": 200,\n                \"state\": \"BOOTED\",\n                \"ram\": 8192,\n                \"cpus\": 4,\n                \"data_volume\": null,\n                \"boot_disk_size\": null,\n                \"tags\": [],\n                \"configuration\": \"echo 'from cli import cli, clip' > set_boot.py\\necho 'import json' >> set_boot.py\\necho 'bootimage = json.loads(cli(\\\"show version | json\\\"))[\\\"kick_file_name\\\"]' >> set_boot.py\\necho 'set_boot = cli(\\\"conf t ; boot nxos {}\\\".format(bootimage))' >> set_boot.py\\necho 'save_config = cli(\\\"copy running-config startup-config\\\")' >> set_boot.py\\n\\nevent manager applet BOOTCONFIG\\n  event syslog pattern \\\"mgmt0 is UP\\\"\\n  action 2.0 cli python bootflash:set_boot.py\\n\\nhostname dist-sw01\\nvdc dist-sw01 id 1\\n  limit-resource vlan minimum 16 maximum 4094\\n  limit-resource vrf minimum 2 maximum 4096\\n  limit-resource port-channel minimum 0 maximum 511\\n  limit-resource u4route-mem minimum 96 maximum 96\\n  limit-resource u6route-mem minimum 24 maximum 24\\n  limit-resource m4route-mem minimum 58 maximum 58\\n  limit-resource m6route-mem minimum 8 maximum 8\\n\\nfeature telnet\\ncfs eth distribute\\nfeature ospf\\nfeature interface-vlan\\nfeature hsrp\\nfeature lacp\\nfeature vpc\\n\\nno password strength-check\\nusername admin password 5 $1$KuOSBsvW$Cy0TSD..gEBGBPjzpDgf51  role network-admin\\nusername adminbackup password 5 !  role network-operator\\nusername adminbackup passphrase  lifetime 99999 warntime 14 gracetime 3\\nusername cisco password 5 $1$Nk7ZkwH0$fyiRmMMfIheqE3BqvcL0C1  role network-operator\\nusername cisco role network-admin\\nusername cisco passphrase  lifetime 99999 warntime 14 gracetime 3\\nusername lab password 5 $1$buoy/oqy$.EXQz8rCn72ii8qtdldj00  role network-admin\\nusername lab passphrase  lifetime 99999 warntime 14 gracetime 3\\nip domain-lookup\\nsnmp-server user lab network-admin auth md5 0x5ceb414591539ee35159fca86fdfa101 priv 0x5ceb414591539ee35159fca86fdfa101 localizedkey\\nsnmp-server user admin network-admin auth md5 0x328945d53e05e8e7207f8c20b142f0b7 priv 0x328945d53e05e8e7207f8c20b142f0b7 localizedkey\\nsnmp-server user cisco network-operator auth md5 0x55b3c64a53fb95518e75358ee75e82e9 priv 0x55b3c64a53fb95518e75358ee75e82e9 localizedkey\\nsnmp-server user cisco network-admin\\nrmon event 1 log trap public description FATAL(1) owner PMON@FATAL\\nrmon event 2 log trap public description CRITICAL(2) owner PMON@CRITICAL\\nrmon event 3 log trap public description ERROR(3) owner PMON@ERROR\\nrmon event 4 log trap public description WARNING(4) owner PMON@WARNING\\nrmon event 5 log trap public description INFORMATION(5) owner PMON@INFO\\n\\nvlan 1,101-105\\nvlan 101\\n  name prod\\nvlan 102\\n  name dev\\nvlan 103\\n  name test\\nvlan 104\\n  name security\\nvlan 105\\n  name iot\\n\\nvrf context management\\n  ip route 0.0.0.0/0 10.10.20.254\\nhardware forwarding unicast trace\\nvpc domain 101\\n  peer-switch\\n  peer-keepalive destination 10.10.20.178 source 10.10.20.177\\n  peer-gateway\\n\\n\\ninterface Vlan1\\n  no ip redirects\\n  no ipv6 redirects\\n\\ninterface Vlan101\\n  description prod svi\\n  no shutdown\\n  no ip redirects\\n  ip address 172.16.101.2/24\\n  no ipv6 redirects\\n  ip router ospf 1 area 0.0.0.0\\n  hsrp 10\\n    ip 172.16.101.1\\n\\ninterface Vlan102\\n  description dev svi\\n  no shutdown\\n  no ip redirects\\n  ip address 172.16.102.2/24\\n  no ipv6 redirects\\n  ip router ospf 1 area 0.0.0.0\\n  hsrp 10\\n    ip 172.16.102.1\\n\\ninterface Vlan103\\n  description test svi\\n  no shutdown\\n  no ip redirects\\n  ip address 172.16.103.2/24\\n  no ipv6 redirects\\n  ip router ospf 1 area 0.0.0.0\\n  hsrp 10\\n    ip 172.16.103.1\\n\\ninterface Vlan104\\n  description security svi\\n  no shutdown\\n  no ip redirects\\n  ip address 172.16.104.2/24\\n  no ipv6 redirects\\n  ip router ospf 1 area 0.0.0.0\\n  hsrp 10\\n    ip 172.16.104.1\\n\\ninterface Vlan105\\n  description iot svi\\n  no shutdown\\n  no ip redirects\\n  ip address 172.16.105.2/24\\n  no ipv6 redirects\\n  ip router ospf 1 area 0.0.0.0\\n  hsrp 10\\n    ip 172.16.105.1\\n\\ninterface port-channel1\\n  switchport mode trunk\\n  spanning-tree port type network\\n  vpc peer-link\\n\\ninterface Ethernet1/1\\n  description VPC Peer Link\\n  switchport mode trunk\\n  channel-group 1 mode active\\n\\ninterface Ethernet1/2\\n  description VPC Peer Link\\n  switchport mode trunk\\n  channel-group 1 mode active\\n\\ninterface Ethernet1/3\\n  description L3 link to dist-rtr01\\n  no switchport\\n  ip address 172.16.252.1/30\\n  no ip ospf passive-interface\\n  ip router ospf 1 area 0.0.0.0\\n  no shutdown\\n\\ninterface Ethernet1/4\\n  description L3 link to dist-rtr02\\n  no switchport\\n  ip address 172.16.252.5/30\\n  no ip ospf passive-interface\\n  ip router ospf 1 area 0.0.0.0\\n  no shutdown\\n\\ninterface Ethernet1/5\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/6\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/7\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/8\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/9\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/10\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/11\\n  description Link to inside-host01\\n  switchport access vlan 101\\n  spanning-tree port type edge\\n\\ninterface mgmt0\\n  description to port8.sandbox-backend\\n  duplex full\\n  vrf member management\\n  ip address 10.10.20.177/24\\n\\ninterface loopback0\\n  description to\\n  shutdown\\nline console\\n  exec-timeout 0\\n  terminal width  511\\nline vty\\nrouter ospf 1\\n  passive-interface default\\n\\nno logging console\\nboot nxos bootflash:///nxos.9.2.3.bin\"\n            }\n        },\n        {\n            \"id\": \"n8\",\n            \"data\": {\n                \"node_definition\": \"nxosv9000\",\n                \"image_definition\": \"nxosv9000-9-2-3\",\n                \"label\": \"dist-sw02\",\n                \"x\": -600,\n                \"y\": 200,\n                \"state\": \"BOOTED\",\n                \"ram\": 8192,\n                \"cpus\": 4,\n                \"data_volume\": null,\n                \"boot_disk_size\": null,\n                \"tags\": [],\n                \"configuration\": \"echo 'from cli import cli, clip' > set_boot.py\\necho 'import json' >> set_boot.py\\necho 'bootimage = json.loads(cli(\\\"show version | json\\\"))[\\\"kick_file_name\\\"]' >> set_boot.py\\necho 'set_boot = cli(\\\"conf t ; boot nxos {}\\\".format(bootimage))' >> set_boot.py\\necho 'save_config = cli(\\\"copy running-config startup-config\\\")' >> set_boot.py\\n\\nevent manager applet BOOTCONFIG\\n  event syslog pattern \\\"mgmt0 is UP\\\"\\n  action 2.0 cli python bootflash:set_boot.py\\n\\nhostname dist-sw02\\nvdc dist-sw02 id 1\\n  limit-resource vlan minimum 16 maximum 4094\\n  limit-resource vrf minimum 2 maximum 4096\\n  limit-resource port-channel minimum 0 maximum 511\\n  limit-resource u4route-mem minimum 96 maximum 96\\n  limit-resource u6route-mem minimum 24 maximum 24\\n  limit-resource m4route-mem minimum 58 maximum 58\\n  limit-resource m6route-mem minimum 8 maximum 8\\n\\nfeature telnet\\ncfs eth distribute\\nfeature ospf\\nfeature interface-vlan\\nfeature hsrp\\nfeature lacp\\nfeature vpc\\n\\nno password strength-check\\nusername admin password 5 $1$KuOSBsvW$Cy0TSD..gEBGBPjzpDgf51  role network-admin\\nusername adminbackup password 5 !  role network-operator\\nusername adminbackup passphrase  lifetime 99999 warntime 14 gracetime 3\\nusername cisco password 5 $1$Nk7ZkwH0$fyiRmMMfIheqE3BqvcL0C1  role network-operator\\nusername cisco role network-admin\\nusername cisco passphrase  lifetime 99999 warntime 14 gracetime 3\\nusername lab password 5 $1$buoy/oqy$.EXQz8rCn72ii8qtdldj00  role network-admin\\nusername lab passphrase  lifetime 99999 warntime 14 gracetime 3\\nip domain-lookup\\nsnmp-server user lab network-admin auth md5 0x5ceb414591539ee35159fca86fdfa101 priv 0x5ceb414591539ee35159fca86fdfa101 localizedkey\\nsnmp-server user admin network-admin auth md5 0x328945d53e05e8e7207f8c20b142f0b7 priv 0x328945d53e05e8e7207f8c20b142f0b7 localizedkey\\nsnmp-server user cisco network-operator auth md5 0x55b3c64a53fb95518e75358ee75e82e9 priv 0x55b3c64a53fb95518e75358ee75e82e9 localizedkey\\nsnmp-server user cisco network-admin\\nrmon event 1 log trap public description FATAL(1) owner PMON@FATAL\\nrmon event 2 log trap public description CRITICAL(2) owner PMON@CRITICAL\\nrmon event 3 log trap public description ERROR(3) owner PMON@ERROR\\nrmon event 4 log trap public description WARNING(4) owner PMON@WARNING\\nrmon event 5 log trap public description INFORMATION(5) owner PMON@INFO\\n\\nvlan 1,101-105\\nvlan 101\\n  name prod\\nvlan 102\\n  name dev\\nvlan 103\\n  name test\\nvlan 104\\n  name security\\nvlan 105\\n  name iot\\n\\nvrf context management\\n  ip route 0.0.0.0/0 10.10.20.254\\nhardware forwarding unicast trace\\nvpc domain 101\\n  peer-switch\\n  peer-keepalive destination 10.10.20.177 source 10.10.20.178\\n  peer-gateway\\n\\n\\ninterface Vlan1\\n  no ip redirects\\n  no ipv6 redirects\\n\\ninterface Vlan101\\n  description prod svi\\n  no shutdown\\n  no ip redirects\\n  ip address 172.16.101.3/24\\n  no ipv6 redirects\\n  ip router ospf 1 area 0.0.0.0\\n  hsrp 10\\n    ip 172.16.101.1\\n\\ninterface Vlan102\\n  description dev svi\\n  no shutdown\\n  no ip redirects\\n  ip address 172.16.102.3/24\\n  no ipv6 redirects\\n  ip router ospf 1 area 0.0.0.0\\n  hsrp 10\\n    ip 172.16.102.1\\n\\ninterface Vlan103\\n  description test svi\\n  no shutdown\\n  no ip redirects\\n  ip address 172.16.103.3/24\\n  no ipv6 redirects\\n  ip router ospf 1 area 0.0.0.0\\n  hsrp 10\\n    ip 172.16.103.1\\n\\ninterface Vlan104\\n  description security svi\\n  no shutdown\\n  no ip redirects\\n  ip address 172.16.104.3/24\\n  no ipv6 redirects\\n  ip router ospf 1 area 0.0.0.0\\n  hsrp 10\\n    ip 172.16.104.1\\n\\ninterface Vlan105\\n  description iot svi\\n  no shutdown\\n  no ip redirects\\n  ip address 172.16.105.3/24\\n  no ipv6 redirects\\n  ip router ospf 1 area 0.0.0.0\\n  hsrp 10\\n    ip 172.16.105.1\\n\\ninterface port-channel1\\n  switchport mode trunk\\n  spanning-tree port type network\\n  vpc peer-link\\n\\ninterface Ethernet1/1\\n  description VPC Peer Link\\n  switchport mode trunk\\n  channel-group 1 mode active\\n\\ninterface Ethernet1/2\\n  description VPC Peer Link\\n  switchport mode trunk\\n  channel-group 1 mode active\\n\\ninterface Ethernet1/3\\n  description L3 link to dist-rtr01\\n  no switchport\\n  ip address 172.16.252.9/30\\n  no ip ospf passive-interface\\n  ip router ospf 1 area 0.0.0.0\\n  no shutdown\\n\\ninterface Ethernet1/4\\n  description L3 link to dist-rtr02\\n  no switchport\\n  ip address 172.16.252.13/30\\n  no ip ospf passive-interface\\n  ip router ospf 1 area 0.0.0.0\\n  no shutdown\\n\\ninterface Ethernet1/5\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/6\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/7\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/8\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/9\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/10\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/11\\n  description Link to inside-host02\\n  switchport access vlan 102\\n  spanning-tree port type edge\\n\\ninterface mgmt0\\n  description to port9.sandbox-backend\\n  duplex full\\n  vrf member management\\n  ip address 10.10.20.178/24\\n\\ninterface loopback0\\n  description to\\n  shutdown\\nline console\\n  exec-timeout 0\\n  terminal width  511\\nline vty\\nrouter ospf 1\\n  passive-interface default\\n\\nno logging console\\nboot nxos bootflash:///nxos.9.2.3.bin\"\n            }\n        },\n        {\n            \"id\": \"n9\",\n            \"data\": {\n                \"node_definition\": \"ubuntu\",\n                \"image_definition\": \"ubuntu-18-04\",\n                \"label\": \"inside-host01\",\n                \"x\": -700,\n                \"y\": 300,\n                \"state\": \"BOOTED\",\n                \"ram\": null,\n                \"cpus\": null,\n                \"data_volume\": null,\n                \"boot_disk_size\": null,\n                \"tags\": [],\n                \"configuration\": \"#cloud-config\\n  bootcmd:\\n  - ln -s -t /etc/rc.d /etc/rc.local\\n  hostname: inside-host01\\n  manage_etc_hosts: true\\n  runcmd:\\n  - systemctl start rc-local\\n  - sed -i '/^\\\\s*PasswordAuthentication\\\\s\\\\+no/d' /etc/ssh/sshd_config\\n  - echo \\\"PasswordAuthentication yes\\\" >> /etc/ssh/sshd_config\\n  - echo \\\"UseDNS no\\\" >> /etc/ssh/sshd_config\\n  - service ssh restart\\n  - service sshd restart\\n  users:\\n  - default\\n  - gecos: User configured by VIRL Configuration Engine 0.23.12\\n    lock-passwd: false\\n    name: cisco\\n    plain-text-passwd: cisco\\n    shell: /bin/bash\\n    ssh-authorized-keys:\\n    - VIRL-USER-SSH-PUBLIC-KEY\\n    sudo: ALL=(ALL) ALL\\n  write_files:\\n  - path: /etc/rc.local\\n    owner: root:root\\n    permissions: '0755'\\n    content: |-\\n      #!/bin/sh\\n      ifconfig enp0s9 up 10.10.20.179 netmask 255.255.255.0\\n      route add -net 0.0.0.0/0 gw 10.10.20.254 dev enp0s9\\n      ifconfig enp0s2 up 172.16.101.11 netmask 255.255.255.0\\n      route add -net 172.16.0.0/16 gw 172.16.101.1 dev enp0s2\\n      route add -net 172.31.0.0/16 gw 172.16.101.1 dev enp0s2\\n      exit 0\"\n            }\n        },\n        {\n            \"id\": \"n12\",\n            \"data\": {\n                \"node_definition\": \"unmanaged_switch\",\n                \"image_definition\": null,\n                \"label\": \"sandbox-backend\",\n                \"x\": -1000,\n                \"y\": 50,\n                \"state\": \"BOOTED\",\n                \"ram\": null,\n                \"cpus\": null,\n                \"data_volume\": null,\n                \"boot_disk_size\": null,\n                \"tags\": [],\n                \"configuration\": \"\"\n            }\n        },\n        {\n            \"id\": \"n13\",\n            \"data\": {\n                \"node_definition\": \"external_connector\",\n                \"image_definition\": null,\n                \"label\": \"bridge-to-sandbox\",\n                \"x\": -1000,\n                \"y\": -50,\n                \"state\": \"BOOTED\",\n                \"ram\": null,\n                \"cpus\": null,\n                \"data_volume\": null,\n                \"boot_disk_size\": null,\n                \"tags\": [],\n                \"configuration\": \"bridge0\"\n            }\n        },\n        {\n            \"id\": \"n10\",\n            \"data\": {\n                \"node_definition\": \"desktop\",\n                \"image_definition\": \"desktop\",\n                \"label\": \"inside-host02\",\n                \"x\": -600,\n                \"y\": 300,\n                \"state\": \"BOOTED\",\n                \"ram\": null,\n                \"cpus\": null,\n                \"data_volume\": null,\n                \"boot_disk_size\": null,\n                \"tags\": [],\n                \"configuration\": \"hostname inside-host02\\n# like this:\\necho \\\"127.0.0.1   inside-host02\\\" >>/etc/hosts\\necho \\\"::1         inside-host02\\\" >> /etc/hosts\\nifconfig eth1 up 10.10.20.180 netmask 255.255.255.0\\nroute add -net 0.0.0.0/0 gw 10.10.20.254 dev eth1\\nifconfig eth0 up 172.16.102.11 netmask 255.255.255.0\\nroute add -net 172.16.0.0/16 gw 172.16.102.1 dev eth0\\nroute add -net 172.31.0.0/16 gw 172.16.102.1 dev eth0\\nservice lightdm restart\"\n            }\n        }\n    ],\n    \"links\": [\n        {\n            \"id\": \"l5\",\n            \"interface_a\": \"16\",\n            \"interface_b\": \"29\",\n            \"data\": {\n                \"state\": \"STARTED\"\n            }\n        },\n        {\n            \"id\": \"l6\",\n            \"interface_a\": \"17\",\n            \"interface_b\": \"30\",\n            \"data\": {\n                \"state\": \"STARTED\"\n            }\n        },\n        {\n            \"id\": \"l13\",\n            \"interface_a\": \"4\",\n            \"interface_b\": \"18\",\n            \"data\": {\n                \"state\": \"STARTED\"\n            }\n        },\n        {\n            \"id\": \"l14\",\n            \"interface_a\": \"5\",\n            \"interface_b\": \"31\",\n            \"data\": {\n                \"state\": \"STARTED\"\n            }\n        },\n        {\n            \"id\": \"l15\",\n            \"interface_a\": \"11\",\n            \"interface_b\": \"19\",\n            \"data\": {\n                \"state\": \"STARTED\"\n            }\n        },\n        {\n            \"id\": \"l16\",\n            \"interface_a\": \"12\",\n            \"interface_b\": \"32\",\n            \"data\": {\n                \"state\": \"STARTED\"\n            }\n        },\n        {\n            \"id\": \"l17\",\n            \"interface_a\": \"26\",\n            \"interface_b\": \"40\",\n            \"data\": {\n                \"state\": \"STARTED\"\n            }\n        },\n        {\n            \"id\": \"l19\",\n            \"interface_a\": \"61\",\n            \"interface_b\": \"48\",\n            \"data\": {\n                \"state\": \"STARTED\"\n            }\n        },\n        {\n            \"id\": \"l4\",\n            \"interface_a\": \"1\",\n            \"interface_b\": \"54\",\n            \"data\": {\n                \"state\": \"STARTED\"\n            }\n        },\n        {\n            \"id\": \"l25\",\n            \"interface_a\": \"8\",\n            \"interface_b\": \"55\",\n            \"data\": {\n                \"state\": \"STARTED\"\n            }\n        },\n        {\n            \"id\": \"l26\",\n            \"interface_a\": \"6\",\n            \"interface_b\": \"13\",\n            \"data\": {\n                \"state\": \"STARTED\"\n            }\n        },\n        {\n            \"id\": \"l27\",\n            \"interface_a\": \"15\",\n            \"interface_b\": \"56\",\n            \"data\": {\n                \"state\": \"STARTED\"\n            }\n        },\n        {\n            \"id\": \"l28\",\n            \"interface_a\": \"28\",\n            \"interface_b\": \"57\",\n            \"data\": {\n                \"state\": \"STARTED\"\n            }\n        },\n        {\n            \"id\": \"l30\",\n            \"interface_a\": \"47\",\n            \"interface_b\": \"59\",\n            \"data\": {\n                \"state\": \"STARTED\"\n            }\n        },\n        {\n            \"id\": \"l18\",\n            \"interface_a\": \"62\",\n            \"interface_b\": \"39\",\n            \"data\": {\n                \"state\": \"STARTED\"\n            }\n        },\n        {\n            \"id\": \"l31\",\n            \"interface_a\": \"63\",\n            \"interface_b\": \"60\",\n            \"data\": {\n                \"state\": \"STARTED\"\n            }\n        }\n    ],\n    \"interfaces\": [\n        {\n            \"id\": \"0\",\n            \"node\": \"n5\",\n            \"data\": {\n                \"label\": \"Loopback0\",\n                \"slot\": null,\n                \"state\": \"STARTED\",\n                \"type\": \"loopback\"\n            }\n        },\n        {\n            \"id\": \"1\",\n            \"node\": \"n5\",\n            \"data\": {\n                \"label\": \"GigabitEthernet1\",\n                \"slot\": 0,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"2\",\n            \"node\": \"n5\",\n            \"data\": {\n                \"label\": \"GigabitEthernet2\",\n                \"slot\": 1,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"3\",\n            \"node\": \"n5\",\n            \"data\": {\n                \"label\": \"GigabitEthernet3\",\n                \"slot\": 2,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"4\",\n            \"node\": \"n5\",\n            \"data\": {\n                \"label\": \"GigabitEthernet4\",\n                \"slot\": 3,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"5\",\n            \"node\": \"n5\",\n            \"data\": {\n                \"label\": \"GigabitEthernet5\",\n                \"slot\": 4,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"6\",\n            \"node\": \"n5\",\n            \"data\": {\n                \"label\": \"GigabitEthernet6\",\n                \"slot\": 5,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"7\",\n            \"node\": \"n6\",\n            \"data\": {\n                \"label\": \"Loopback0\",\n                \"slot\": null,\n                \"state\": \"STARTED\",\n                \"type\": \"loopback\"\n            }\n        },\n        {\n            \"id\": \"8\",\n            \"node\": \"n6\",\n            \"data\": {\n                \"label\": \"GigabitEthernet1\",\n                \"slot\": 0,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"9\",\n            \"node\": \"n6\",\n            \"data\": {\n                \"label\": \"GigabitEthernet2\",\n                \"slot\": 1,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"10\",\n            \"node\": \"n6\",\n            \"data\": {\n                \"label\": \"GigabitEthernet3\",\n                \"slot\": 2,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"11\",\n            \"node\": \"n6\",\n            \"data\": {\n                \"label\": \"GigabitEthernet4\",\n                \"slot\": 3,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"12\",\n            \"node\": \"n6\",\n            \"data\": {\n                \"label\": \"GigabitEthernet5\",\n                \"slot\": 4,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"13\",\n            \"node\": \"n6\",\n            \"data\": {\n                \"label\": \"GigabitEthernet6\",\n                \"slot\": 5,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"14\",\n            \"node\": \"n7\",\n            \"data\": {\n                \"label\": \"Loopback0\",\n                \"slot\": null,\n                \"state\": \"STARTED\",\n                \"type\": \"loopback\"\n            }\n        },\n        {\n            \"id\": \"15\",\n            \"node\": \"n7\",\n            \"data\": {\n                \"label\": \"mgmt0\",\n                \"slot\": 0,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"16\",\n            \"node\": \"n7\",\n            \"data\": {\n                \"label\": \"Ethernet1/1\",\n                \"slot\": 1,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"17\",\n            \"node\": \"n7\",\n            \"data\": {\n                \"label\": \"Ethernet1/2\",\n                \"slot\": 2,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"18\",\n            \"node\": \"n7\",\n            \"data\": {\n                \"label\": \"Ethernet1/3\",\n                \"slot\": 3,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"19\",\n            \"node\": \"n7\",\n            \"data\": {\n                \"label\": \"Ethernet1/4\",\n                \"slot\": 4,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"20\",\n            \"node\": \"n7\",\n            \"data\": {\n                \"label\": \"Ethernet1/5\",\n                \"slot\": 5,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"21\",\n            \"node\": \"n7\",\n            \"data\": {\n                \"label\": \"Ethernet1/6\",\n                \"slot\": 6,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"22\",\n            \"node\": \"n7\",\n            \"data\": {\n                \"label\": \"Ethernet1/7\",\n                \"slot\": 7,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"23\",\n            \"node\": \"n7\",\n            \"data\": {\n                \"label\": \"Ethernet1/8\",\n                \"slot\": 8,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"24\",\n            \"node\": \"n7\",\n            \"data\": {\n                \"label\": \"Ethernet1/9\",\n                \"slot\": 9,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"25\",\n            \"node\": \"n7\",\n            \"data\": {\n                \"label\": \"Ethernet1/10\",\n                \"slot\": 10,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"26\",\n            \"node\": \"n7\",\n            \"data\": {\n                \"label\": \"Ethernet1/11\",\n                \"slot\": 11,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"27\",\n            \"node\": \"n8\",\n            \"data\": {\n                \"label\": \"Loopback0\",\n                \"slot\": null,\n                \"state\": \"STARTED\",\n                \"type\": \"loopback\"\n            }\n        },\n        {\n            \"id\": \"28\",\n            \"node\": \"n8\",\n            \"data\": {\n                \"label\": \"mgmt0\",\n                \"slot\": 0,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"29\",\n            \"node\": \"n8\",\n            \"data\": {\n                \"label\": \"Ethernet1/1\",\n                \"slot\": 1,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"30\",\n            \"node\": \"n8\",\n            \"data\": {\n                \"label\": \"Ethernet1/2\",\n                \"slot\": 2,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"31\",\n            \"node\": \"n8\",\n            \"data\": {\n                \"label\": \"Ethernet1/3\",\n                \"slot\": 3,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"32\",\n            \"node\": \"n8\",\n            \"data\": {\n                \"label\": \"Ethernet1/4\",\n                \"slot\": 4,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"33\",\n            \"node\": \"n8\",\n            \"data\": {\n                \"label\": \"Ethernet1/5\",\n                \"slot\": 5,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"34\",\n            \"node\": \"n8\",\n            \"data\": {\n                \"label\": \"Ethernet1/6\",\n                \"slot\": 6,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"35\",\n            \"node\": \"n8\",\n            \"data\": {\n                \"label\": \"Ethernet1/7\",\n                \"slot\": 7,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"36\",\n            \"node\": \"n8\",\n            \"data\": {\n                \"label\": \"Ethernet1/8\",\n                \"slot\": 8,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"37\",\n            \"node\": \"n8\",\n            \"data\": {\n                \"label\": \"Ethernet1/9\",\n                \"slot\": 9,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"38\",\n            \"node\": \"n8\",\n            \"data\": {\n                \"label\": \"Ethernet1/10\",\n                \"slot\": 10,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"39\",\n            \"node\": \"n8\",\n            \"data\": {\n                \"label\": \"Ethernet1/11\",\n                \"slot\": 11,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"40\",\n            \"node\": \"n9\",\n            \"data\": {\n                \"label\": \"enp0s2\",\n                \"slot\": 0,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"41\",\n            \"node\": \"n9\",\n            \"data\": {\n                \"label\": \"enp0s3\",\n                \"slot\": 1,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"42\",\n            \"node\": \"n9\",\n            \"data\": {\n                \"label\": \"enp0s4\",\n                \"slot\": 2,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"43\",\n            \"node\": \"n9\",\n            \"data\": {\n                \"label\": \"enp0s5\",\n                \"slot\": 3,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"44\",\n            \"node\": \"n9\",\n            \"data\": {\n                \"label\": \"enp0s6\",\n                \"slot\": 4,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"45\",\n            \"node\": \"n9\",\n            \"data\": {\n                \"label\": \"enp0s7\",\n                \"slot\": 5,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"46\",\n            \"node\": \"n9\",\n            \"data\": {\n                \"label\": \"enp0s8\",\n                \"slot\": 6,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"47\",\n            \"node\": \"n9\",\n            \"data\": {\n                \"label\": \"enp0s9\",\n                \"slot\": 7,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"48\",\n            \"node\": \"n12\",\n            \"data\": {\n                \"label\": \"port0\",\n                \"slot\": 0,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"49\",\n            \"node\": \"n12\",\n            \"data\": {\n                \"label\": \"port1\",\n                \"slot\": 1,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"50\",\n            \"node\": \"n12\",\n            \"data\": {\n                \"label\": \"port2\",\n                \"slot\": 2,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"51\",\n            \"node\": \"n12\",\n            \"data\": {\n                \"label\": \"port3\",\n                \"slot\": 3,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"52\",\n            \"node\": \"n12\",\n            \"data\": {\n                \"label\": \"port4\",\n                \"slot\": 4,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"53\",\n            \"node\": \"n12\",\n            \"data\": {\n                \"label\": \"port5\",\n                \"slot\": 5,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"54\",\n            \"node\": \"n12\",\n            \"data\": {\n                \"label\": \"port6\",\n                \"slot\": 6,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"55\",\n            \"node\": \"n12\",\n            \"data\": {\n                \"label\": \"port7\",\n                \"slot\": 7,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"56\",\n            \"node\": \"n12\",\n            \"data\": {\n                \"label\": \"port8\",\n                \"slot\": 8,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"57\",\n            \"node\": \"n12\",\n            \"data\": {\n                \"label\": \"port9\",\n                \"slot\": 9,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"58\",\n            \"node\": \"n12\",\n            \"data\": {\n                \"label\": \"port10\",\n                \"slot\": 10,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"59\",\n            \"node\": \"n12\",\n            \"data\": {\n                \"label\": \"port11\",\n                \"slot\": 11,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"60\",\n            \"node\": \"n12\",\n            \"data\": {\n                \"label\": \"port12\",\n                \"slot\": 12,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"61\",\n            \"node\": \"n13\",\n            \"data\": {\n                \"label\": \"port\",\n                \"slot\": 0,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"62\",\n            \"node\": \"n10\",\n            \"data\": {\n                \"label\": \"eth0\",\n                \"slot\": 0,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"63\",\n            \"node\": \"n10\",\n            \"data\": {\n                \"label\": \"eth1\",\n                \"slot\": 1,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        }\n    ],\n    \"lab_notes\": \"\",\n    \"lab_title\": \"Multi Platform Network\",\n    \"lab_description\": \"A sample network built with IOS XE, NX-OS, IOS XR, and ASA devices.  Includes Linux hosts.\",\n    \"state\": \"STARTED\",\n    \"created_timestamp\": 1603303517.385979,\n    \"cluster_id\": \"cluster_1\",\n    \"version\": \"0.0.3\"\n}"
						}
					]
				},
				{
					"name": "Get lab tile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/tile",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"tile"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get lab simulation statistics",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/simulation_stats",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"simulation_stats"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/simulation_stats",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"simulation_stats"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:35:00 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"nodes\": {\n        \"n7\": {\n            \"cpu_usage\": 11.27,\n            \"block0_wr_bytes\": 1864481792,\n            \"block0_rd_bytes\": 2694644224,\n            \"times\": {\n                \"QUEUED\": 15,\n                \"STARTED\": 1596,\n                \"BOOTED\": 1282\n            }\n        },\n        \"n5\": {\n            \"cpu_usage\": 47.92,\n            \"block0_wr_bytes\": 237154304,\n            \"block0_rd_bytes\": 687376384,\n            \"times\": {\n                \"QUEUED\": 4,\n                \"STARTED\": 1606,\n                \"BOOTED\": 1464\n            }\n        },\n        \"n9\": {\n            \"cpu_usage\": 0.64,\n            \"block0_wr_bytes\": 2071676928,\n            \"block0_rd_bytes\": 200800768,\n            \"times\": {\n                \"QUEUED\": 9,\n                \"STARTED\": 1601,\n                \"BOOTED\": 1585\n            }\n        },\n        \"n8\": {\n            \"cpu_usage\": 12.01,\n            \"block0_wr_bytes\": 1865266176,\n            \"block0_rd_bytes\": 2821689856,\n            \"times\": {\n                \"QUEUED\": 17,\n                \"STARTED\": 1593,\n                \"BOOTED\": 1283\n            }\n        },\n        \"n10\": {\n            \"cpu_usage\": 0.94,\n            \"block0_wr_bytes\": 227984384,\n            \"block0_rd_bytes\": 99707904,\n            \"times\": {\n                \"QUEUED\": 12,\n                \"STARTED\": 1599,\n                \"BOOTED\": 1574\n            }\n        },\n        \"n6\": {\n            \"cpu_usage\": 48.46,\n            \"block0_wr_bytes\": 203481088,\n            \"block0_rd_bytes\": 661964800,\n            \"times\": {\n                \"QUEUED\": 7,\n                \"STARTED\": 1604,\n                \"BOOTED\": 1463\n            }\n        },\n        \"n12\": {\n            \"cpu_usage\": 0,\n            \"times\": {\n                \"QUEUED\": 1,\n                \"STARTED\": 1609,\n                \"BOOTED\": 1593\n            }\n        },\n        \"n13\": {\n            \"cpu_usage\": 0,\n            \"times\": {\n                \"QUEUED\": 1,\n                \"STARTED\": 1609,\n                \"BOOTED\": 1593\n            }\n        }\n    },\n    \"links\": {\n        \"l26\": {\n            \"readbytes\": 20380,\n            \"readpackets\": 178,\n            \"writebytes\": 20788,\n            \"writepackets\": 182,\n            \"drops\": 0\n        },\n        \"l15\": {\n            \"readbytes\": 19690,\n            \"readpackets\": 174,\n            \"writebytes\": 25283,\n            \"writepackets\": 242,\n            \"drops\": 0\n        },\n        \"l5\": {\n            \"readbytes\": 307572,\n            \"readpackets\": 3765,\n            \"writebytes\": 349129,\n            \"writepackets\": 3852,\n            \"drops\": 0\n        },\n        \"l18\": {\n            \"readbytes\": 79736,\n            \"readpackets\": 244,\n            \"writebytes\": 106049,\n            \"writepackets\": 1640,\n            \"drops\": 0\n        },\n        \"l28\": {\n            \"readbytes\": 108410,\n            \"readpackets\": 1338,\n            \"writebytes\": 113026,\n            \"writepackets\": 1402,\n            \"drops\": 0\n        },\n        \"l4\": {\n            \"readbytes\": 120,\n            \"readpackets\": 2,\n            \"writebytes\": 20802,\n            \"writepackets\": 165,\n            \"drops\": 0\n        },\n        \"l25\": {\n            \"readbytes\": 120,\n            \"readpackets\": 2,\n            \"writebytes\": 20802,\n            \"writepackets\": 165,\n            \"drops\": 0\n        },\n        \"l30\": {\n            \"readbytes\": 1076,\n            \"readpackets\": 14,\n            \"writebytes\": 19804,\n            \"writepackets\": 152,\n            \"drops\": 0\n        },\n        \"l6\": {\n            \"readbytes\": 318861,\n            \"readpackets\": 3896,\n            \"writebytes\": 379494,\n            \"writepackets\": 4010,\n            \"drops\": 0\n        },\n        \"l14\": {\n            \"readbytes\": 19886,\n            \"readpackets\": 174,\n            \"writebytes\": 24699,\n            \"writepackets\": 236,\n            \"drops\": 0\n        },\n        \"l31\": {\n            \"readbytes\": 1076,\n            \"readpackets\": 14,\n            \"writebytes\": 19684,\n            \"writepackets\": 150,\n            \"drops\": 0\n        },\n        \"l17\": {\n            \"readbytes\": 146149,\n            \"readpackets\": 2289,\n            \"writebytes\": 10976,\n            \"writepackets\": 44,\n            \"drops\": 0\n        },\n        \"l27\": {\n            \"readbytes\": 107330,\n            \"readpackets\": 1323,\n            \"writebytes\": 113062,\n            \"writepackets\": 1402,\n            \"drops\": 0\n        },\n        \"l16\": {\n            \"readbytes\": 20654,\n            \"readpackets\": 180,\n            \"writebytes\": 24611,\n            \"writepackets\": 237,\n            \"drops\": 0\n        },\n        \"l19\": {\n            \"readbytes\": 3748,\n            \"readpackets\": 55,\n            \"writebytes\": 18740,\n            \"writepackets\": 136,\n            \"drops\": 0\n        },\n        \"l13\": {\n            \"readbytes\": 20426,\n            \"readpackets\": 178,\n            \"writebytes\": 25207,\n            \"writepackets\": 241,\n            \"drops\": 0\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get lab element state",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/lab_element_state",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"lab_element_state"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/lab_element_state",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"lab_element_state"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:48:06 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"nodes\": {\n        \"n5\": \"BOOTED\",\n        \"n6\": \"BOOTED\",\n        \"n7\": \"BOOTED\",\n        \"n8\": \"BOOTED\",\n        \"n9\": \"BOOTED\",\n        \"n12\": \"BOOTED\",\n        \"n13\": \"BOOTED\",\n        \"n10\": \"BOOTED\"\n    },\n    \"links\": {\n        \"l5\": \"STARTED\",\n        \"l6\": \"STARTED\",\n        \"l13\": \"STARTED\",\n        \"l14\": \"STARTED\",\n        \"l15\": \"STARTED\",\n        \"l16\": \"STARTED\",\n        \"l17\": \"STARTED\",\n        \"l19\": \"STARTED\",\n        \"l4\": \"STARTED\",\n        \"l25\": \"STARTED\",\n        \"l26\": \"STARTED\",\n        \"l27\": \"STARTED\",\n        \"l28\": \"STARTED\",\n        \"l30\": \"STARTED\",\n        \"l18\": \"STARTED\",\n        \"l31\": \"STARTED\"\n    },\n    \"interfaces\": {\n        \"0\": \"STARTED\",\n        \"1\": \"STARTED\",\n        \"2\": \"STARTED\",\n        \"3\": \"STARTED\",\n        \"4\": \"STARTED\",\n        \"5\": \"STARTED\",\n        \"6\": \"STARTED\",\n        \"7\": \"STARTED\",\n        \"8\": \"STARTED\",\n        \"9\": \"STARTED\",\n        \"10\": \"STARTED\",\n        \"11\": \"STARTED\",\n        \"12\": \"STARTED\",\n        \"13\": \"STARTED\",\n        \"14\": \"STARTED\",\n        \"15\": \"STARTED\",\n        \"16\": \"STARTED\",\n        \"17\": \"STARTED\",\n        \"18\": \"STARTED\",\n        \"19\": \"STARTED\",\n        \"20\": \"STARTED\",\n        \"21\": \"STARTED\",\n        \"22\": \"STARTED\",\n        \"23\": \"STARTED\",\n        \"24\": \"STARTED\",\n        \"25\": \"STARTED\",\n        \"26\": \"STARTED\",\n        \"27\": \"STARTED\",\n        \"28\": \"STARTED\",\n        \"29\": \"STARTED\",\n        \"30\": \"STARTED\",\n        \"31\": \"STARTED\",\n        \"32\": \"STARTED\",\n        \"33\": \"STARTED\",\n        \"34\": \"STARTED\",\n        \"35\": \"STARTED\",\n        \"36\": \"STARTED\",\n        \"37\": \"STARTED\",\n        \"38\": \"STARTED\",\n        \"39\": \"STARTED\",\n        \"40\": \"STARTED\",\n        \"41\": \"STARTED\",\n        \"42\": \"STARTED\",\n        \"43\": \"STARTED\",\n        \"44\": \"STARTED\",\n        \"45\": \"STARTED\",\n        \"46\": \"STARTED\",\n        \"47\": \"STARTED\",\n        \"48\": \"STARTED\",\n        \"49\": \"STARTED\",\n        \"50\": \"STARTED\",\n        \"51\": \"STARTED\",\n        \"52\": \"STARTED\",\n        \"53\": \"STARTED\",\n        \"54\": \"STARTED\",\n        \"55\": \"STARTED\",\n        \"56\": \"STARTED\",\n        \"57\": \"STARTED\",\n        \"58\": \"STARTED\",\n        \"59\": \"STARTED\",\n        \"60\": \"STARTED\",\n        \"61\": \"STARTED\",\n        \"62\": \"STARTED\",\n        \"63\": \"STARTED\"\n    }\n}"
						}
					]
				},
				{
					"name": "Download lab (YAML)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/x-yaml"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/download",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"download"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/x-yaml"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/download",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"download"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "yaml",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:35:58 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/x-yaml; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "33043"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "lab:\n  description: A sample network built with IOS XE, NX-OS, IOS XR, and ASA devices.  Includes\n    Linux hosts.\n  notes: ''\n  timestamp: 1603303517.385979\n  title: Multi Platform Network\n  version: 0.0.3\nnodes:\n  - id: n5\n    label: dist-rtr01\n    node_definition: csr1000v\n    x: -700\n    y: 100\n    configuration: |-\n      service timestamps debug datetime msec\n      service timestamps log datetime msec\n      ! Call-home is enabled by Smart-Licensing.\n      service call-home\n      platform qfp utilization monitor load 80\n      no platform punt-keepalive disable-kernel-core\n      platform console serial\n      !\n      hostname dist-rtr01\n      !\n      boot-start-marker\n      boot-end-marker\n      !\n      !\n      vrf definition Mgmt-intf\n      !\n      address-family ipv4\n      exit-address-family\n      !\n      address-family ipv6\n      exit-address-family\n      !\n      no logging console\n      enable password cisco\n      !\n      no aaa new-model\n      call-home\n      ! If contact email address in call-home is configured as sch-smart-licensing@cisco.com\n      ! the email address configured in Cisco Smart License Portal will be used as contact email address to send SCH notifications.\n      contact-email-addr sch-smart-licensing@cisco.com\n      profile \"CiscoTAC-1\"\n        active\n        destination transport-method http\n        no destination transport-method email\n      !\n      no ip domain lookup\n      ip domain name virl.info\n      !\n      login on-success log\n      !\n      subscriber templating\n      !\n      !\n      multilink bundle-name authenticated\n      !\n      crypto pki trustpoint SLA-TrustPoint\n      enrollment pkcs12\n      revocation-check crl\n      !\n      !\n      crypto pki certificate chain SLA-TrustPoint\n      certificate ca 01\n        30820321 30820209 A0030201 02020101 300D0609 2A864886 F70D0101 0B050030\n        32310E30 0C060355 040A1305 43697363 6F312030 1E060355 04031317 43697363\n        6F204C69 63656E73 696E6720 526F6F74 20434130 1E170D31 33303533 30313934\n        3834375A 170D3338 30353330 31393438 34375A30 32310E30 0C060355 040A1305\n        43697363 6F312030 1E060355 04031317 43697363 6F204C69 63656E73 696E6720\n        526F6F74 20434130 82012230 0D06092A 864886F7 0D010101 05000382 010F0030\n        82010A02 82010100 A6BCBD96 131E05F7 145EA72C 2CD686E6 17222EA1 F1EFF64D\n        CBB4C798 212AA147 C655D8D7 9471380D 8711441E 1AAF071A 9CAE6388 8A38E520\n        1C394D78 462EF239 C659F715 B98C0A59 5BBB5CBD 0CFEBEA3 700A8BF7 D8F256EE\n        4AA4E80D DB6FD1C9 60B1FD18 FFC69C96 6FA68957 A2617DE7 104FDC5F EA2956AC\n        7390A3EB 2B5436AD C847A2C5 DAB553EB 69A9A535 58E9F3E3 C0BD23CF 58BD7188\n        68E69491 20F320E7 948E71D7 AE3BCC84 F10684C7 4BC8E00F 539BA42B 42C68BB7\n        C7479096 B4CB2D62 EA2F505D C7B062A4 6811D95B E8250FC4 5D5D5FB8 8F27D191\n        C55F0D76 61F9A4CD 3D992327 A8BB03BD 4E6D7069 7CBADF8B DF5F4368 95135E44\n        DFC7C6CF 04DD7FD1 02030100 01A34230 40300E06 03551D0F 0101FF04 04030201\n        06300F06 03551D13 0101FF04 05300301 01FF301D 0603551D 0E041604 1449DC85\n        4B3D31E5 1B3E6A17 606AF333 3D3B4C73 E8300D06 092A8648 86F70D01 010B0500\n        03820101 00507F24 D3932A66 86025D9F E838AE5C 6D4DF6B0 49631C78 240DA905\n        604EDCDE FF4FED2B 77FC460E CD636FDB DD44681E 3A5673AB 9093D3B1 6C9E3D8B\n        D98987BF E40CBD9E 1AECA0C2 2189BB5C 8FA85686 CD98B646 5575B146 8DFC66A8\n        467A3DF4 4D565700 6ADF0F0D CF835015 3C04FF7C 21E878AC 11BA9CD2 55A9232C\n        7CA7B7E6 C1AF74F6 152E99B7 B1FCF9BB E973DE7F 5BDDEB86 C71E3B49 1765308B\n        5FB0DA06 B92AFE7F 494E8A9E 07B85737 F3A58BE1 1A48A229 C37C1E69 39F08678\n        80DDCD16 D6BACECA EEBC7CF9 8428787B 35202CDC 60E4616A B623CDBD 230E3AFB\n        418616A9 4093E049 4D10AB75 27E86F73 932E35B5 8862FDAE 0275156F 719BB2F0\n        D697DF7F 28\n          quit\n      !\n      license udi pid CSR1000V sn 9QRVOWWZSOE\n      diagnostic bootup level minimal\n      !\n      spanning-tree extend system-id\n      memory free low-watermark processor 80526\n      !\n      restconf\n      !\n      username cisco privilege 15 secret 9 $9$iVecEqVTUJzHUk$EO2BfGoo4I8.wW.QanPw2rSxwy9NJt6kc3xFNEFLYSA\n      !\n      redundancy\n      !\n      !\n      interface Loopback0\n      description to\n      no ip address\n      shutdown\n      !\n      interface GigabitEthernet1\n      description to port6.sandbox-backend\n      vrf forwarding Mgmt-intf\n      ip address 10.10.20.175 255.255.255.0\n      negotiation auto\n      no mop enabled\n      no mop sysid\n      no shutdown\n      !\n      interface GigabitEthernet2\n      description L3 Link to core-rtr01\n      ip address 172.16.252.21 255.255.255.252\n      negotiation auto\n      no mop enabled\n      no mop sysid\n      no shutdown\n      !\n      interface GigabitEthernet3\n      description L3 Link to core-rtr02\n      ip address 172.16.252.25 255.255.255.252\n      negotiation auto\n      no mop enabled\n      no mop sysid\n      no shutdown\n      !\n      interface GigabitEthernet4\n      description L3 Link to dist-sw01\n      ip address 172.16.252.2 255.255.255.252\n      negotiation auto\n      no mop enabled\n      no mop sysid\n      no shutdown\n      !\n      interface GigabitEthernet5\n      description L3 Link to dist-sw02\n      ip address 172.16.252.10 255.255.255.252\n      negotiation auto\n      no mop enabled\n      no mop sysid\n      no shutdown\n      !\n      interface GigabitEthernet6\n      description L3 Link to dist-rtr02\n      ip address 172.16.252.17 255.255.255.252\n      negotiation auto\n      no mop enabled\n      no mop sysid\n      no shutdown\n      !\n      router ospf 1\n      no log-adjacency-changes\n      network 172.16.252.0 0.0.3.255 area 0\n      !\n      ip forward-protocol nd\n      no ip http server\n      ip http secure-server\n      ip route vrf Mgmt-intf 0.0.0.0 0.0.0.0 10.10.20.254\n      !\n      ip ssh server algorithm authentication password\n      !\n      control-plane\n      !\n      !\n      line con 0\n      exec-timeout 0 0\n      password cisco\n      stopbits 1\n      line vty 0 4\n      exec-timeout 720 0\n      password cisco\n      login local\n      transport input telnet ssh\n      !\n      !\n      end\n    image_definition: csr1000v-161101b\n    tags: []\n    interfaces:\n      - id: i0\n        label: Loopback0\n        type: loopback\n      - id: i1\n        slot: 0\n        label: GigabitEthernet1\n        type: physical\n      - id: i2\n        slot: 1\n        label: GigabitEthernet2\n        type: physical\n      - id: i3\n        slot: 2\n        label: GigabitEthernet3\n        type: physical\n      - id: i4\n        slot: 3\n        label: GigabitEthernet4\n        type: physical\n      - id: i5\n        slot: 4\n        label: GigabitEthernet5\n        type: physical\n      - id: i6\n        slot: 5\n        label: GigabitEthernet6\n        type: physical\n  - id: n6\n    label: dist-rtr02\n    node_definition: csr1000v\n    x: -600\n    y: 100\n    configuration: |-\n      service timestamps debug datetime msec\n      service timestamps log datetime msec\n      ! Call-home is enabled by Smart-Licensing.\n      service call-home\n      platform qfp utilization monitor load 80\n      no platform punt-keepalive disable-kernel-core\n      platform console serial\n      !\n      hostname dist-rtr02\n      !\n      boot-start-marker\n      boot-end-marker\n      !\n      !\n      vrf definition Mgmt-intf\n      !\n      address-family ipv4\n      exit-address-family\n      !\n      address-family ipv6\n      exit-address-family\n      !\n      no logging console\n      enable password cisco\n      !\n      no aaa new-model\n      call-home\n      ! If contact email address in call-home is configured as sch-smart-licensing@cisco.com\n      ! the email address configured in Cisco Smart License Portal will be used as contact email address to send SCH notifications.\n      contact-email-addr sch-smart-licensing@cisco.com\n      profile \"CiscoTAC-1\"\n        active\n        destination transport-method http\n        no destination transport-method email\n      !\n      no ip domain lookup\n      ip domain name virl.info\n      !\n      login on-success log\n      !\n      subscriber templating\n      !\n      !\n      multilink bundle-name authenticated\n      !\n      crypto pki trustpoint SLA-TrustPoint\n      enrollment pkcs12\n      revocation-check crl\n      !\n      !\n      crypto pki certificate chain SLA-TrustPoint\n      certificate ca 01\n        30820321 30820209 A0030201 02020101 300D0609 2A864886 F70D0101 0B050030\n        32310E30 0C060355 040A1305 43697363 6F312030 1E060355 04031317 43697363\n        6F204C69 63656E73 696E6720 526F6F74 20434130 1E170D31 33303533 30313934\n        3834375A 170D3338 30353330 31393438 34375A30 32310E30 0C060355 040A1305\n        43697363 6F312030 1E060355 04031317 43697363 6F204C69 63656E73 696E6720\n        526F6F74 20434130 82012230 0D06092A 864886F7 0D010101 05000382 010F0030\n        82010A02 82010100 A6BCBD96 131E05F7 145EA72C 2CD686E6 17222EA1 F1EFF64D\n        CBB4C798 212AA147 C655D8D7 9471380D 8711441E 1AAF071A 9CAE6388 8A38E520\n        1C394D78 462EF239 C659F715 B98C0A59 5BBB5CBD 0CFEBEA3 700A8BF7 D8F256EE\n        4AA4E80D DB6FD1C9 60B1FD18 FFC69C96 6FA68957 A2617DE7 104FDC5F EA2956AC\n        7390A3EB 2B5436AD C847A2C5 DAB553EB 69A9A535 58E9F3E3 C0BD23CF 58BD7188\n        68E69491 20F320E7 948E71D7 AE3BCC84 F10684C7 4BC8E00F 539BA42B 42C68BB7\n        C7479096 B4CB2D62 EA2F505D C7B062A4 6811D95B E8250FC4 5D5D5FB8 8F27D191\n        C55F0D76 61F9A4CD 3D992327 A8BB03BD 4E6D7069 7CBADF8B DF5F4368 95135E44\n        DFC7C6CF 04DD7FD1 02030100 01A34230 40300E06 03551D0F 0101FF04 04030201\n        06300F06 03551D13 0101FF04 05300301 01FF301D 0603551D 0E041604 1449DC85\n        4B3D31E5 1B3E6A17 606AF333 3D3B4C73 E8300D06 092A8648 86F70D01 010B0500\n        03820101 00507F24 D3932A66 86025D9F E838AE5C 6D4DF6B0 49631C78 240DA905\n        604EDCDE FF4FED2B 77FC460E CD636FDB DD44681E 3A5673AB 9093D3B1 6C9E3D8B\n        D98987BF E40CBD9E 1AECA0C2 2189BB5C 8FA85686 CD98B646 5575B146 8DFC66A8\n        467A3DF4 4D565700 6ADF0F0D CF835015 3C04FF7C 21E878AC 11BA9CD2 55A9232C\n        7CA7B7E6 C1AF74F6 152E99B7 B1FCF9BB E973DE7F 5BDDEB86 C71E3B49 1765308B\n        5FB0DA06 B92AFE7F 494E8A9E 07B85737 F3A58BE1 1A48A229 C37C1E69 39F08678\n        80DDCD16 D6BACECA EEBC7CF9 8428787B 35202CDC 60E4616A B623CDBD 230E3AFB\n        418616A9 4093E049 4D10AB75 27E86F73 932E35B5 8862FDAE 0275156F 719BB2F0\n        D697DF7F 28\n          quit\n      !\n      license udi pid CSR1000V sn 9BYY4VJUS2J\n      diagnostic bootup level minimal\n      !\n      spanning-tree extend system-id\n      memory free low-watermark processor 80526\n      !\n      username cisco privilege 15 secret 9 $9$cONmK/B00qLzO.$iaGnQNzSbJ3ypgnmS02qYpg3FORertbgOgB2CyOHl9g\n      !\n      redundancy\n      !\n      !\n      interface Loopback0\n      description to\n      no ip address\n      shutdown\n      !\n      interface GigabitEthernet1\n      description to port7.sandbox-backend\n      vrf forwarding Mgmt-intf\n      ip address 10.10.20.176 255.255.255.0\n      negotiation auto\n      no mop enabled\n      no mop sysid\n      no shutdown\n      !\n      interface GigabitEthernet2\n      description L3 Link to core-rtr01\n      ip address 172.16.252.29 255.255.255.252\n      negotiation auto\n      no mop enabled\n      no mop sysid\n      no shutdown\n      !\n      interface GigabitEthernet3\n      description L3 Link to core-rtr02\n      ip address 172.16.252.33 255.255.255.252\n      negotiation auto\n      no mop enabled\n      no mop sysid\n      no shutdown\n      !\n      interface GigabitEthernet4\n      description L3 Link to dist-sw01\n      ip address 172.16.252.6 255.255.255.252\n      negotiation auto\n      no mop enabled\n      no mop sysid\n      no shutdown\n      !\n      interface GigabitEthernet5\n      description L3 Link to dist-sw02\n      ip address 172.16.252.14 255.255.255.252\n      negotiation auto\n      no mop enabled\n      no mop sysid\n      no shutdown\n      !\n      interface GigabitEthernet6\n      description L3 Link to dist-rtr01\n      ip address 172.16.252.18 255.255.255.252\n      negotiation auto\n      no mop enabled\n      no mop sysid\n      no shutdown\n      !\n      router ospf 1\n      no log-adjacency-changes\n      network 172.16.252.0 0.0.3.255 area 0\n      !\n      ip forward-protocol nd\n      no ip http server\n      ip http secure-server\n      ip route vrf Mgmt-intf 0.0.0.0 0.0.0.0 10.10.20.254\n      !\n      ip ssh server algorithm authentication password\n      !\n      control-plane\n      !\n      !\n      line con 0\n      exec-timeout 0 0\n      password cisco\n      stopbits 1\n      line vty 0 4\n      exec-timeout 720 0\n      password cisco\n      login local\n      transport input telnet ssh\n      !\n      !\n      end\n    image_definition: csr1000v-161101b\n    tags: []\n    interfaces:\n      - id: i0\n        label: Loopback0\n        type: loopback\n      - id: i1\n        slot: 0\n        label: GigabitEthernet1\n        type: physical\n      - id: i2\n        slot: 1\n        label: GigabitEthernet2\n        type: physical\n      - id: i3\n        slot: 2\n        label: GigabitEthernet3\n        type: physical\n      - id: i4\n        slot: 3\n        label: GigabitEthernet4\n        type: physical\n      - id: i5\n        slot: 4\n        label: GigabitEthernet5\n        type: physical\n      - id: i6\n        slot: 5\n        label: GigabitEthernet6\n        type: physical\n  - id: n7\n    label: dist-sw01\n    node_definition: nxosv9000\n    x: -700\n    y: 200\n    configuration: |-\n      echo 'from cli import cli, clip' > set_boot.py\n      echo 'import json' >> set_boot.py\n      echo 'bootimage = json.loads(cli(\"show version | json\"))[\"kick_file_name\"]' >> set_boot.py\n      echo 'set_boot = cli(\"conf t ; boot nxos {}\".format(bootimage))' >> set_boot.py\n      echo 'save_config = cli(\"copy running-config startup-config\")' >> set_boot.py\n\n      event manager applet BOOTCONFIG\n        event syslog pattern \"mgmt0 is UP\"\n        action 2.0 cli python bootflash:set_boot.py\n\n      hostname dist-sw01\n      vdc dist-sw01 id 1\n        limit-resource vlan minimum 16 maximum 4094\n        limit-resource vrf minimum 2 maximum 4096\n        limit-resource port-channel minimum 0 maximum 511\n        limit-resource u4route-mem minimum 96 maximum 96\n        limit-resource u6route-mem minimum 24 maximum 24\n        limit-resource m4route-mem minimum 58 maximum 58\n        limit-resource m6route-mem minimum 8 maximum 8\n\n      feature telnet\n      cfs eth distribute\n      feature ospf\n      feature interface-vlan\n      feature hsrp\n      feature lacp\n      feature vpc\n\n      no password strength-check\n      username admin password 5 $1$KuOSBsvW$Cy0TSD..gEBGBPjzpDgf51  role network-admin\n      username adminbackup password 5 !  role network-operator\n      username adminbackup passphrase  lifetime 99999 warntime 14 gracetime 3\n      username cisco password 5 $1$Nk7ZkwH0$fyiRmMMfIheqE3BqvcL0C1  role network-operator\n      username cisco role network-admin\n      username cisco passphrase  lifetime 99999 warntime 14 gracetime 3\n      username lab password 5 $1$buoy/oqy$.EXQz8rCn72ii8qtdldj00  role network-admin\n      username lab passphrase  lifetime 99999 warntime 14 gracetime 3\n      ip domain-lookup\n      snmp-server user lab network-admin auth md5 0x5ceb414591539ee35159fca86fdfa101 priv 0x5ceb414591539ee35159fca86fdfa101 localizedkey\n      snmp-server user admin network-admin auth md5 0x328945d53e05e8e7207f8c20b142f0b7 priv 0x328945d53e05e8e7207f8c20b142f0b7 localizedkey\n      snmp-server user cisco network-operator auth md5 0x55b3c64a53fb95518e75358ee75e82e9 priv 0x55b3c64a53fb95518e75358ee75e82e9 localizedkey\n      snmp-server user cisco network-admin\n      rmon event 1 log trap public description FATAL(1) owner PMON@FATAL\n      rmon event 2 log trap public description CRITICAL(2) owner PMON@CRITICAL\n      rmon event 3 log trap public description ERROR(3) owner PMON@ERROR\n      rmon event 4 log trap public description WARNING(4) owner PMON@WARNING\n      rmon event 5 log trap public description INFORMATION(5) owner PMON@INFO\n\n      vlan 1,101-105\n      vlan 101\n        name prod\n      vlan 102\n        name dev\n      vlan 103\n        name test\n      vlan 104\n        name security\n      vlan 105\n        name iot\n\n      vrf context management\n        ip route 0.0.0.0/0 10.10.20.254\n      hardware forwarding unicast trace\n      vpc domain 101\n        peer-switch\n        peer-keepalive destination 10.10.20.178 source 10.10.20.177\n        peer-gateway\n\n\n      interface Vlan1\n        no ip redirects\n        no ipv6 redirects\n\n      interface Vlan101\n        description prod svi\n        no shutdown\n        no ip redirects\n        ip address 172.16.101.2/24\n        no ipv6 redirects\n        ip router ospf 1 area 0.0.0.0\n        hsrp 10\n          ip 172.16.101.1\n\n      interface Vlan102\n        description dev svi\n        no shutdown\n        no ip redirects\n        ip address 172.16.102.2/24\n        no ipv6 redirects\n        ip router ospf 1 area 0.0.0.0\n        hsrp 10\n          ip 172.16.102.1\n\n      interface Vlan103\n        description test svi\n        no shutdown\n        no ip redirects\n        ip address 172.16.103.2/24\n        no ipv6 redirects\n        ip router ospf 1 area 0.0.0.0\n        hsrp 10\n          ip 172.16.103.1\n\n      interface Vlan104\n        description security svi\n        no shutdown\n        no ip redirects\n        ip address 172.16.104.2/24\n        no ipv6 redirects\n        ip router ospf 1 area 0.0.0.0\n        hsrp 10\n          ip 172.16.104.1\n\n      interface Vlan105\n        description iot svi\n        no shutdown\n        no ip redirects\n        ip address 172.16.105.2/24\n        no ipv6 redirects\n        ip router ospf 1 area 0.0.0.0\n        hsrp 10\n          ip 172.16.105.1\n\n      interface port-channel1\n        switchport mode trunk\n        spanning-tree port type network\n        vpc peer-link\n\n      interface Ethernet1/1\n        description VPC Peer Link\n        switchport mode trunk\n        channel-group 1 mode active\n\n      interface Ethernet1/2\n        description VPC Peer Link\n        switchport mode trunk\n        channel-group 1 mode active\n\n      interface Ethernet1/3\n        description L3 link to dist-rtr01\n        no switchport\n        ip address 172.16.252.1/30\n        no ip ospf passive-interface\n        ip router ospf 1 area 0.0.0.0\n        no shutdown\n\n      interface Ethernet1/4\n        description L3 link to dist-rtr02\n        no switchport\n        ip address 172.16.252.5/30\n        no ip ospf passive-interface\n        ip router ospf 1 area 0.0.0.0\n        no shutdown\n\n      interface Ethernet1/5\n        description to\n        shutdown\n\n      interface Ethernet1/6\n        description to\n        shutdown\n\n      interface Ethernet1/7\n        description to\n        shutdown\n\n      interface Ethernet1/8\n        description to\n        shutdown\n\n      interface Ethernet1/9\n        description to\n        shutdown\n\n      interface Ethernet1/10\n        description to\n        shutdown\n\n      interface Ethernet1/11\n        description Link to inside-host01\n        switchport access vlan 101\n        spanning-tree port type edge\n\n      interface mgmt0\n        description to port8.sandbox-backend\n        duplex full\n        vrf member management\n        ip address 10.10.20.177/24\n\n      interface loopback0\n        description to\n        shutdown\n      line console\n        exec-timeout 0\n        terminal width  511\n      line vty\n      router ospf 1\n        passive-interface default\n\n      no logging console\n      boot nxos bootflash:///nxos.9.2.3.bin\n    image_definition: nxosv9000-9-2-3\n    ram: 8192\n    cpus: 4\n    tags: []\n    interfaces:\n      - id: i0\n        label: Loopback0\n        type: loopback\n      - id: i1\n        slot: 0\n        label: mgmt0\n        type: physical\n      - id: i2\n        slot: 1\n        label: Ethernet1/1\n        type: physical\n      - id: i3\n        slot: 2\n        label: Ethernet1/2\n        type: physical\n      - id: i4\n        slot: 3\n        label: Ethernet1/3\n        type: physical\n      - id: i5\n        slot: 4\n        label: Ethernet1/4\n        type: physical\n      - id: i6\n        slot: 5\n        label: Ethernet1/5\n        type: physical\n      - id: i7\n        slot: 6\n        label: Ethernet1/6\n        type: physical\n      - id: i8\n        slot: 7\n        label: Ethernet1/7\n        type: physical\n      - id: i9\n        slot: 8\n        label: Ethernet1/8\n        type: physical\n      - id: i10\n        slot: 9\n        label: Ethernet1/9\n        type: physical\n      - id: i11\n        slot: 10\n        label: Ethernet1/10\n        type: physical\n      - id: i12\n        slot: 11\n        label: Ethernet1/11\n        type: physical\n  - id: n8\n    label: dist-sw02\n    node_definition: nxosv9000\n    x: -600\n    y: 200\n    configuration: |-\n      echo 'from cli import cli, clip' > set_boot.py\n      echo 'import json' >> set_boot.py\n      echo 'bootimage = json.loads(cli(\"show version | json\"))[\"kick_file_name\"]' >> set_boot.py\n      echo 'set_boot = cli(\"conf t ; boot nxos {}\".format(bootimage))' >> set_boot.py\n      echo 'save_config = cli(\"copy running-config startup-config\")' >> set_boot.py\n\n      event manager applet BOOTCONFIG\n        event syslog pattern \"mgmt0 is UP\"\n        action 2.0 cli python bootflash:set_boot.py\n\n      hostname dist-sw02\n      vdc dist-sw02 id 1\n        limit-resource vlan minimum 16 maximum 4094\n        limit-resource vrf minimum 2 maximum 4096\n        limit-resource port-channel minimum 0 maximum 511\n        limit-resource u4route-mem minimum 96 maximum 96\n        limit-resource u6route-mem minimum 24 maximum 24\n        limit-resource m4route-mem minimum 58 maximum 58\n        limit-resource m6route-mem minimum 8 maximum 8\n\n      feature telnet\n      cfs eth distribute\n      feature ospf\n      feature interface-vlan\n      feature hsrp\n      feature lacp\n      feature vpc\n\n      no password strength-check\n      username admin password 5 $1$KuOSBsvW$Cy0TSD..gEBGBPjzpDgf51  role network-admin\n      username adminbackup password 5 !  role network-operator\n      username adminbackup passphrase  lifetime 99999 warntime 14 gracetime 3\n      username cisco password 5 $1$Nk7ZkwH0$fyiRmMMfIheqE3BqvcL0C1  role network-operator\n      username cisco role network-admin\n      username cisco passphrase  lifetime 99999 warntime 14 gracetime 3\n      username lab password 5 $1$buoy/oqy$.EXQz8rCn72ii8qtdldj00  role network-admin\n      username lab passphrase  lifetime 99999 warntime 14 gracetime 3\n      ip domain-lookup\n      snmp-server user lab network-admin auth md5 0x5ceb414591539ee35159fca86fdfa101 priv 0x5ceb414591539ee35159fca86fdfa101 localizedkey\n      snmp-server user admin network-admin auth md5 0x328945d53e05e8e7207f8c20b142f0b7 priv 0x328945d53e05e8e7207f8c20b142f0b7 localizedkey\n      snmp-server user cisco network-operator auth md5 0x55b3c64a53fb95518e75358ee75e82e9 priv 0x55b3c64a53fb95518e75358ee75e82e9 localizedkey\n      snmp-server user cisco network-admin\n      rmon event 1 log trap public description FATAL(1) owner PMON@FATAL\n      rmon event 2 log trap public description CRITICAL(2) owner PMON@CRITICAL\n      rmon event 3 log trap public description ERROR(3) owner PMON@ERROR\n      rmon event 4 log trap public description WARNING(4) owner PMON@WARNING\n      rmon event 5 log trap public description INFORMATION(5) owner PMON@INFO\n\n      vlan 1,101-105\n      vlan 101\n        name prod\n      vlan 102\n        name dev\n      vlan 103\n        name test\n      vlan 104\n        name security\n      vlan 105\n        name iot\n\n      vrf context management\n        ip route 0.0.0.0/0 10.10.20.254\n      hardware forwarding unicast trace\n      vpc domain 101\n        peer-switch\n        peer-keepalive destination 10.10.20.177 source 10.10.20.178\n        peer-gateway\n\n\n      interface Vlan1\n        no ip redirects\n        no ipv6 redirects\n\n      interface Vlan101\n        description prod svi\n        no shutdown\n        no ip redirects\n        ip address 172.16.101.3/24\n        no ipv6 redirects\n        ip router ospf 1 area 0.0.0.0\n        hsrp 10\n          ip 172.16.101.1\n\n      interface Vlan102\n        description dev svi\n        no shutdown\n        no ip redirects\n        ip address 172.16.102.3/24\n        no ipv6 redirects\n        ip router ospf 1 area 0.0.0.0\n        hsrp 10\n          ip 172.16.102.1\n\n      interface Vlan103\n        description test svi\n        no shutdown\n        no ip redirects\n        ip address 172.16.103.3/24\n        no ipv6 redirects\n        ip router ospf 1 area 0.0.0.0\n        hsrp 10\n          ip 172.16.103.1\n\n      interface Vlan104\n        description security svi\n        no shutdown\n        no ip redirects\n        ip address 172.16.104.3/24\n        no ipv6 redirects\n        ip router ospf 1 area 0.0.0.0\n        hsrp 10\n          ip 172.16.104.1\n\n      interface Vlan105\n        description iot svi\n        no shutdown\n        no ip redirects\n        ip address 172.16.105.3/24\n        no ipv6 redirects\n        ip router ospf 1 area 0.0.0.0\n        hsrp 10\n          ip 172.16.105.1\n\n      interface port-channel1\n        switchport mode trunk\n        spanning-tree port type network\n        vpc peer-link\n\n      interface Ethernet1/1\n        description VPC Peer Link\n        switchport mode trunk\n        channel-group 1 mode active\n\n      interface Ethernet1/2\n        description VPC Peer Link\n        switchport mode trunk\n        channel-group 1 mode active\n\n      interface Ethernet1/3\n        description L3 link to dist-rtr01\n        no switchport\n        ip address 172.16.252.9/30\n        no ip ospf passive-interface\n        ip router ospf 1 area 0.0.0.0\n        no shutdown\n\n      interface Ethernet1/4\n        description L3 link to dist-rtr02\n        no switchport\n        ip address 172.16.252.13/30\n        no ip ospf passive-interface\n        ip router ospf 1 area 0.0.0.0\n        no shutdown\n\n      interface Ethernet1/5\n        description to\n        shutdown\n\n      interface Ethernet1/6\n        description to\n        shutdown\n\n      interface Ethernet1/7\n        description to\n        shutdown\n\n      interface Ethernet1/8\n        description to\n        shutdown\n\n      interface Ethernet1/9\n        description to\n        shutdown\n\n      interface Ethernet1/10\n        description to\n        shutdown\n\n      interface Ethernet1/11\n        description Link to inside-host02\n        switchport access vlan 102\n        spanning-tree port type edge\n\n      interface mgmt0\n        description to port9.sandbox-backend\n        duplex full\n        vrf member management\n        ip address 10.10.20.178/24\n\n      interface loopback0\n        description to\n        shutdown\n      line console\n        exec-timeout 0\n        terminal width  511\n      line vty\n      router ospf 1\n        passive-interface default\n\n      no logging console\n      boot nxos bootflash:///nxos.9.2.3.bin\n    image_definition: nxosv9000-9-2-3\n    ram: 8192\n    cpus: 4\n    tags: []\n    interfaces:\n      - id: i0\n        label: Loopback0\n        type: loopback\n      - id: i1\n        slot: 0\n        label: mgmt0\n        type: physical\n      - id: i2\n        slot: 1\n        label: Ethernet1/1\n        type: physical\n      - id: i3\n        slot: 2\n        label: Ethernet1/2\n        type: physical\n      - id: i4\n        slot: 3\n        label: Ethernet1/3\n        type: physical\n      - id: i5\n        slot: 4\n        label: Ethernet1/4\n        type: physical\n      - id: i6\n        slot: 5\n        label: Ethernet1/5\n        type: physical\n      - id: i7\n        slot: 6\n        label: Ethernet1/6\n        type: physical\n      - id: i8\n        slot: 7\n        label: Ethernet1/7\n        type: physical\n      - id: i9\n        slot: 8\n        label: Ethernet1/8\n        type: physical\n      - id: i10\n        slot: 9\n        label: Ethernet1/9\n        type: physical\n      - id: i11\n        slot: 10\n        label: Ethernet1/10\n        type: physical\n      - id: i12\n        slot: 11\n        label: Ethernet1/11\n        type: physical\n  - id: n9\n    label: inside-host01\n    node_definition: ubuntu\n    x: -700\n    y: 300\n    configuration: |-\n      #cloud-config\n        bootcmd:\n        - ln -s -t /etc/rc.d /etc/rc.local\n        hostname: inside-host01\n        manage_etc_hosts: true\n        runcmd:\n        - systemctl start rc-local\n        - sed -i '/^\\s*PasswordAuthentication\\s\\+no/d' /etc/ssh/sshd_config\n        - echo \"PasswordAuthentication yes\" >> /etc/ssh/sshd_config\n        - echo \"UseDNS no\" >> /etc/ssh/sshd_config\n        - service ssh restart\n        - service sshd restart\n        users:\n        - default\n        - gecos: User configured by VIRL Configuration Engine 0.23.12\n          lock-passwd: false\n          name: cisco\n          plain-text-passwd: cisco\n          shell: /bin/bash\n          ssh-authorized-keys:\n          - VIRL-USER-SSH-PUBLIC-KEY\n          sudo: ALL=(ALL) ALL\n        write_files:\n        - path: /etc/rc.local\n          owner: root:root\n          permissions: '0755'\n          content: |-\n            #!/bin/sh\n            ifconfig enp0s9 up 10.10.20.179 netmask 255.255.255.0\n            route add -net 0.0.0.0/0 gw 10.10.20.254 dev enp0s9\n            ifconfig enp0s2 up 172.16.101.11 netmask 255.255.255.0\n            route add -net 172.16.0.0/16 gw 172.16.101.1 dev enp0s2\n            route add -net 172.31.0.0/16 gw 172.16.101.1 dev enp0s2\n            exit 0\n    image_definition: ubuntu-18-04\n    tags: []\n    interfaces:\n      - id: i0\n        slot: 0\n        label: enp0s2\n        type: physical\n      - id: i1\n        slot: 1\n        label: enp0s3\n        type: physical\n      - id: i2\n        slot: 2\n        label: enp0s4\n        type: physical\n      - id: i3\n        slot: 3\n        label: enp0s5\n        type: physical\n      - id: i4\n        slot: 4\n        label: enp0s6\n        type: physical\n      - id: i5\n        slot: 5\n        label: enp0s7\n        type: physical\n      - id: i6\n        slot: 6\n        label: enp0s8\n        type: physical\n      - id: i7\n        slot: 7\n        label: enp0s9\n        type: physical\n  - id: n12\n    label: sandbox-backend\n    node_definition: unmanaged_switch\n    x: -1000\n    y: 50\n    configuration: ''\n    tags: []\n    interfaces:\n      - id: i0\n        slot: 0\n        label: port0\n        type: physical\n      - id: i1\n        slot: 1\n        label: port1\n        type: physical\n      - id: i2\n        slot: 2\n        label: port2\n        type: physical\n      - id: i3\n        slot: 3\n        label: port3\n        type: physical\n      - id: i4\n        slot: 4\n        label: port4\n        type: physical\n      - id: i5\n        slot: 5\n        label: port5\n        type: physical\n      - id: i6\n        slot: 6\n        label: port6\n        type: physical\n      - id: i7\n        slot: 7\n        label: port7\n        type: physical\n      - id: i8\n        slot: 8\n        label: port8\n        type: physical\n      - id: i9\n        slot: 9\n        label: port9\n        type: physical\n      - id: i10\n        slot: 10\n        label: port10\n        type: physical\n      - id: i11\n        slot: 11\n        label: port11\n        type: physical\n      - id: i12\n        slot: 12\n        label: port12\n        type: physical\n  - id: n13\n    label: bridge-to-sandbox\n    node_definition: external_connector\n    x: -1000\n    y: -50\n    configuration: bridge0\n    tags: []\n    interfaces:\n      - id: i0\n        slot: 0\n        label: port\n        type: physical\n  - id: n10\n    label: inside-host02\n    node_definition: desktop\n    x: -600\n    y: 300\n    configuration: |-\n      hostname inside-host02\n      # like this:\n      echo \"127.0.0.1   inside-host02\" >>/etc/hosts\n      echo \"::1         inside-host02\" >> /etc/hosts\n      ifconfig eth1 up 10.10.20.180 netmask 255.255.255.0\n      route add -net 0.0.0.0/0 gw 10.10.20.254 dev eth1\n      ifconfig eth0 up 172.16.102.11 netmask 255.255.255.0\n      route add -net 172.16.0.0/16 gw 172.16.102.1 dev eth0\n      route add -net 172.31.0.0/16 gw 172.16.102.1 dev eth0\n      service lightdm restart\n    image_definition: desktop\n    tags: []\n    interfaces:\n      - id: i0\n        slot: 0\n        label: eth0\n        type: physical\n      - id: i1\n        slot: 1\n        label: eth1\n        type: physical\nlinks:\n  - id: l5\n    i1: i2\n    n1: n7\n    i2: i2\n    n2: n8\n  - id: l6\n    i1: i3\n    n1: n7\n    i2: i3\n    n2: n8\n  - id: l13\n    i1: i4\n    n1: n5\n    i2: i4\n    n2: n7\n  - id: l14\n    i1: i5\n    n1: n5\n    i2: i4\n    n2: n8\n  - id: l15\n    i1: i4\n    n1: n6\n    i2: i5\n    n2: n7\n  - id: l16\n    i1: i5\n    n1: n6\n    i2: i5\n    n2: n8\n  - id: l17\n    i1: i12\n    n1: n7\n    i2: i0\n    n2: n9\n  - id: l19\n    i1: i0\n    n1: n13\n    i2: i0\n    n2: n12\n  - id: l4\n    i1: i1\n    n1: n5\n    i2: i6\n    n2: n12\n  - id: l25\n    i1: i1\n    n1: n6\n    i2: i7\n    n2: n12\n  - id: l26\n    i1: i6\n    n1: n5\n    i2: i6\n    n2: n6\n  - id: l27\n    i1: i1\n    n1: n7\n    i2: i8\n    n2: n12\n  - id: l28\n    i1: i1\n    n1: n8\n    i2: i9\n    n2: n12\n  - id: l30\n    i1: i7\n    n1: n9\n    i2: i11\n    n2: n12\n  - id: l18\n    i1: i0\n    n1: n10\n    i2: i12\n    n2: n8\n  - id: l31\n    i1: i1\n    n1: n10\n    i2: i12\n    n2: n12\n"
						}
					]
				},
				{
					"name": "Get lab nodes",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"nodes"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:26:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "[\n    \"n5\",\n    \"n6\",\n    \"n7\",\n    \"n8\",\n    \"n9\",\n    \"n12\",\n    \"n13\",\n    \"n10\"\n]"
						}
					]
				},
				{
					"name": "Get specific node",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n2",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"nodes",
								"n2"
							]
						}
					},
					"response": [
						{
							"name": "Success: sandbox backend",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n12",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n12"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:29:54 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"n12\",\n    \"data\": {\n        \"label\": \"sandbox-backend\",\n        \"node_definition\": \"unmanaged_switch\",\n        \"image_definition\": null,\n        \"x\": -1000,\n        \"y\": 50,\n        \"configuration\": \"\",\n        \"ram\": null,\n        \"cpus\": null,\n        \"data_volume\": null,\n        \"boot_disk_size\": null,\n        \"tags\": []\n    }\n}"
						},
						{
							"name": "Success: csr1000v",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n5",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:28:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"n5\",\n    \"data\": {\n        \"label\": \"dist-rtr01\",\n        \"node_definition\": \"csr1000v\",\n        \"image_definition\": \"csr1000v-161101b\",\n        \"x\": -700,\n        \"y\": 100,\n        \"configuration\": \"service timestamps debug datetime msec\\nservice timestamps log datetime msec\\n! Call-home is enabled by Smart-Licensing.\\nservice call-home\\nplatform qfp utilization monitor load 80\\nno platform punt-keepalive disable-kernel-core\\nplatform console serial\\n!\\nhostname dist-rtr01\\n!\\nboot-start-marker\\nboot-end-marker\\n!\\n!\\nvrf definition Mgmt-intf\\n!\\naddress-family ipv4\\nexit-address-family\\n!\\naddress-family ipv6\\nexit-address-family\\n!\\nno logging console\\nenable password cisco\\n!\\nno aaa new-model\\ncall-home\\n! If contact email address in call-home is configured as sch-smart-licensing@cisco.com\\n! the email address configured in Cisco Smart License Portal will be used as contact email address to send SCH notifications.\\ncontact-email-addr sch-smart-licensing@cisco.com\\nprofile \\\"CiscoTAC-1\\\"\\n  active\\n  destination transport-method http\\n  no destination transport-method email\\n!\\nno ip domain lookup\\nip domain name virl.info\\n!\\nlogin on-success log\\n!\\nsubscriber templating\\n!\\n!\\nmultilink bundle-name authenticated\\n!\\ncrypto pki trustpoint SLA-TrustPoint\\nenrollment pkcs12\\nrevocation-check crl\\n!\\n!\\ncrypto pki certificate chain SLA-TrustPoint\\ncertificate ca 01\\n  30820321 30820209 A0030201 02020101 300D0609 2A864886 F70D0101 0B050030\\n  32310E30 0C060355 040A1305 43697363 6F312030 1E060355 04031317 43697363\\n  6F204C69 63656E73 696E6720 526F6F74 20434130 1E170D31 33303533 30313934\\n  3834375A 170D3338 30353330 31393438 34375A30 32310E30 0C060355 040A1305\\n  43697363 6F312030 1E060355 04031317 43697363 6F204C69 63656E73 696E6720\\n  526F6F74 20434130 82012230 0D06092A 864886F7 0D010101 05000382 010F0030\\n  82010A02 82010100 A6BCBD96 131E05F7 145EA72C 2CD686E6 17222EA1 F1EFF64D\\n  CBB4C798 212AA147 C655D8D7 9471380D 8711441E 1AAF071A 9CAE6388 8A38E520\\n  1C394D78 462EF239 C659F715 B98C0A59 5BBB5CBD 0CFEBEA3 700A8BF7 D8F256EE\\n  4AA4E80D DB6FD1C9 60B1FD18 FFC69C96 6FA68957 A2617DE7 104FDC5F EA2956AC\\n  7390A3EB 2B5436AD C847A2C5 DAB553EB 69A9A535 58E9F3E3 C0BD23CF 58BD7188\\n  68E69491 20F320E7 948E71D7 AE3BCC84 F10684C7 4BC8E00F 539BA42B 42C68BB7\\n  C7479096 B4CB2D62 EA2F505D C7B062A4 6811D95B E8250FC4 5D5D5FB8 8F27D191\\n  C55F0D76 61F9A4CD 3D992327 A8BB03BD 4E6D7069 7CBADF8B DF5F4368 95135E44\\n  DFC7C6CF 04DD7FD1 02030100 01A34230 40300E06 03551D0F 0101FF04 04030201\\n  06300F06 03551D13 0101FF04 05300301 01FF301D 0603551D 0E041604 1449DC85\\n  4B3D31E5 1B3E6A17 606AF333 3D3B4C73 E8300D06 092A8648 86F70D01 010B0500\\n  03820101 00507F24 D3932A66 86025D9F E838AE5C 6D4DF6B0 49631C78 240DA905\\n  604EDCDE FF4FED2B 77FC460E CD636FDB DD44681E 3A5673AB 9093D3B1 6C9E3D8B\\n  D98987BF E40CBD9E 1AECA0C2 2189BB5C 8FA85686 CD98B646 5575B146 8DFC66A8\\n  467A3DF4 4D565700 6ADF0F0D CF835015 3C04FF7C 21E878AC 11BA9CD2 55A9232C\\n  7CA7B7E6 C1AF74F6 152E99B7 B1FCF9BB E973DE7F 5BDDEB86 C71E3B49 1765308B\\n  5FB0DA06 B92AFE7F 494E8A9E 07B85737 F3A58BE1 1A48A229 C37C1E69 39F08678\\n  80DDCD16 D6BACECA EEBC7CF9 8428787B 35202CDC 60E4616A B623CDBD 230E3AFB\\n  418616A9 4093E049 4D10AB75 27E86F73 932E35B5 8862FDAE 0275156F 719BB2F0\\n  D697DF7F 28\\n    quit\\n!\\nlicense udi pid CSR1000V sn 9QRVOWWZSOE\\ndiagnostic bootup level minimal\\n!\\nspanning-tree extend system-id\\nmemory free low-watermark processor 80526\\n!\\nrestconf\\n!\\nusername cisco privilege 15 secret 9 $9$iVecEqVTUJzHUk$EO2BfGoo4I8.wW.QanPw2rSxwy9NJt6kc3xFNEFLYSA\\n!\\nredundancy\\n!\\n!\\ninterface Loopback0\\ndescription to\\nno ip address\\nshutdown\\n!\\ninterface GigabitEthernet1\\ndescription to port6.sandbox-backend\\nvrf forwarding Mgmt-intf\\nip address 10.10.20.175 255.255.255.0\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\ninterface GigabitEthernet2\\ndescription L3 Link to core-rtr01\\nip address 172.16.252.21 255.255.255.252\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\ninterface GigabitEthernet3\\ndescription L3 Link to core-rtr02\\nip address 172.16.252.25 255.255.255.252\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\ninterface GigabitEthernet4\\ndescription L3 Link to dist-sw01\\nip address 172.16.252.2 255.255.255.252\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\ninterface GigabitEthernet5\\ndescription L3 Link to dist-sw02\\nip address 172.16.252.10 255.255.255.252\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\ninterface GigabitEthernet6\\ndescription L3 Link to dist-rtr02\\nip address 172.16.252.17 255.255.255.252\\nnegotiation auto\\nno mop enabled\\nno mop sysid\\nno shutdown\\n!\\nrouter ospf 1\\nno log-adjacency-changes\\nnetwork 172.16.252.0 0.0.3.255 area 0\\n!\\nip forward-protocol nd\\nno ip http server\\nip http secure-server\\nip route vrf Mgmt-intf 0.0.0.0 0.0.0.0 10.10.20.254\\n!\\nip ssh server algorithm authentication password\\n!\\ncontrol-plane\\n!\\n!\\nline con 0\\nexec-timeout 0 0\\npassword cisco\\nstopbits 1\\nline vty 0 4\\nexec-timeout 720 0\\npassword cisco\\nlogin local\\ntransport input telnet ssh\\n!\\n!\\nend\",\n        \"ram\": null,\n        \"cpus\": null,\n        \"data_volume\": null,\n        \"boot_disk_size\": null,\n        \"tags\": []\n    }\n}"
						},
						{
							"name": "Success: unbuntu",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n9",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:29:39 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"n9\",\n    \"data\": {\n        \"label\": \"inside-host01\",\n        \"node_definition\": \"ubuntu\",\n        \"image_definition\": \"ubuntu-18-04\",\n        \"x\": -700,\n        \"y\": 300,\n        \"configuration\": \"#cloud-config\\n  bootcmd:\\n  - ln -s -t /etc/rc.d /etc/rc.local\\n  hostname: inside-host01\\n  manage_etc_hosts: true\\n  runcmd:\\n  - systemctl start rc-local\\n  - sed -i '/^\\\\s*PasswordAuthentication\\\\s\\\\+no/d' /etc/ssh/sshd_config\\n  - echo \\\"PasswordAuthentication yes\\\" >> /etc/ssh/sshd_config\\n  - echo \\\"UseDNS no\\\" >> /etc/ssh/sshd_config\\n  - service ssh restart\\n  - service sshd restart\\n  users:\\n  - default\\n  - gecos: User configured by VIRL Configuration Engine 0.23.12\\n    lock-passwd: false\\n    name: cisco\\n    plain-text-passwd: cisco\\n    shell: /bin/bash\\n    ssh-authorized-keys:\\n    - VIRL-USER-SSH-PUBLIC-KEY\\n    sudo: ALL=(ALL) ALL\\n  write_files:\\n  - path: /etc/rc.local\\n    owner: root:root\\n    permissions: '0755'\\n    content: |-\\n      #!/bin/sh\\n      ifconfig enp0s9 up 10.10.20.179 netmask 255.255.255.0\\n      route add -net 0.0.0.0/0 gw 10.10.20.254 dev enp0s9\\n      ifconfig enp0s2 up 172.16.101.11 netmask 255.255.255.0\\n      route add -net 172.16.0.0/16 gw 172.16.101.1 dev enp0s2\\n      route add -net 172.31.0.0/16 gw 172.16.101.1 dev enp0s2\\n      exit 0\",\n        \"ram\": null,\n        \"cpus\": null,\n        \"data_volume\": null,\n        \"boot_disk_size\": null,\n        \"tags\": []\n    }\n}"
						},
						{
							"name": "Success: nxosv9000",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n7",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n7"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:29:18 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"n7\",\n    \"data\": {\n        \"label\": \"dist-sw01\",\n        \"node_definition\": \"nxosv9000\",\n        \"image_definition\": \"nxosv9000-9-2-3\",\n        \"x\": -700,\n        \"y\": 200,\n        \"configuration\": \"echo 'from cli import cli, clip' > set_boot.py\\necho 'import json' >> set_boot.py\\necho 'bootimage = json.loads(cli(\\\"show version | json\\\"))[\\\"kick_file_name\\\"]' >> set_boot.py\\necho 'set_boot = cli(\\\"conf t ; boot nxos {}\\\".format(bootimage))' >> set_boot.py\\necho 'save_config = cli(\\\"copy running-config startup-config\\\")' >> set_boot.py\\n\\nevent manager applet BOOTCONFIG\\n  event syslog pattern \\\"mgmt0 is UP\\\"\\n  action 2.0 cli python bootflash:set_boot.py\\n\\nhostname dist-sw01\\nvdc dist-sw01 id 1\\n  limit-resource vlan minimum 16 maximum 4094\\n  limit-resource vrf minimum 2 maximum 4096\\n  limit-resource port-channel minimum 0 maximum 511\\n  limit-resource u4route-mem minimum 96 maximum 96\\n  limit-resource u6route-mem minimum 24 maximum 24\\n  limit-resource m4route-mem minimum 58 maximum 58\\n  limit-resource m6route-mem minimum 8 maximum 8\\n\\nfeature telnet\\ncfs eth distribute\\nfeature ospf\\nfeature interface-vlan\\nfeature hsrp\\nfeature lacp\\nfeature vpc\\n\\nno password strength-check\\nusername admin password 5 $1$KuOSBsvW$Cy0TSD..gEBGBPjzpDgf51  role network-admin\\nusername adminbackup password 5 !  role network-operator\\nusername adminbackup passphrase  lifetime 99999 warntime 14 gracetime 3\\nusername cisco password 5 $1$Nk7ZkwH0$fyiRmMMfIheqE3BqvcL0C1  role network-operator\\nusername cisco role network-admin\\nusername cisco passphrase  lifetime 99999 warntime 14 gracetime 3\\nusername lab password 5 $1$buoy/oqy$.EXQz8rCn72ii8qtdldj00  role network-admin\\nusername lab passphrase  lifetime 99999 warntime 14 gracetime 3\\nip domain-lookup\\nsnmp-server user lab network-admin auth md5 0x5ceb414591539ee35159fca86fdfa101 priv 0x5ceb414591539ee35159fca86fdfa101 localizedkey\\nsnmp-server user admin network-admin auth md5 0x328945d53e05e8e7207f8c20b142f0b7 priv 0x328945d53e05e8e7207f8c20b142f0b7 localizedkey\\nsnmp-server user cisco network-operator auth md5 0x55b3c64a53fb95518e75358ee75e82e9 priv 0x55b3c64a53fb95518e75358ee75e82e9 localizedkey\\nsnmp-server user cisco network-admin\\nrmon event 1 log trap public description FATAL(1) owner PMON@FATAL\\nrmon event 2 log trap public description CRITICAL(2) owner PMON@CRITICAL\\nrmon event 3 log trap public description ERROR(3) owner PMON@ERROR\\nrmon event 4 log trap public description WARNING(4) owner PMON@WARNING\\nrmon event 5 log trap public description INFORMATION(5) owner PMON@INFO\\n\\nvlan 1,101-105\\nvlan 101\\n  name prod\\nvlan 102\\n  name dev\\nvlan 103\\n  name test\\nvlan 104\\n  name security\\nvlan 105\\n  name iot\\n\\nvrf context management\\n  ip route 0.0.0.0/0 10.10.20.254\\nhardware forwarding unicast trace\\nvpc domain 101\\n  peer-switch\\n  peer-keepalive destination 10.10.20.178 source 10.10.20.177\\n  peer-gateway\\n\\n\\ninterface Vlan1\\n  no ip redirects\\n  no ipv6 redirects\\n\\ninterface Vlan101\\n  description prod svi\\n  no shutdown\\n  no ip redirects\\n  ip address 172.16.101.2/24\\n  no ipv6 redirects\\n  ip router ospf 1 area 0.0.0.0\\n  hsrp 10\\n    ip 172.16.101.1\\n\\ninterface Vlan102\\n  description dev svi\\n  no shutdown\\n  no ip redirects\\n  ip address 172.16.102.2/24\\n  no ipv6 redirects\\n  ip router ospf 1 area 0.0.0.0\\n  hsrp 10\\n    ip 172.16.102.1\\n\\ninterface Vlan103\\n  description test svi\\n  no shutdown\\n  no ip redirects\\n  ip address 172.16.103.2/24\\n  no ipv6 redirects\\n  ip router ospf 1 area 0.0.0.0\\n  hsrp 10\\n    ip 172.16.103.1\\n\\ninterface Vlan104\\n  description security svi\\n  no shutdown\\n  no ip redirects\\n  ip address 172.16.104.2/24\\n  no ipv6 redirects\\n  ip router ospf 1 area 0.0.0.0\\n  hsrp 10\\n    ip 172.16.104.1\\n\\ninterface Vlan105\\n  description iot svi\\n  no shutdown\\n  no ip redirects\\n  ip address 172.16.105.2/24\\n  no ipv6 redirects\\n  ip router ospf 1 area 0.0.0.0\\n  hsrp 10\\n    ip 172.16.105.1\\n\\ninterface port-channel1\\n  switchport mode trunk\\n  spanning-tree port type network\\n  vpc peer-link\\n\\ninterface Ethernet1/1\\n  description VPC Peer Link\\n  switchport mode trunk\\n  channel-group 1 mode active\\n\\ninterface Ethernet1/2\\n  description VPC Peer Link\\n  switchport mode trunk\\n  channel-group 1 mode active\\n\\ninterface Ethernet1/3\\n  description L3 link to dist-rtr01\\n  no switchport\\n  ip address 172.16.252.1/30\\n  no ip ospf passive-interface\\n  ip router ospf 1 area 0.0.0.0\\n  no shutdown\\n\\ninterface Ethernet1/4\\n  description L3 link to dist-rtr02\\n  no switchport\\n  ip address 172.16.252.5/30\\n  no ip ospf passive-interface\\n  ip router ospf 1 area 0.0.0.0\\n  no shutdown\\n\\ninterface Ethernet1/5\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/6\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/7\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/8\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/9\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/10\\n  description to\\n  shutdown\\n\\ninterface Ethernet1/11\\n  description Link to inside-host01\\n  switchport access vlan 101\\n  spanning-tree port type edge\\n\\ninterface mgmt0\\n  description to port8.sandbox-backend\\n  duplex full\\n  vrf member management\\n  ip address 10.10.20.177/24\\n\\ninterface loopback0\\n  description to\\n  shutdown\\nline console\\n  exec-timeout 0\\n  terminal width  511\\nline vty\\nrouter ospf 1\\n  passive-interface default\\n\\nno logging console\\nboot nxos bootflash:///nxos.9.2.3.bin\",\n        \"ram\": 8192,\n        \"cpus\": 4,\n        \"data_volume\": null,\n        \"boot_disk_size\": null,\n        \"tags\": []\n    }\n}"
						},
						{
							"name": "Failure: not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n2",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n2"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:30:41 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"description\": \"Node not found: n2.\",\n    \"code\": 404\n}"
						}
					]
				},
				{
					"name": "Get specific link",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/links/l5",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"links",
								"l5"
							]
						}
					},
					"response": [
						{
							"name": "Success: l5",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/links/l5",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"links",
										"l5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:49:09 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"l5\",\n    \"interface_a\": \"16\",\n    \"interface_b\": \"29\",\n    \"data\": {}\n}"
						},
						{
							"name": "Failure: not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/links/l99",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"links",
										"l99"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:49:18 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"description\": \"Link not found: l99.\",\n    \"code\": 404\n}"
						}
					]
				},
				{
					"name": "Get node interfaces",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n5/interfaces",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"nodes",
								"n5",
								"interfaces"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n5/interfaces",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n5",
										"interfaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:41:24 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "[\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\"\n]"
						}
					]
				},
				{
					"name": "Get specific node interface",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/interfaces/29",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"interfaces",
								"29"
							]
						}
					},
					"response": [
						{
							"name": "Success: 29",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/interfaces/29",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"interfaces",
										"29"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:50:25 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"29\",\n    \"node\": \"n8\",\n    \"data\": {}\n}"
						},
						{
							"name": "Failure: not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/interfaces/99",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"interfaces",
										"99"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:43:36 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"description\": \"Interface not found: 99.\",\n    \"code\": 404\n}"
						},
						{
							"name": "Success: 16",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/interfaces/16",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"interfaces",
										"16"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:50:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"16\",\n    \"node\": \"n7\",\n    \"data\": {}\n}"
						}
					]
				},
				{
					"name": "Get node console keys",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n5/keys/console",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"nodes",
								"n5",
								"keys",
								"console"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n5/keys/console",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n5",
										"keys",
										"console"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:38:25 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "\"254ce211-02c1-4846-a840-8ecb8fdc2fbf\""
						}
					]
				},
				{
					"name": "Get node layer-3 addresses",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n5/layer3_addresses",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"nodes",
								"n5",
								"layer3_addresses"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n5/layer3_addresses",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n5",
										"layer3_addresses"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 12:39:07 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"dist-rtr01\",\n    \"interfaces\": {\n        \"52:54:00:1c:e4:86\": {\n            \"id\": \"1\",\n            \"ip4\": [],\n            \"ip6\": [],\n            \"label\": \"GigabitEthernet1\"\n        },\n        \"52:54:00:0e:6b:88\": {\n            \"id\": \"2\",\n            \"ip4\": [],\n            \"ip6\": [],\n            \"label\": \"GigabitEthernet2\"\n        },\n        \"52:54:00:0e:e5:6f\": {\n            \"id\": \"3\",\n            \"ip4\": [],\n            \"ip6\": [],\n            \"label\": \"GigabitEthernet3\"\n        },\n        \"52:54:00:03:bd:33\": {\n            \"id\": \"4\",\n            \"ip4\": [],\n            \"ip6\": [],\n            \"label\": \"GigabitEthernet4\"\n        },\n        \"52:54:00:19:f2:06\": {\n            \"id\": \"5\",\n            \"ip4\": [],\n            \"ip6\": [],\n            \"label\": \"GigabitEthernet5\"\n        },\n        \"52:54:00:0a:b6:85\": {\n            \"id\": \"6\",\n            \"ip4\": [],\n            \"ip6\": [],\n            \"label\": \"GigabitEthernet6\"\n        }\n    }\n}"
						}
					]
				}
			],
			"description": "Reda-only requests to explore a topology that already exists (DevNet sandbox, etc.)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Build New Topology",
			"item": [
				{
					"name": "Create new lab",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs?title=postman",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs"
							],
							"query": [
								{
									"key": "title",
									"value": "postman",
									"description": "optional"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs?title=postman",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs"
									],
									"query": [
										{
											"key": "title",
											"value": "postman"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:01:53 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"state\": \"DEFINED_ON_CORE\",\n    \"created\": \"2020-12-30 13:01:53\",\n    \"lab_title\": \"postman\",\n    \"lab_description\": \"\",\n    \"node_count\": 0,\n    \"link_count\": 0,\n    \"id\": \"1ddb5d\"\n}"
						}
					]
				},
				{
					"name": "Create R1 node",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"x\": 0,\r\n    \"y\": 0,\r\n    \"label\": \"R1\",\r\n    \"node_definition\": \"iosv\"\r\n}"
						},
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes?populate_interfaces=true",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"nodes"
							],
							"query": [
								{
									"key": "populate_interfaces",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"x\": 0,\r\n    \"y\": 0,\r\n    \"label\": \"R1\",\r\n    \"node_definition\": \"iosv\"\r\n}"
								},
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes?populate_interfaces=true",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes"
									],
									"query": [
										{
											"key": "populate_interfaces",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:07:38 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "16"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"n0\"\n}"
						}
					]
				},
				{
					"name": "Create R2 node",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"x\": 100,\r\n    \"y\": 0,\r\n    \"label\": \"R2\",\r\n    \"node_definition\": \"iosv\"\r\n}"
						},
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes?populate_interfaces=true",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"nodes"
							],
							"query": [
								{
									"key": "populate_interfaces",
									"value": "true"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"x\": 100,\r\n    \"y\": 0,\r\n    \"label\": \"R2\",\r\n    \"node_definition\": \"iosv\"\r\n}"
								},
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes?populate_interfaces=true",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes"
									],
									"query": [
										{
											"key": "populate_interfaces",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:08:18 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "16"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"n1\"\n}"
						},
						{
							"name": "Failure: already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"x\": 100,\r\n    \"y\": 0,\r\n    \"label\": \"R2\",\r\n    \"node_definition\": \"iosv\"\r\n}"
								},
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes?populate_interfaces=true",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes"
									],
									"query": [
										{
											"key": "populate_interfaces",
											"value": "true"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:08:29 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"description\": \"Label in use in lab: R2.\",\n    \"code\": 403\n}"
						}
					]
				},
				{
					"name": "Get R1 interfaces",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n0/interfaces",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"nodes",
								"n0",
								"interfaces"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n0/interfaces",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n0",
										"interfaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:09:41 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "[\n    \"i0\",\n    \"i1\",\n    \"i2\",\n    \"i3\",\n    \"i4\"\n]"
						}
					]
				},
				{
					"name": "Get R2 interfaces",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n1/interfaces",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"nodes",
								"n1",
								"interfaces"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n1/interfaces",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n1",
										"interfaces"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:10:01 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "[\n    \"i5\",\n    \"i6\",\n    \"i7\",\n    \"i8\",\n    \"i9\"\n]"
						}
					]
				},
				{
					"name": "Create R1-R2 link",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"src_int\": \"i1\",\r\n    \"dst_int\": \"i6\"\r\n}"
						},
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/links",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"links"
							]
						}
					},
					"response": [
						{
							"name": "Failure: interfaces in use",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"src_int\": \"i1\",\r\n    \"dst_int\": \"i6\"\r\n}"
								},
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/links",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"links"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:14:29 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "147"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "{\n    \"description\": \"The API at /api/v0/labs/1ddb5d/links encountered an unexpected error.  Please report this problem to support.\",\n    \"code\": 500\n}"
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"src_int\": \"i1\",\r\n    \"dst_int\": \"i6\"\r\n}"
								},
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/links",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"links"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:14:16 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "16"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"l0\"\n}"
						}
					]
				},
				{
					"name": "Update R1 bootstrap config",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "hostname R1\r\ninterface GigabitEthernet0/0\r\n ip address 192.0.2.1 255.255.255.0\r\n ip ospf 1 area 0\r\n no shutdown"
						},
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n0/config",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"nodes",
								"n0",
								"config"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "hostname R1\r\ninterface GigabitEthernet0/0\r\n ip address 192.0.2.1 255.255.255.0\r\n ip ospf 1 area 0\r\n no shutdown"
								},
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n0/config",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n0",
										"config"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:20:44 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "4"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "\"n0\""
						}
					]
				},
				{
					"name": "Update R2 bootstrap config",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "hostname R2\r\ninterface GigabitEthernet0/0\r\n ip address 192.0.2.2 255.255.255.0\r\n ip ospf 1 area 0\r\n no shutdown"
						},
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n1/config",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"nodes",
								"n1",
								"config"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "text/plain"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "hostname R2\r\ninterface GigabitEthernet0/0\r\n ip address 192.0.2.2 255.255.255.0\r\n ip ospf 1 area 0\r\n no shutdown"
								},
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n1/config",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n1",
										"config"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:21:07 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "4"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "\"n1\""
						}
					]
				},
				{
					"name": "Review new link",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/links/l0",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"links",
								"l0"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/links/l0",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"links",
										"l0"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:15:49 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"l0\",\n    \"interface_a\": \"i1\",\n    \"interface_b\": \"i6\",\n    \"data\": {}\n}"
						}
					]
				},
				{
					"name": "Review connected R1 interface",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/interfaces/i1",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"interfaces",
								"i1"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/interfaces/i1",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"interfaces",
										"i1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:16:03 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"i1\",\n    \"node\": \"n0\",\n    \"data\": {}\n}"
						}
					]
				},
				{
					"name": "Review connected R2 interface",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/interfaces/i6",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"interfaces",
								"i6"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/interfaces/i6",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"interfaces",
										"i6"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:16:22 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"i6\",\n    \"node\": \"n1\",\n    \"data\": {}\n}"
						}
					]
				},
				{
					"name": "Review lab topology",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/topology",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"topology"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/topology",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"topology"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:27:01 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"nodes\": [\n        {\n            \"id\": \"n0\",\n            \"data\": {\n                \"node_definition\": \"iosv\",\n                \"image_definition\": \"iosv-158-3\",\n                \"label\": \"R1\",\n                \"x\": 0,\n                \"y\": 0,\n                \"state\": \"BOOTED\",\n                \"ram\": null,\n                \"cpus\": null,\n                \"data_volume\": null,\n                \"boot_disk_size\": null,\n                \"tags\": [],\n                \"configuration\": \"hostname R1\\r\\ninterface GigabitEthernet0/0\\r\\n ip address 192.0.2.1 255.255.255.0\\r\\n ip ospf 1 area 0\\r\\n no shutdown\"\n            }\n        },\n        {\n            \"id\": \"n1\",\n            \"data\": {\n                \"node_definition\": \"iosv\",\n                \"image_definition\": \"iosv-158-3\",\n                \"label\": \"R2\",\n                \"x\": 100,\n                \"y\": 0,\n                \"state\": \"BOOTED\",\n                \"ram\": null,\n                \"cpus\": null,\n                \"data_volume\": null,\n                \"boot_disk_size\": null,\n                \"tags\": [],\n                \"configuration\": \"hostname R2\\r\\ninterface GigabitEthernet0/0\\r\\n ip address 192.0.2.2 255.255.255.0\\r\\n ip ospf 1 area 0\\r\\n no shutdown\"\n            }\n        }\n    ],\n    \"links\": [\n        {\n            \"id\": \"l0\",\n            \"interface_a\": \"i1\",\n            \"interface_b\": \"i6\",\n            \"data\": {\n                \"state\": \"STARTED\"\n            }\n        }\n    ],\n    \"interfaces\": [\n        {\n            \"id\": \"i0\",\n            \"node\": \"n0\",\n            \"data\": {\n                \"label\": \"Loopback0\",\n                \"slot\": null,\n                \"state\": \"STARTED\",\n                \"type\": \"loopback\"\n            }\n        },\n        {\n            \"id\": \"i1\",\n            \"node\": \"n0\",\n            \"data\": {\n                \"label\": \"GigabitEthernet0/0\",\n                \"slot\": 0,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"i2\",\n            \"node\": \"n0\",\n            \"data\": {\n                \"label\": \"GigabitEthernet0/1\",\n                \"slot\": 1,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"i3\",\n            \"node\": \"n0\",\n            \"data\": {\n                \"label\": \"GigabitEthernet0/2\",\n                \"slot\": 2,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"i4\",\n            \"node\": \"n0\",\n            \"data\": {\n                \"label\": \"GigabitEthernet0/3\",\n                \"slot\": 3,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"i5\",\n            \"node\": \"n1\",\n            \"data\": {\n                \"label\": \"Loopback0\",\n                \"slot\": null,\n                \"state\": \"STARTED\",\n                \"type\": \"loopback\"\n            }\n        },\n        {\n            \"id\": \"i6\",\n            \"node\": \"n1\",\n            \"data\": {\n                \"label\": \"GigabitEthernet0/0\",\n                \"slot\": 0,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"i7\",\n            \"node\": \"n1\",\n            \"data\": {\n                \"label\": \"GigabitEthernet0/1\",\n                \"slot\": 1,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"i8\",\n            \"node\": \"n1\",\n            \"data\": {\n                \"label\": \"GigabitEthernet0/2\",\n                \"slot\": 2,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        },\n        {\n            \"id\": \"i9\",\n            \"node\": \"n1\",\n            \"data\": {\n                \"label\": \"GigabitEthernet0/3\",\n                \"slot\": 3,\n                \"state\": \"STARTED\",\n                \"type\": \"physical\"\n            }\n        }\n    ],\n    \"lab_notes\": \"\",\n    \"lab_title\": \"postman\",\n    \"lab_description\": \"\",\n    \"state\": \"STARTED\",\n    \"created_timestamp\": 1609333313.396607,\n    \"cluster_id\": \"cluster_1\",\n    \"version\": \"0.0.3\"\n}"
						}
					]
				},
				{
					"name": "Start lab simulation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/start",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"start"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/start",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"start"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:22:58 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "9"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "\"Success\""
						}
					]
				},
				{
					"name": "Ensure R1 is converged",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n0/check_if_converged",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"nodes",
								"n0",
								"check_if_converged"
							]
						}
					},
					"response": [
						{
							"name": "Failure: rc=1",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n0/check_if_converged",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n0",
										"check_if_converged"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:44:46 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "1"
						},
						{
							"name": "Success: rc=0",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n0/check_if_converged",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n0",
										"check_if_converged"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:46:03 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "0"
						}
					]
				},
				{
					"name": "Ensure R2 is converged",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n1/check_if_converged",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"nodes",
								"n1",
								"check_if_converged"
							]
						}
					},
					"response": [
						{
							"name": "Success: rc=0",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n1/check_if_converged",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n1",
										"check_if_converged"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:45:31 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "0"
						}
					]
				},
				{
					"name": "Stop lab simulation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/stop",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"stop"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/stop",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"stop"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:49:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "9"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "\"Success\""
						}
					]
				},
				{
					"name": "Wipe all node state",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/wipe",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"wipe"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/wipe",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"wipe"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:50:26 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "9"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "\"Success\""
						}
					]
				},
				{
					"name": "Delete R1 node",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n0",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"nodes",
								"n0"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n0",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n0"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:50:35 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "4"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "\"n0\""
						},
						{
							"name": "Failure: already deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n0",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n0"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:50:43 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"description\": \"Node not found: n0.\",\n    \"code\": 404\n}"
						}
					]
				},
				{
					"name": "Delete R2 node",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n1",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}",
								"nodes",
								"n1"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}/nodes/n1",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}",
										"nodes",
										"n1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:50:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "4"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "\"n1\""
						}
					]
				},
				{
					"name": "Delete lab",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{api_key}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}",
							"protocol": "https",
							"host": [
								"{{cml}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v0",
								"labs",
								"{{lab_id}}"
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:51:03 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								}
							],
							"cookie": [],
							"body": "\"\""
						},
						{
							"name": "Failure: already deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://{{cml}}:{{port}}/api/v0/labs/{{lab_id}}",
									"protocol": "https",
									"host": [
										"{{cml}}"
									],
									"port": "{{port}}",
									"path": [
										"api",
										"v0",
										"labs",
										"{{lab_id}}"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.14.1"
								},
								{
									"key": "Date",
									"value": "Wed, 30 Dec 2020 13:51:09 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'none'; frame-ancestors 'none'"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=63072000"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"description\": \"Lab not found: 1ddb5d.\",\n    \"code\": 404\n}"
						}
					]
				}
			],
			"description": "Sequentially build a small lab with verification steps along the way. Ends with cleanup steps.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}